
  {
    "date": "2022-07-02",
    "dailyPosts": [
      {
        "slug": "2022-07-02-A",
        "type": "blog",
        "title": "So, I understood RxJS flattening operators",
        "url": "https://medium.com/@tyagi.vinayak/so-i-understood-rxjs-flattening-operators-12e9f39aa51b",
        "desc": "RxJS is one of the most interesting JS libraries one can work with, IMHO. However, as the title says, this is not a tutorial on RxJS, but only how I managed to understand its flattening operators.",
        "dAdd": "2022-07-02",
        "dSrc": "2022-07-01",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Vinayak Tyagi",
        "aUrl": "https://medium.com/@tyagi.vinayak",
        "spkrs": ["Vinayak Tyagi"],
        "tags": ["RxJS"]
      },
      {
        "slug": "2022-07-02-B",
        "type": "podcast",
        "dur": "23",
        "title": "AMP 26: Rethinking Auth for SPAs and Micro Frontends by Manfred Steyer",
        "url": "https://open.spotify.com/episode/04mVDygYK2tcB3312rgDS6",
        "desc": "What's up everyone, this is Dariusz Kalbarczyk co-founder of NG Poland, JS Poland, AngularMaster.dev & WorkshopFest.dev. Welcome back to the Angular Master Podcast. Today, together with Manfred Steyer, who is an excellent Speaker, Trainer, Consultant and Author with focus on Angular. We will talk about Auth for SPAs and Micro Frontends",
        "dAdd": "2022-07-02",
        "dSrc": "2022-07-02",
        "srcSite": "Spotify",
        "srcUrl": "https://open.spotify.com",
        "aName": "Angular Master Podcast",
        "aUrl": "https://open.spotify.com/show/1wgZAEEIoRZ8eP78LTbyZf",
        "spkrs": ["Manfred Steyer"],
        "tags": ["Micro Frontends", "SPA"]
      },
      {
        "slug": "2022-07-02-C",
        "type": "video",
        "dur": "11",
        "title": "Typescript interfaces | Angular interfaces | Angular 14",
        "url": "https://www.youtube.com/watch?v=HUfvZDmwpiE",
        "desc": " In this video you will learn how to use interfaces in Angular, what is the importance of interfaces in Angular.",
        "dAdd": "2022-07-02",
        "dSrc": "2022-07-02",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "TechshareSKK",
        "aUrl": "https://www.youtube.com/channel/UCD8gC85u512FeCFzRV4Ll-A/videos",
        "spkrs": ["Sai Kumar Korthivada"],
        "tags": ["TypeScript"]
      },
      {
        "slug": "2022-07-02-D",
        "type": "video",
        "dur": "25",
        "title": "Error Interceptor in Angular - Quick and Easy Steps",
        "url": "https://www.youtube.com/watch?v=0KQ2LlHasos",
        "desc": "In this video we are covering Error Interceptor and showing different messages for different error status codes!",
        "dAdd": "2022-07-02",
        "dSrc": "2022-07-02",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Adnan Halilovic",
        "aUrl": "https://www.youtube.com/c/AdnanHalilovicDev/videos",
        "spkrs": ["Adnan Halilovic"],
        "tags": ["Errors"]
      }
    ]
  },
  {
    "date": "2022-07-03",
    "dailyPosts": [
      {
        "slug": "2022-07-03-A",
        "type": "blog",
        "title": "Angular Authentication Using JWT",
        "url": "https://srishty-2550.medium.com/angular-authentication-using-jwt-95d2b441446b",
        "desc": "Building a web-based product is not just a skill anymore; it's a necessity, for anything and everything that requires public attention.",
        "dAdd": "2022-07-03",
        "dSrc": "2022-07-01",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Srishty Anandita",
        "aUrl": "https://srishty-2550.medium.com",
        "spkrs": ["Srishty Anandita"],
        "tags": ["Auth", "JWT"]
      },
      {
        "slug": "2022-07-03-B",
        "type": "blog",
        "title": "JWT Token Authentication in Angular 14 and .NET Core 6 Web API",
        "url": "https://medium.com/@jaydeepvpatil225/jwt-token-authentication-in-angular-14-and-net-core-6-web-api-c3237cb4204",
        "desc": "A step-by-step guide to JWT Authentication in Angular 14.\nWe are going to discuss the JWT Authentication in Angular 14 step-by-step.",
        "dAdd": "2022-07-03",
        "dSrc": "2022-07-02",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Jaydeep Patil",
        "aUrl": "https://medium.com/@jaydeepvpatil225",
        "spkrs": ["Jaydeep Patil"],
        "tags": ["Auth", "JWT"]
      },
      {
        "slug": "2022-07-03-C",
        "type": "blog",
        "title": "How to Display the Loading Screen When Calling Any API in Angular?",
        "url": "https://medium.com/@shravanvishwakarma5/how-to-display-the-loading-screen-when-calling-any-api-in-angular-2bbb93a599f9",
        "desc": "This article aims to show you how to display a loading indicator when you are calling any API in your whole project.",
        "dAdd": "2022-07-03",
        "dSrc": "2022-07-03",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Shravan Vishwakarma",
        "aUrl": "https://medium.com/@shravanvishwakarma5",
        "spkrs": ["Shravan Vishwakarma"],
        "tags": ["Spinner"]
      },
      {
        "slug": "2022-07-03-D",
        "type": "blog",
        "title": "The new approach to the Container Presenter pattern in Angular",
        "url": "https://medium.com/generic-ui/the-new-approach-to-the-container-presenter-pattern-in-angular-dac60ca1b65e",
        "desc": "Working in an advanced frontend application requires us to use patterns. The main benefit of them is that they allow many programmers to work on one codebase. Patterns introduce aspects of common language and allow us to better understand how the code works. Some of them are universal like Singleton, Factory or Builder, but there are also others that may be less standardized, one of them is the Container Presenter.\n(photo: by Venti Views on Unsplash)",
        "dAdd": "2022-07-03",
        "dSrc": "2022-07-03",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Luke",
        "aUrl": "https://medium.com/@luke_genericui",
        "spkrs": [],
        "tags": ["Architecture"]
      },
      {
        "slug": "2022-07-03-E",
        "type": "blog",
        "title": "Differences Between Component and Module in Angular",
        "url": "https://medium.com/@himanshu_dev/differences-between-component-and-module-in-angular-ffb4ad4c045d",
        "desc": "Components control views (html). They also communicate with other components and services to bring functionality to your app.",
        "dAdd": "2022-07-03",
        "dSrc": "2022-07-03",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Himanshu Gupta",
        "aUrl": "https://medium.com/@himanshu_dev",
        "spkrs": ["Himanshu Gupta"],
        "tags": ["Components", "Modules"]
      },
      {
        "slug": "2022-07-03-F",
        "type": "video",
        "dur": "24",
        "title": "Angular 13 Course Day 11 Directives and Pipes",
        "url": "https://www.youtube.com/watch?v=ikpeztZVA7U",
        "desc": "Angular 13 Course Day 11 Directives and Pipes. In this video we have discussed the followings:\n1. Directives\n2. Pipes",
        "dAdd": "2022-07-03",
        "dSrc": "2022-07-03",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Raghvendra Kumar Jha",
        "aUrl": "https://www.youtube.com/user/raghven11/videos",
        "spkrs": ["Raghvendra Kumar Jha"],
        "tags": ["Directives", "Pipes"]
      },
      {
        "slug": "2022-07-03-G",
        "type": "blog",
        "title": "Angular RxJS — BehaviorSubject vs Subject",
        "url": "https://medium.com/@turnerran87/angular-rxjs-behaviorsubject-vs-subject-57c95e72b842",
        "desc": "A Subject is a special type of Observable which shares a single execution path among observers. This article will explore the BehaviorSubject and the Subject which are 2 very popular RxJS classes used in Angular.",
        "dAdd": "2022-07-03",
        "dSrc": "2022-07-03",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Ran Turner",
        "aUrl": "https://medium.com/@turnerran87",
        "spkrs": ["Ran Turner"],
        "tags": []
      }
    ]
  },
  {
    "date": "2022-07-04",
    "dailyPosts": [
      {
        "slug": "2022-07-04-A",
        "type": "blog",
        "title": "Show/hide or toggle element in Angular",
        "url": "https://medium.com/@ujjawalr/show-hide-or-toggle-element-in-angular-289f64f55fb4",
        "desc": "Often it is required to show an element on click of a button or a link and hiding it again on click. In simpler words, toggle element display on each click.",
        "dAdd": "2022-07-04",
        "dSrc": "2022-07-03",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Ujjawal Rohra",
        "aUrl": "https://medium.com/@ujjawalr",
        "spkrs": ["Ujjawal Rohra"],
        "tags": ["Directives", "*ngIf"]
      },
      {
        "slug": "2022-07-04-B",
        "type": "blog",
        "title": "Component Styling In Angular",
        "url": "https://paul-chesa.medium.com/component-styling-in-angular-5d2c1920f179",
        "desc": "As a frontend framework, styling is essential in Angular. This provides a basic overview of how components can be styled in Angular. Styling Angular components has been simplified since the styling used follows the basic rules of CSS or sass. The same selectors used in CSS are used similarly in Angular.",
        "dAdd": "2022-07-04",
        "dSrc": "2022-07-03",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Paul Chesa",
        "aUrl": "https://paul-chesa.medium.com",
        "spkrs": ["Paul Chesa"],
        "tags": []
      },
      {
        "slug": "2022-07-04-C",
        "type": "video",
        "dur": "150",
        "title": "Spring Data JPA Pagination with Angular",
        "url": "https://www.youtube.com/watch?v=JNxWZXOsU0w",
        "desc": "Pagination example with Spring Data JPA and Angular. Learn how to implement Pagination in Spring Data JPA using a Spring Boot project and Angular in the front end.",
        "dAdd": "2022-07-04",
        "dSrc": "2022-07-03",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Get Arrays",
        "aUrl": "https://www.youtube.com/c/GetArrays/videos",
        "spkrs": [],
        "tags": ["Pagination"]
      },
      {
        "slug": "2022-07-04-D",
        "type": "podcast",
        "dur": "59",
        "title": "S2E23 - Building A Customer-Focused Mindset with Carl Bergenhem",
        "url": "https://www.spreaker.com/user/14532324/s2e23-building-a-customer-focused-mindse?utm_campaign=episode-title&utm_medium=app&utm_source=widget",
        "desc": "In this episode of NgXP, we ask how you can build a customer-focused mindset as a software engineer. And who better to help us with this discussion than Carl Bergenhem, the Principal Product Manager for KendoUI! Carl has spent his career becoming an expert in helping individuals, teams, and entire organizations go from being 'feature factories' to empathetic developers of top-notch, customer-focused products. He gives great advice for how to implement these practices into your teams and shares how you'll find greater job satisfaction than ever before.",
        "dAdd": "2022-07-04",
        "dSrc": "2022-07-04",
        "srcSite": "Spreaker",
        "srcUrl": "https://spreaker.com",
        "aName": "Angular Experience",
        "aUrl": "https://angular-experience.web.app/episodes",
        "spkrs": ["Carl Bergenhem", "Brooke Avery", "Erik Slack"],
        "tags": []
      },
      {
        "slug": "2022-07-04-E",
        "type": "blog",
        "title": "Async/Await in Angular ngOnInit using TypeScript Decorator",
        "url": "https://medium.com/@kartikjagdale11/async-await-in-angular-ngoninit-using-typescript-decorator-b8b35963407c",
        "desc": "Lots of times, there is a need to load data using Promises from API before the page loads or Class initialization. To achieve this I see many of my fellow devs use async on ngOnInit so they can await on data fetch API method inside ngOnInit ...",
        "dAdd": "2022-07-04",
        "dSrc": "2022-07-04",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Kartik Jagdale",
        "aUrl": "https://medium.com/@kartikjagdale11",
        "spkrs": ["Kartik Jagdale"],
        "tags": ["Async/await", "ngOnInit", "Decorators"]
      },
      {
        "slug": "2022-07-04-F",
        "type": "blog",
        "title": "Ng-News: Episode 22/26",
        "url": "https://dev.to/rainerhahnekamp/ng-news-episode-2226-397o",
        "desc": "It has been two weeks since the last episode. In the meantime, NgRx was released in version 14. It comes with createActionGroup, which reduces the amount of code required for creating actions.",
        "dAdd": "2022-07-04",
        "dSrc": "2022-07-04",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Rainer Hahnekamp",
        "aUrl": "https://dev.to/rainerhahnekamp",
        "spkrs": ["Rainer Hahnekamp"],
        "tags": []
      },
      {
        "slug": "2022-07-04-G",
        "type": "video",
        "dur": "9",
        "title": "Angular Material table custom style | Angular Material",
        "url": "https://www.youtube.com/watch?v=k61DyfeP0cE",
        "desc": "In this video we will see how to customize Angular Material datepicker CSS. At the end of this video you will also able write Angular Material datepicker custom style.",
        "dAdd": "2022-07-04",
        "dSrc": "2022-07-04",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Quick Code Academy",
        "aUrl": "https://www.youtube.com/channel/UClNKTLw3jZm6_OgQuVBUl0w/videos",
        "spkrs": [],
        "tags": ["Angular Material"]
      },
      {
        "slug": "2022-07-04-H",
        "type": "video",
        "dur": "134",
        "title": "Angular 14 State Management CRUD Example With NgRx(14)",
        "url": "https://www.youtube.com/watch?v=G0jPyuXjxKk",
        "desc": "",
        "dAdd": "2022-07-04",
        "dSrc": "2022-07-04",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Naveen Bommidi Tech Seeker",
        "aUrl": "https://www.youtube.com/c/NaveenTechSeeker/videos",
        "spkrs": ["Naveen Bommidi"],
        "tags": ["NgRx"]
      },
      {
        "slug": "2022-07-04-J",
        "type": "video",
        "dur": "10",
        "title": "Get to Know the 2022 ng-conf Speakers | Alfredo Perez | ng-conf 2022",
        "url": "https://www.youtube.com/watch?v=NKS4_Y5z0Bs",
        "desc": "",
        "dAdd": "2022-07-04",
        "dSrc": "2022-07-04",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "ng-conf",
        "aUrl": "https://www.youtube.com/c/ngconfonline/videos",
        "spkrs": ["Alfredo Perez"],
        "tags": []
      }
    ]
  },
  {
    "date": "2022-07-04",
    "dailyPosts": [
      {
        "slug": "2022-07-05-A",
        "type": "blog",
        "title": "Observable in RxJS (Hot & Cold)",
        "url": "https://alfa.hashnode.dev/observable-in-rxjs-hot-and-cold",
        "desc": "Observables are the newest thing in town and being a frontend dev. They will never leave alone.",
        "dAdd": "2022-07-05",
        "dSrc": "2022-07-04",
        "srcSite": "Hashnode",
        "srcUrl": "https://hashnode.com",
        "aName": "Anurag Saran",
        "aUrl": "https://hashnode.com/@alfa4195",
        "spkrs": ["Anurag Saran"],
        "tags": ["RxJS"]
      },
      {
        "slug": "2022-07-05-B",
        "type": "blog",
        "title": "Understanding @Output and EventEmitter in Angular | iFour Technolab",
        "url": "https://dev.to/harshalsuthar/understanding-output-and-eventemitter-in-angular-ifour-technolab-2egn",
        "desc": "What is @Output? As we all know that you can archive two-way data binding with [(ngModel)], but what if we want to share data with one component to another component? To accomplish that we can use @Input and @Output.",
        "dAdd": "2022-07-05",
        "dSrc": "2022-07-04",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Harshal Suthar",
        "aUrl": "https://dev.to/ifourtechnolab",
        "spkrs": ["Harshal Suthar"],
        "tags": ["@Input", "@Output", "EventEmitter", "Data Transfer"]
      },
      {
        "slug": "2022-07-05-C",
        "type": "video",
        "dur": "13",
        "title": "Angular Chat App with Firebase (5/N): Styling the chat bubbles and formatting the dates",
        "url": "https://www.youtube.com/watch?v=U4DrqCqIWnU",
        "desc": "This is Part 5 of a series of videos on creating a chat app with Angular Material and Firebase Firestore Database. In this part, we'll add finishing touches such as styling the chat bubbles, formatting the dates and adding auto scroll to new messages functionality.",
        "dAdd": "2022-07-05",
        "dSrc": "2022-07-05",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Zoaib Khan",
        "aUrl": "https://www.youtube.com/c/ZoaibKhan/videos",
        "spkrs": ["Zoaib Khan"],
        "tags": ["Firebase"]
      },
      {
        "slug": "2022-07-05-D",
        "type": "blog",
        "title": "Shared State | Progressive Reactivity in Angular",
        "url": "https://dev.to/this-is-angular/progressive-reactivity-in-angular-1d40",
        "desc": "The more stateful your application is, the more likely you will run into inconsistent state, or state that doesn't react. For example: A user opens a message but the unseen message count doesn't react. ...",
        "dAdd": "2022-07-05",
        "dSrc": "2022-07-05",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Mike Pearson",
        "aUrl": "https://dev.to/mfp22",
        "spkrs": ["Mike Pearson"],
        "tags": ["RxJS"]
      },
      {
        "slug": "2022-07-05-E",
        "type": "video",
        "dur": "21",
        "title": "Angular 14 Router - Updating the Page Title (2022)",
        "url": "https://www.youtube.com/watch?v=WKCweQOI9-U",
        "desc": "Angular 14 simplifies how we can update the title of our pages. Every Angular Route has a dedicated property called 'title' where you can define a title or the resolver that can perform some logic for more complex cases. Also, you can specify a global strategy that extends the default title strategy and implements your own way of how the title should be updated. All these things will be covered in this video.",
        "dAdd": "2022-07-05",
        "dSrc": "2022-07-05",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Decoded Frontend",
        "aUrl": "https://www.youtube.com/c/DecodedFrontend/videos",
        "spkrs": ["Dmytro Mezhenskyi"],
        "tags": ["Routing", "Title", "setTitle()"]
      },
      {
        "slug": "2022-07-05-F",
        "type": "video",
        "dur": "24",
        "title": "Image Cropping and Transformation with Ionic Angular",
        "url": "https://www.youtube.com/watch?v=06K7nzGYRtU",
        "desc": "Learn to crop images in your Ionic Angular application with ngx-image-cropper and Capacitor!",
        "dAdd": "2022-07-05",
        "dSrc": "2022-07-05",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Simon Grimm",
        "aUrl": "https://www.youtube.com/c/SimonGrimmDev/videos",
        "spkrs": ["Simon Grimm"],
        "tags": ["Ionic", "Capacitor"]
      },
      {
        "slug": "2022-07-05-G",
        "type": "video",
        "dur": "213",
        "title": "Angular Universal - What can we do?",
        "url": "https://youtu.be/inOzoOzhp54?t=143",
        "desc": "Join me as I take a deepdive into Angular Universal, and build out a high performing Angular Universal application using the Open Source PokeApi. In this video we cover the main differences between single page application, pre-rendered application, and server side renderered application.",
        "dAdd": "2022-07-05",
        "dSrc": "2022-07-05",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Geometric Jim",
        "aUrl": "https://www.youtube.com/user/TheJimbodrury/videos",
        "spkrs": [],
        "tags": ["Angular Universal"]
      },
      {
        "slug": "2022-07-05-H",
        "type": "blog",
        "title": "Sliders are like onions: three gradient layers of a single slider",
        "url": "https://dev.to/angular/sliders-are-like-onions-three-gradient-layers-of-a-single-slider-1nia",
        "desc": "Our library Taiga UI contains hundreds of useful components, directives, and services. The code maintainability is a pivotal issue for our UI Kit library. That is why we always try to write as little code as possible and look for native solutions.",
        "dAdd": "2022-07-05",
        "dSrc": "2022-07-05",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Barsukov Nikita",
        "aUrl": "https://dev.to/nsbarsukov",
        "spkrs": ["Barsukov Nikita"],
        "tags": ["Slider"]
      },
      {
        "slug": "2022-07-05-J",
        "type": "blog",
        "title": "Directives In Angular",
        "url": "https://dev.to/angular/directives-in-angular-48df",
        "desc": "Hi readers, welcome to the third part of the series, where we get introduced to Directives! In the last two articles, we talked about Components and Data Bindings. If you are a beginner like me, we might want to go through them first and then hop on to this article.",
        "dAdd": "2022-07-05",
        "dSrc": "2022-07-05",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Haimantika Mitra",
        "aUrl": "https://dev.to/haimantika",
        "spkrs": ["Haimantika Mitra"],
        "tags": ["Directives"]
      },
      {
        "slug": "2022-07-05-K",
        "type": "video",
        "dur": "5",
        "title": "How to Use the Angular Click Event in Angular - Relearning Angular Part 13",
        "url": "https://www.youtube.com/watch?v=030TVrCuS9w",
        "desc": "",
        "dAdd": "2022-07-05",
        "dSrc": "2022-07-05",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Coding Under Pressure",
        "aUrl": "https://www.youtube.com/channel/UCdGYTnk-Ll4S6yOsYwU8D2w/videos",
        "spkrs": [],
        "tags": []
      }
    ]
  },
  {
    "date": "2022-07-06",
    "dailyPosts": [
      {
        "slug": "2022-07-06-A",
        "type": "blog",
        "title": "Simple Derived State (Angular)",
        "url": "https://dev.to/this-is-angular/simple-derived-state-progressive-reactivity-in-angular-48oe",
        "desc": "This series explores how we can keep our code declarative as we adapt our features to progressively higher levels of complexity.",
        "dAdd": "2022-07-06",
        "dSrc": "2022-07-06",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Mike Pearson",
        "aUrl": "https://dev.to/mfp22",
        "spkrs": ["Mike Pearson"],
        "tags": ["RxJS"]
      },
      {
        "slug": "2022-07-06-B",
        "type": "podcast",
        "dur": "56",
        "title": "S3 E16 - AWS Amplify for Frontend Developers",
        "url": "https://www.spreaker.com/user/ng-conf/ap-show-s3e16-michael-liendo-edit-1",
        "desc": "If you're a Frontend Developer that has been stuck on side projects due to a lack of backend/auth/database layers knowledge, then this show is for you! In this episode, Michael Liendo demonstrates how AWS Amplify's powerful tooling makes backend functions approachable and enjoyable to Frontend Devs.",
        "dAdd": "2022-07-06",
        "dSrc": "2022-07-06",
        "srcSite": "Spreaker",
        "srcUrl": "https://www.spreaker.com",
        "aName": "The Angular Plus Show",
        "aUrl": "https://www.spreaker.com/show/angular-show",
        "spkrs": ["Michael Liendo"],
        "tags": ["AWS"]
      },
      {
        "slug": "2022-07-06-C",
        "type": "video",
        "dur": "30",
        "title": "Angular 14 Material UI (dataTable with pagination + sorting + filtering + event handling)",
        "url": "https://www.youtube.com/watch?v=3JTorbC-340",
        "desc": "This video explains how to implement material UI in Angular 14 and also explains the implementation of below topics",
        "dAdd": "2022-07-06",
        "dSrc": "2022-07-06",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Nihira Techiees",
        "aUrl": "https://www.youtube.com/c/NihiraTechiees/videos",
        "spkrs": [],
        "tags": ["Pagination"]
      }, 
      {
        "slug": "2022-07-06-D",
        "type": "video",
        "dur": "30",
        "title": "10. Upload Images in Angular (Using Spring Boot API)",
        "url": "https://www.youtube.com/watch?v=oXeg_q2lKGg",
        "desc": "",
        "dAdd": "2022-07-06",
        "dSrc": "2022-07-06",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Learn Programming Yourself",
        "aUrl": "https://www.youtube.com/c/LearnProgrammingYourself/videos",
        "spkrs": [],
        "tags": ["File Upload"]
      },
      {
        "slug": "2022-07-06-E",
        "type": "blog",
        "title": "How to use Angular HttpInterceptor for caching",
        "url": "https://medium.com/@nimeresam95/how-to-use-angular-httpinterceptor-for-caching-12b65c485963",
        "desc": "Here we aren't talking about how useful HttpInterceptor is, since a lot of articles have been written about it. Instead, we will talk about how to use it for caching requests to make your application faster.",
        "dAdd": "2022-07-06",
        "dSrc": "2022-07-06",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Nimer Esam",
        "aUrl": "https://medium.com/@nimeresam95",
        "spkrs": ["Nimer Esam"],
        "tags": ["HttpInterceptors", "Caching"]
      },
      {
        "slug": "2022-07-06-F",
        "type": "blog",
        "title": "Upgrading AngularJS (1.x) to Angular 12 — A Retrospective",
        "url": "https://medium.com/immuta-engineering/upgrading-angularjs-1-x-to-angular-12-a-retrospective-b9f6f05d43e6",
        "desc": "For years AngularJS (1.x) was Immuta's platform of choice for building web based applications. Yes it had its quirks, and sometimes it had some issues with performance, but it helped the engineering team rapidly build the industry leading Data Governance Platform known to the world as Immuta.",
        "dAdd": "2022-07-06",
        "dSrc": "2022-07-06",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Floyd Hawkes",
        "aUrl": "https://medium.com/@floydhawkes",
        "spkrs": ["Floyd Hawkes"],
        "tags": ["Update"]
      },
      {
        "slug": "2022-07-06-G",
        "type": "video",
        "dur": "7",
        "title": "Learn Angular Material | Part #9 | Grid List | Angular Material for Beginner",
        "url": "https://www.youtube.com/watch?v=4BihlRGmn3s",
        "desc": "",
        "dAdd": "2022-07-06",
        "dSrc": "2022-07-06",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "OnTech",
        "aUrl": "https://www.youtube.com/channel/UC1-XaZ0_TK-oxz4i7CRuXUA/videos",
        "spkrs": [],
        "tags": ["Angular Material"]
      },
      {
        "slug": "2022-07-06-H",
        "type": "blog",
        "title": "Configuring the Kendo UI for Angular Rich Text Editor",
        "url": "https://www.telerik.com/blogs/configuring-kendo-ui-angular-rich-text-editor",
        "desc": "Kendo UI for Angular's Rich Text Editor is probably exactly what you want to let your users enter formatted (though unstructured) text. But you've got lots of customization options if you want to take advantage of them to get exactly the editor you want.",
        "dAdd": "2022-07-06",
        "dSrc": "2022-07-06",
        "srcSite": "Progress Telerik Blog",
        "srcUrl": "https://www.telerik.com/blogs/web-angular",
        "aName": "Peter Vogel",
        "aUrl": "https://www.telerik.com/blogs/author/peter-vogel",
        "spkrs": ["Peter Vogel"],
        "tags": ["Kendo UI"]
      },
      {
        "slug": "2022-07-06-J",
        "type": "release",
        "title": "Angular Release: v14.0.5",
        "url": "https://github.com/angular/angular/releases/tag/14.0.5",
        "desc": "",
        "dAdd": "2022-07-06",
        "dSrc": "2022-07-06",
        "srcSite": "GitHub Angular",
        "srcUrl": "https://github.com/angular/angular/releases",
        "aName": "Andrew Scott",
        "aUrl": "https://github.com/atscott",
        "spkrs": [],
        "tags": ["Release"]
      },
      {
        "slug": "2022-07-06-K",
        "type": "release",
        "title": "Angular Release: v14.1.0-next.4",
        "url": "https://github.com/angular/angular/releases/tag/14.1.0-next.4",
        "desc": "",
        "dAdd": "2022-07-06",
        "dSrc": "2022-07-06",
        "srcSite": "GitHub Angular",
        "srcUrl": "https://github.com/angular/angular/releases",
        "aName": "Andrew Scott",
        "aUrl": "https://github.com/atscott",
        "spkrs": [],
        "tags": ["Release"]
      },
      {
        "slug": "2022-07-06-L",
        "type": "video",
        "dur": "12",
        "title": "Extended Diagnostics in Angular",
        "url": "https://www.youtube.com/watch?v=gCKjsd4gaxI",
        "desc": "Join our very own Doug Parker as he explores Angular's Extended Diagnostics tooling. What type of extended diagnostic do you think would be great?",
        "dAdd": "2022-07-06",
        "dSrc": "2022-07-06",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Angular",
        "aUrl": "https://www.youtube.com/c/Angular/videos",
        "spkrs": ["Doug Parker"],
        "tags": ["Extended Diagnostics"]
      },
      {
        "slug": "2022-07-06-M",
        "type": "video",
        "dur": "11",
        "title": "How to handle modals 'declaratively/reactively' with Angular (and is it any better?)",
        "url": "https://www.youtube.com/watch?v=vh4WLrqGPEQ",
        "desc": "In this video, we take a look at two ways to handle coding the same modal in an Ionic and Angular application - one declarative and one imperative. The imperative example mostly utilises writing logic in the component's class, whereas the declarative example utilises properties on the component in the template.",
        "dAdd": "2022-07-06",
        "dSrc": "2022-07-06",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Joshua Morony",
        "aUrl": "https://www.youtube.com/c/JoshuaMorony/videos",
        "spkrs": ["Joshua Morony"],
        "tags": ["RxJS"]
      },
      {
        "slug": "2022-07-06-N",
        "type": "video",
        "dur": "14",
        "title": "Get to Know the 2022 ng-conf Speakers | Jennifer Wadella | ng-conf 2022",
        "url": "https://www.youtube.com/watch?v=4_yKlcspGkI",
        "desc": "",
        "dAdd": "2022-07-06",
        "dSrc": "2022-07-06",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "ng-conf",
        "aUrl": "https://www.youtube.com/c/ngconfonline/videos",
        "spkrs": ["Jennifer Wadella"],
        "tags": []
      }
    ]
  },
  {
    "date": "2022-07-07",
    "dailyPosts": [
      {
        "slug": "2022-07-07-A",
        "type": "video",
        "dur": "10",
        "title": "Incorporate ComponentStore into your Angular App | Magz Bautista-Lee | Ioniconf 2022",
        "url": "https://www.youtube.com/watch?v=fm7rWULEpMM",
        "desc": "Learn how the cross-platform movement is making web and app development more accessible, collaborative, successful, and enjoyable. Hear from community leaders, contemporary companies, and your fellow developers as they share how to out-code, out-ship, and outrun the competition using the power of open source and the Web.",
        "dAdd": "2022-07-07",
        "dSrc": "2022-07-06",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Ionic",
        "aUrl": "https://www.youtube.com/c/Ionicframework/videos",
        "spkrs": ["Magz Bautista-Lee"],
        "tags": ["ComponentStore"]
      },
      {
        "slug": "2022-07-07-B",
        "type": "podcast",
        "dur": "43",
        "title": "Episode 191: First Impressions of Angular 14",
        "url": "https://webrush.io/episodes/episode-191-first-impressions-of-angular-14",
        "desc": "John, Ward, and Dan talk about their initial impressions of Angular 14. How has moving to a module-less world changed? What are tree shakable error messages? Is Angular improved by version 14?",
        "dAdd": "2022-07-07",
        "dSrc": "2022-07-07",
        "srcSite": "Web Rush",
        "srcUrl": "https://webrush.io",
        "aName": "Web Rush",
        "aUrl": "https://webrush.io",
        "spkrs": ["John Papa", "Ward Bell", "Dan Wahlin"],
        "tags": []
      },
      {
        "slug": "2022-07-07-C",
        "type": "podcast",
        "dur": "45",
        "title": "Standalone Component - AiA 349",
        "url": "https://topenddevs.com/podcasts/adventures-in-angular/episodes/standalone-component-aia-349",
        "desc": "One of the upcoming future features in the Angular framework will revolve around 'Standalone Components' (SC) vs. 'Optional NgModules'. When SC makes NgModules optional, it depreciates their value in the long run and could lead us to determine their necessity.  Given that Angular is an enterprise framework, can we have modulars in an Angular application or should we eliminate this?  Angular expert Rainer Hahnekamp joins the show to share his perspective on how SC will affect modularity in an Angular application.",
        "dAdd": "2022-07-07",
        "dSrc": "2022-07-07",
        "srcSite": "DevChat.tv",
        "srcUrl": "https://devchat.tv",
        "aName": "Adventures In Angular",
        "aUrl": "https://topenddevs.com/podcasts/adventures-in-angular/",
        "spkrs": ["Rainer Hahnekamp"],
        "tags": ["Standalone Components"]
      },
      {
        "slug": "2022-07-07-D",
        "type": "blog",
        "title": "Template form Validation Angular",
        "url": "https://akbarkhan904412.medium.com/template-form-validation-angular-a47201e2f2fd",
        "desc": "Hi Guys Today I am going for Form Validation in Angular .In Below Examples we are using bootstrap to design our form",
        "dAdd": "2022-07-07",
        "dSrc": "2022-07-07",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Akbar Sheikh",
        "aUrl": "https://akbarkhan904412.medium.com",
        "spkrs": ["Akbar Sheikh"],
        "tags": ["Forms", "Template Driven Forms", "Validation"]
      },
      {
        "slug": "2022-07-07-E",
        "type": "video",
        "dur": "47",
        "title": "Reactive (Typed) forms with Material UI Modal Popup in Angular 14 | .NET Core service + CRUD)",
        "url": "https://www.youtube.com/watch?v=SMk-7jIxkoA",
        "desc": "This video explains below topics\n1. Angular 14 CRUD with reactive forms\n2. Implementing Material UI Modal Popup and Form controls like input ,select, checkbox and radio button\n3. Implementing alertifyjs for notifications",
        "dAdd": "2022-07-07",
        "dSrc": "2022-07-07",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Nihira Techiees",
        "aUrl": "https://www.youtube.com/c/NihiraTechiees/videos",
        "spkrs": [],
        "tags": ["Forms", "Typed Forms", "Reactive Forms", "CRUD"]
      },
      {
        "slug": "2022-07-07-F",
        "type": "video",
        "dur": "23",
        "title": "11. Showing the Selected Image Preview (Uploading Images in Angular)",
        "url": "https://www.youtube.com/watch?v=FGhsXuIyFpM",
        "desc": "In this session, we will see how can we show the selected image preview in Angular. In the last session, we seen how can we upload images using form data in Angular. This session is going to be next part of previous session.",
        "dAdd": "2022-07-07",
        "dSrc": "2022-07-07",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Learn Programming Yourself",
        "aUrl": "https://www.youtube.com/c/LearnProgrammingYourself/videos",
        "spkrs": [],
        "tags": []
      },
      {
        "slug": "2022-07-07-G",
        "type": "blog",
        "title": "Complex Changes and Derived State (Angular)",
        "url": "https://dev.to/this-is-angular/complex-changes-and-derived-state-progressive-reactivity-in-angular-1pmj",
        "desc": "This series explores how we can keep our code declarative as we adapt our features to progressively higher levels of complexity.",
        "dAdd": "2022-07-07",
        "dSrc": "2022-07-07",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Mike Pearson",
        "aUrl": "https://dev.to/mfp22",
        "spkrs": ["Mike Pearson"],
        "tags": ["RxJS"]
      },
      {
        "slug": "2022-07-07-H",
        "type": "blog",
        "title": "Angular Standalone Component — Future of Angular",
        "url": "https://dev.to/ankit_k_sharma/angular-standalone-component-future-of-angular-37l2",
        "desc": "Today, we will discuss about the future of Angular, that is --standalone. It refers to components, directives, or pipes that can be used independently of NgModule.",
        "dAdd": "2022-07-07",
        "dSrc": "2022-07-07",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Ankit Kumar Sharma",
        "aUrl": "https://dev.to/ankit_k_sharma",
        "spkrs": ["Ankit Kumar Sharma"],
        "tags": ["Standalone Components"]
      }
    ]
  },
  {
    "date": "2022-07-08",
    "dailyPosts": [
      {
        "slug": "2022-07-08-A",
        "type": "blog",
        "title": "Reusable State Patterns (Angular)",
        "url": "https://dev.to/this-is-angular/reusable-state-patterns-angular-59l9",
        "desc": "This series explores how we can keep our code declarative as we adapt our features to progressively higher levels of complexity.",
        "dAdd": "2022-07-08",
        "dSrc": "2022-07-08",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Mike Pearson",
        "aUrl": "https://dev.to/mfp22",
        "spkrs": ["Mike Pearson"],
        "tags": ["NgRx"]
      },
      {
        "slug": "2022-07-08-B",
        "type": "blog",
        "title": "Creating a timestamp in TypeScript | Quickies in Angular",
        "url": "https://medium.com/ideacoding-lab/creating-a-timestamp-in-typescript-quickies-in-angular-7c402627fd4f",
        "desc": "Frequently, I found myself needing a time (current date), a simple solution. Interesting enough, there is no simple solution in JavaScript. Here goes my simple solution.\n(photo: by Towfiqu Barbhuiya on Unsplash)",
        "dAdd": "2022-07-08",
        "dSrc": "2022-07-08",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Jorge Guerra Pires, PhD",
        "aUrl": "https://medium.com/@jorgeguerrapires",
        "spkrs": ["Jorge Guerra Pires"],
        "tags": ["TypeScript"]
      },
      {
        "slug": "2022-07-08-C",
        "type": "video",
        "dur": "71",
        "title": "Class 20: ToDo List with Angular",
        "url": "https://www.youtube.com/watch?v=IRaxENxZnfo",
        "desc": "",
        "dAdd": "2022-07-08",
        "dSrc": "2022-07-08",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Vicki Bealman",
        "aUrl": "https://www.youtube.com/channel/UC05RoruJ1PVjmS1I_d8E26g/videos",
        "spkrs": ["Vicki Bealman"],
        "tags": []
      },
      {
        "slug": "2022-07-08-D",
        "type": "blog",
        "title": "Angular: ElementRef Interface",
        "url": "https://medium.com/@anooprvarrier/angular-elementref-interface-c826cd5db732",
        "desc": "In this post, we will discuss about ElementRef in Angular. We will start with basic introduction, few examples of ElementRef use cases , limitation of using ElementRef and some really cool coding along with our journey.",
        "dAdd": "2022-07-08",
        "dSrc": "2022-07-08",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Anoop R Warrier",
        "aUrl": "https://medium.com/@anooprvarrier",
        "spkrs": ["Anoop R Warrier"],
        "tags": ["ElementRef"]
      },
      {
        "slug": "2022-07-08-E",
        "type": "blog",
        "title": "The TypeScript Gluten Behind NgRx createActionGroup",
        "url": "https://dev.to/mikeryandev/the-typescript-gluten-behind-ngrx-createactiongroup-4ce9",
        "desc": "Creating strongly typed APIs in TypeScript relies on understanding advanced typing strategies. NgRx heavily depends on typing strategies such as string literal types, conditional types, and template literal types to create an API surface that encourages consumers to build strongly typed applications. Let's take a look at an example API in the NgRx codebase to see how NgRx leverages these advanced typing techniques.",
        "dAdd": "2022-07-08",
        "dSrc": "2022-07-08",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Mike Ryan",
        "aUrl": "https://dev.to/mikeryandev",
        "spkrs": ["Mike Ryan"],
        "tags": ["NgRx"]
      },
      {
        "slug": "2022-07-08-F",
        "type": "blog",
        "title": "How to Create an Angular Dropdown Control in Your Web Application",
        "url": "https://dev.to/grapecity/how-to-create-an-angular-dropdown-control-in-your-web-application-ogh",
        "desc": "One of the most common input types that users interact with online, dropdowns allow users to select from various items. Many organizations use dropdown menus to allow users to complete an online form accurately. They are used for choosing options such as selecting your country, language, or responding to a question where there are only a few possible responses.",
        "dAdd": "2022-07-08",
        "dSrc": "2022-07-08",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Chelsea Devereaux",
        "aUrl": "https://dev.to/chelseadevereaux",
        "spkrs": ["Chelsea Devereaux"],
        "tags": ["Select"]
      },
      {
        "slug": "2022-07-08-G",
        "type": "blog",
        "title": "Auth Guard in Angular to prevent URL visit",
        "url": "https://akbarkhan904412.medium.com/auth-guard-in-angular-to-prevent-url-visit-47393550cb5b",
        "desc": "Hi Guys Today we are going to Learn about how to implement Auth Guard in Angular Application and How you can apply",
        "dAdd": "2022-07-08",
        "dSrc": "2022-07-08",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Akbar Sheikh",
        "aUrl": "https://akbarkhan904412.medium.com",
        "spkrs": ["Akbar Sheikh"],
        "tags": ["Route Guards"]
      },
      {
        "slug": "2022-07-08-H",
        "type": "blog",
        "title": "Jest Testing: Mocking modules and handling module state using TypeScript and ES6",
        "url": "https://dev.to/thetogi/jest-testing-mocking-modules-and-handling-module-state-using-typescript-and-es6-3jk4",
        "desc": "Jest is a popular testing framework that works with projects such as Babel, TypeScript, Node, React, Angular, and Vue. Like other testing frameworks, Jest offers the ability to mock and spy on javascript objects and modules with their respective properties and functions. In addition, it offers a handful of flexible ways to mock javascript modules depending on your test's demands.",
        "dAdd": "2022-07-08",
        "dSrc": "2022-07-08",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Derek Askham",
        "aUrl": "https://dev.to/thetogi",
        "spkrs": ["Derek Askham"],
        "tags": ["Testing", "Jest"]
      }
    ]
  },
  {
    "date": "2022-07-09",
    "dailyPosts": [
      {
        "slug": "2022-07-09-A",
        "type": "video",
        "dur": "78",
        "title": "Angular(v14) CRUD Example Using NgRx Data(v14)",
        "url": "https://www.youtube.com/watch?v=WApTjVO_sPQ",
        "desc": "",
        "dAdd": "2022-07-09",
        "dSrc": "2022-07-09",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Naveen Bommidi Tech Seeker",
        "aUrl": "https://www.youtube.com/c/NaveenTechSeeker/videos",
        "spkrs": ["Naveen Bommidi"],
        "tags": ["NgRx", "CRUD"]
      },
      {
        "slug": "2022-07-09-B",
        "type": "blog",
        "title": "Reusable Loader directive - Angular",
        "url": "https://dev.to/devlazar/reusable-loader-directive-angular-498h",
        "desc": "Hi all! Hope you are all having a great weekend. I am currently working on multiple platforms using ReactJS, Angular 12 and Node.js.",
        "dAdd": "2022-07-09",
        "dSrc": "2022-07-09",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "devlazar",
        "aUrl": "https://dev.to/devlazar",
        "spkrs": [],
        "tags": ["Directives", "Custom"]
      },
      {
        "slug": "2022-07-09-C",
        "type": "blog",
        "title": "Angular: This is how I understood how to use Mixins to reuse logic between components",
        "url": "https://ramya-bala221190.medium.com/angular-this-is-how-i-understood-how-to-use-mixins-to-reuse-logic-between-components-cda729297de2",
        "desc": "The documentation on Mixins can be quite confusing and overwhelming in the beginning. In simple words, A mixin class is used to handle some behavior and other regular classes can easily access this behavior by just extending this mixin class. It's an easy way to promote reusability of logic between multiple classes.",
        "dAdd": "2022-07-09",
        "dSrc": "2022-07-09",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "AngularEnthusiast",
        "aUrl": "https://medium.com/@ramya-bala221190",
        "spkrs": [],
        "tags": ["Mixins"]
      },
      {
        "slug": "2022-07-09-D",
        "type": "blog",
        "title": "How To Pass Data From A Page To Another In Angular",
        "url": "https://medium.com/@peterdgreat/pass-data-from-a-page-to-another-in-angular-c6b4d77d46b9",
        "desc": "As a front-end developer, it is your job to display data to users in a way that makes sense. Today you will learn an easy way to pass data from one page to another in Angular, the browser history saves the day!\n(photo: by Tudor Baciu on Unsplash)",
        "dAdd": "2022-07-09",
        "dSrc": "2022-07-09",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Peterdgreat",
        "aUrl": "https://medium.com/@peterdgreat",
        "spkrs": [],
        "tags": ["Data Transfer"]
      },
      {
        "slug": "2022-07-09-E",
        "type": "video",
        "dur": "17",
        "title": "Angular 14 typed reactive forms",
        "url": "https://www.youtube.com/watch?v=Ve41qftmMK0",
        "desc": "Angular 14 typed reactive forms - We do an Overview of Typed Forms. Automated Untyped Forms Migration which happens when we migrate an existing Angular app to Angular 14.  We take a look at the concepts of Nullability, specifying Explicit Type for form controls. We explore the type safety for Dynamic, Homogenous Collections FormArray.",
        "dAdd": "2022-07-09",
        "dSrc": "2022-07-09",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "JS Frameworks",
        "aUrl": "https://www.youtube.com/c/JSFrameworks/videos",
        "spkrs": [],
        "tags": ["Typed Forms", "Reactive Forms"]
      }
    ]
  },
  {
    "date": "2022-07-10",
    "dailyPosts": [
      {
        "slug": "2022-07-10-A",
        "type": "blog",
        "title": "A custom right click menu on Angular: Feat PrimeNg",
        "url": "https://dev.to/shrihari/a-custom-right-click-menu-on-angular-feat-primeng-4hji",
        "desc": "This implementation uses PrimeNg to ease our implementation on context menu rather more focusing on copy and paste options.",
        "dAdd": "2022-07-10",
        "dSrc": "2022-07-10",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Shrihari Mohan",
        "aUrl": "https://medium.com/@shriharimohan",
        "spkrs": ["Shrihari Mohan"],
        "tags": ["PrimeNG"]
      },
      {
        "slug": "2022-07-10-B",
        "type": "blog",
        "title": "Separate numbers in input with Angular Directive",
        "url": "https://dev.to/rezanazari/separate-numbers-in-input-with-angular-directive-p4k",
        "desc": "Imagine that you have an input tag in your project for entering credit card numbers and you want to separate the entered numbers with a few digits for better readability.",
        "dAdd": "2022-07-10",
        "dSrc": "2022-07-10",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Reza Nazari",
        "aUrl": "https://dev.to/rezanazari",
        "spkrs": [],
        "tags": ["Directives", "Custom"]
      },
      {
        "slug": "2022-07-10-C",
        "type": "video",
        "dur": "24",
        "title": "Ionic 6 Angular - Add Input Forms Dynamically",
        "url": "https://www.youtube.com/watch?v=ziTBF-OUUjg",
        "desc": "In this video, we are going to 'Add Input Forms Dynamically' using Ionic Angular for PWA, Android & ios",
        "dAdd": "2022-07-10",
        "dSrc": "2022-07-10",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Coding Technyks",
        "aUrl": "https://www.youtube.com/c/CodingTechnyks/videos",
        "spkrs": [],
        "tags": ["Ionic", "Forms"]
      },
      {
        "slug": "2022-07-10-D",
        "type": "video",
        "dur": "24",
        "title": "How To Deploy Angular 14 .Net 6 Web App To Azure full tutorial!",
        "url": "https://www.youtube.com/watch?v=u_CRppLcC9k",
        "desc": "In this tutorial I will cover every single thing that you will need to do to deploy your Angular 14 .Net 6 web app to azure. Included in this is how to set up you sql server instance and navigate any issues that could arise there. We will first test push the API into Azure first. Then once we can prove that its working in Azure we can push the Angular 14 client and connect everything.",
        "dAdd": "2022-07-10",
        "dSrc": "2022-07-10",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Israel Quiroz",
        "aUrl": "https://www.youtube.com/channel/UCGUKXx5HYoEIiZ5Me2QDvTw/videos",
        "spkrs": ["Israel Quiroz"],
        "tags": ["Deployment", "Azure", ".Net"]
      }
    ]
  },
  {
    "date": "2022-07-11",
    "dailyPosts": [
      {
        "slug": "2022-07-11-A",
        "type": "video",
        "dur": "8",
        "title": "How to use Web Workers in Angular | Angular 14 Tutorial",
        "url": "https://www.youtube.com/watch?v=lqCNVi1292Q",
        "desc": "One of topics we hardly come across while development unless we have such requirement. But it's always good to know how web worker actually works and how a second thread actually means.",
        "dAdd": "2022-07-11",
        "dSrc": "2022-07-10",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Learning Partner",
        "aUrl": "https://www.youtube.com/c/LearningPartnerDigital/videos",
        "spkrs": [],
        "tags": ["Web Workers"]
      },
      {
        "slug": "2022-07-11-B",
        "type": "video",
        "dur": "46",
        "title": "[VDBUH22] Peter Eijgermans - Angular Dependency Injection - Understanding hierarchical injectors",
        "url": "https://www.youtube.com/watch?v=2T2icM2jRA8",
        "desc": "Dependency Injection in Angular is a big and hard topic but it is crucial to understand it at least on some basic level in order to build scalable, testable and flexible components and applications. Why do we need DI in Angular? What's going on under the hood? How Angular resolves dependencies? Peter also explains the injectors hierarchy and how to implement this in code. (time for live coding!) And finally give answer to the question how to define a highly scalable folder structure for your Angular project?",
        "dAdd": "2022-07-11",
        "dSrc": "2022-07-10",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Devoxx",
        "aUrl": "https://www.youtube.com/c/Devoxx2015/videos",
        "spkrs": ["Peter Eijgermans"],
        "tags": ["Dependency Injection"]
      },
      {
        "slug": "2022-07-11-C",
        "type": "video",
        "dur": "7",
        "title": ".NET Core Web API CORS Implementation with Angular Application - Part 10",
        "url": "https://www.youtube.com/watch?v=KAIqP2Y1YHE",
        "desc": "n this video series I will be going through a step by step process to adding CORS implementation in .NET Core 6 Web API application and enabling CORS in the API to allow access by our domain for our Angular TODO application.",
        "dAdd": "2022-07-11",
        "dSrc": "2022-07-11",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "BugArray",
        "aUrl": "https://www.youtube.com/channel/UCIkpfwmX7PORuZdnJ0OznAA/videos",
        "spkrs": ["Sibonelo Vilakazi"],
        "tags": [".Net", "CORS"]
      },
      {
        "slug": "2022-07-11-D",
        "type": "video",
        "dur": "17",
        "title": "What is Directive in Angular | Directives in Angular | Types of Directives in Angular",
        "url": "https://www.youtube.com/watch?v=W7Xsm-7Jmbo",
        "desc": "In this video, we are going to learn what is directive in Angular. We are going to understand Structural vs Attribute Directives in Angular by discussing different examples like *ngIf, ngFor, [ngClass], [ngStyle] etc.",
        "dAdd": "2022-07-11",
        "dSrc": "2022-07-11",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Rajesh Bhattarai",
        "aUrl": "https://www.youtube.com/channel/UCgfW-cxlW7NlpbOscKJYkfA/videos",
        "spkrs": ["Rajesh Bhattarai"],
        "tags": ["Directives"]
      },
      {
        "slug": "2022-07-11-E",
        "type": "blog",
        "title": "Alternative way to localize in Angular",
        "url": "https://dev.to/ayyash/alternative-way-to-localize-in-angular-o8d",
        "desc": "The current i18n packages provided by Angular for that purpose serve the purpose well. In this series of articles I want to create an alternative solution for smaller scale apps.",
        "dAdd": "2022-07-11",
        "dSrc": "2022-07-11",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Ayyash",
        "aUrl": "https://dev.to/ayyash",
        "spkrs": [],
        "tags": ["Internationalization"]
      },
      {
        "slug": "2022-07-11-F",
        "type": "blog",
        "title": "Errors and Angular",
        "url": "https://dev.to/this-is-angular/errors-and-angular-n0b",
        "desc": "As the title of this paragraph suggests, errors are generally something we try to avoid, and this is especially true for new developers. But, as a matter of fact, errors are an essential part of the development process, and can even be our friends. So, we need to be careful about how we handle them. Also, it is always better to get a detailed error with a concise description of the problem, and maybe even an explanation of the solution.\n(photo: by Brett Jordan on Unsplash)",
        "dAdd": "2022-07-11",
        "dSrc": "2022-07-11",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Armen Vardanyan",
        "aUrl": "https://dev.to/armandotrue",
        "spkrs": ["Armen Vardanyan"],
        "tags": ["Errors"]
      },
      {
        "slug": "2022-07-11-G",
        "type": "video",
        "dur": "8",
        "title": "How to disable Past dates in a datepicker | Angular mat datepicker, | input field type date",
        "url": "https://www.youtube.com/watch?v=e4hBxFQGPxg",
        "desc": " In this tutorial you will learn how to disable past dates in a datepicker input field. It's a step-by-step video. I will show you how to do this using Angular material Mat datepicker and also on a normal date input field.",
        "dAdd": "2022-07-11",
        "dSrc": "2022-07-11",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Techbriel",
        "aUrl": "https://www.youtube.com/c/Techbriel/videos",
        "spkrs": [],
        "tags": ["Datepicker"]
      },
      {
        "slug": "2022-07-11-H",
        "type": "blog",
        "title": "Angular Basics: Working With Enums in Angular",
        "url": "https://www.telerik.com/blogs/angular-basics-working-enums",
        "desc": "Exclusive to TypeScript, enums let us define a list of named constants. This can make code easier to understand as we document distinct cases.",
        "dAdd": "2022-07-11",
        "dSrc": "2022-07-11",
        "srcSite": "Progress Telerik Blog",
        "srcUrl": "https://www.telerik.com/blogs/web-angular",
        "aName": "John Au-Yeung",
        "aUrl": "https://www.telerik.com/blogs/author/john-au-yeung",
        "spkrs": ["John Au-Yeung"],
        "tags": ["TypeScript", "Enums"]
      },
      {
        "slug": "2022-07-11-J",
        "type": "video",
        "dur": "16",
        "title": "Angular life cycle hooks | Life cycle hooks of a component | Angular 14",
        "url": "https://www.youtube.com/watch?v=RHK6MWLhB90",
        "desc": "In this video we will learn what are the different life cycle hooks used in the component and will learn how to use each of them and what the importance of each life cycle in Angular.",
        "dAdd": "2022-07-11",
        "dSrc": "2022-07-11",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "TechshareSKK",
        "aUrl": "https://www.youtube.com/channel/UCD8gC85u512FeCFzRV4Ll-A/videos",
        "spkrs": ["Sai Kumar Korthivada"],
        "tags": ["Lifecycle Hooks"]
      },
      {
        "slug": "2022-07-11-K",
        "type": "podcast",
        "dur": "48",
        "title": "S2E24 - Colum Ferry on Solving the Timezones Problem",
        "url": "https://www.spreaker.com/user/14532324/s2e24-colum-ferry-on-solving-the-timezon?utm_campaign=episode-title&utm_medium=app&utm_source=widget",
        "desc": "In this episode we're thrilled to get to know Colum Ferry, a Senior Software Engineer working at Nrwl remotely from his home in Derry, Ireland. As someone who has successfully worked across distant time zones we're hoping he can help us solve some obstacles.",
        "dAdd": "2022-07-11",
        "dSrc": "2022-07-11",
        "srcSite": "Spreaker",
        "srcUrl": "https://spreaker.com",
        "aName": "Angular Experience",
        "aUrl": "https://angular-experience.web.app/episodes",
        "spkrs": ["Colum Ferry", "Brooke Avery", "Erik Slack"],
        "tags": []
      },
      {
        "slug": "2022-07-11-L",
        "type": "video",
        "dur": "93",
        "title": "Angular NGXS CRUD Operations - REST API",
        "url": "https://www.youtube.com/watch?v=kCS1Ge_Zgaw",
        "desc": "",
        "dAdd": "2022-07-11",
        "dSrc": "2022-07-11",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Kesavaraja D",
        "aUrl": "https://www.youtube.com/c/KesavarajaD/videos",
        "spkrs": [],
        "tags": ["NGXS"]
      },
      {
        "slug": "2022-07-11-M",
        "type": "video",
        "dur": "28",
        "title": "ng-India 2022 | Angular Services by Dhananjay Kumar",
        "url": "https://www.youtube.com/watch?v=b8AYk7ADJwE",
        "desc": "In this ng-India 2022 talk, learn about Angular Services",
        "dAdd": "2022-07-11",
        "dSrc": "2022-07-11",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Geek 97",
        "aUrl": "https://www.youtube.com/c/Geek97/videos",
        "spkrs": ["Dhananjay Kumar"],
        "tags": ["Services"]
      },
      {
        "slug": "2022-07-11-N",
        "type": "blog",
        "title": "Setup Module Federation in Angular using Nx",
        "url": "https://dev.to/nx/setup-module-federation-in-angular-using-nx-5gko",
        "desc": "As our Angular applications grow, building the application takes longer and longer. This means we sometimes spend more time waiting on the application to build than actually writing code. This becomes even more frustrating when we take into consideration that we usually only need to focus on one specific part of the full monolithic application.",
        "dAdd": "2022-07-11",
        "dSrc": "2022-07-11",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Colum Ferry",
        "aUrl": "https://dev.to/coly010",
        "spkrs": ["Colum Ferry"],
        "tags": ["Nx", "Module Federation"]
      },
      {
        "slug": "2022-07-11-P",
        "type": "video",
        "dur": "17",
        "title": "Application runtime performance is vital to the success of any organization. Sub-optimal runtimes result in frustrated users, increased issues reported, and an overall increase in time spent reducing performance technical debt. This is why it's important to be able to accurately measure runtime, analyze those measurements, and deploy effective improvements based on those measurements.",
        "url": "https://www.youtube.com/watch?v=jWWQRXhgciQ",
        "desc": "",
        "dAdd": "2022-07-11",
        "dSrc": "2022-07-11",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "ng-conf",
        "aUrl": "https://www.youtube.com/c/ngconfonline/videos",
        "spkrs": ["Brian Love", "Mike Ryan"],
        "tags": ["Performance"]
      },
      {
        "slug": "2022-07-11-Q",
        "type": "blog",
        "title": "Don't 'filter' it",
        "url": "https://medium.com/@vakhrushev.sergey/dont-filter-it-20bc85a7f56f",
        "desc": "This topic was appeared when in one company we faced with a problem that is connected with RxJS 'filter' operator. But after making research and analysis I understood that the problem might be deeper.",
        "dAdd": "2022-07-11",
        "dSrc": "2022-07-11",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Sergei Vakhrushev",
        "aUrl": "https://medium.com/@vakhrushev.sergey",
        "spkrs": ["Sergei Vakhrushev"],
        "tags": ["RxJS", "filter()"]
      },
      {
        "slug": "2022-07-11-R",
        "type": "video",
        "dur": "17",
        "title": "Retry Error HTTP Requests in Angular",
        "url": "https://www.youtube.com/watch?v=cmT5wXjZq1k",
        "desc": " In this video, we are creating an interceptor to catch error requests and retry them.\n\nThis method does not use retryWhen operator, as it is going to be deprecated from RxJS V9 or V10, instead, we are using retry, to achieve the same thing with less code.",
        "dAdd": "2022-07-11",
        "dSrc": "2022-07-11",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Adnan Halilovic",
        "aUrl": "https://www.youtube.com/c/AdnanHalilovicDev/videos",
        "spkrs": ["Adnan Halilovic"],
        "tags": ["RxJS", "Errors", "HttpInterceptors", "retry()"]
      },
      {
        "slug": "2022-07-11-S",
        "type": "video",
        "dur": "5",
        "title": "Other Angular Events Like MouseEnter and More - Relearning Angular Part 14",
        "url": "https://www.youtube.com/watch?v=YUCNdQX7RTo",
        "desc": "Hey everyone, in today's video, we are going to explore other events besides the click even that you can use in Angular, like the MouseEnter event!",
        "dAdd": "2022-07-11",
        "dSrc": "2022-07-11",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Coding Under Pressure",
        "aUrl": "https://www.youtube.com/channel/UCdGYTnk-Ll4S6yOsYwU8D2w/videos",
        "spkrs": [],
        "tags": []
      }
    ]
  },
  {
    "date": "2022-07-12",
    "dailyPosts": [
      {
        "slug": "2022-07-12-A",
        "type": "blog",
        "title": "Nx Fetch Operator and working with NgRx Effects while maintaining State",
        "url": "https://medium.com/@ConorJonOReilly/nx-fetch-operator-and-working-with-ngrx-effects-while-maintaining-state-4a8c42ac86ca",
        "desc": "When working with services, retrieving data and managing our state, we want to make sure that we fetch our data when the user requests it, and that we handle any errors that may arise when making that request.",
        "dAdd": "2022-07-12",
        "dSrc": "2022-07-11",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Conor O'Reilly",
        "aUrl": "https://medium.com/@ConorJonOReilly",
        "spkrs": ["Conor O'Reilly"],
        "tags": ["Nx", "NgRx", "State Management"]
      },
      {
        "slug": "2022-07-12-B",
        "type": "blog",
        "title": "Create an Angular 14 Library, use it locally when developing and publish the package to NPM",
        "url": "https://medium.com/@joosep.parts/create-an-angular-14-library-use-it-locally-when-developing-and-publish-the-package-to-npm-689ca2efdea8",
        "desc": "Ah.. the wonders of npm install 'something' and then use the package anywhere. But how do they do it? Well, I was wondering the same. So let's try it out.",
        "dAdd": "2022-07-12",
        "dSrc": "2022-07-11",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Joosep Parts",
        "aUrl": "https://medium.com/@joosep.parts",
        "spkrs": ["Joosep Parts"],
        "tags": ["Libraries", "NPM"]
      },
      {
        "slug": "2022-07-12-C",
        "type": "blog",
        "title": "Getting parameters from incoming link | Quickies in Angular",
        "url": "https://medium.com/ideacoding-lab/getting-parameters-from-incoming-link-quickies-in-angular-fc02c3c14649",
        "desc": "Imagine you want to use an incoming link information, say, it contains a product id for retreiving. Instead of going around with huge chucks of data, just pass the id!\n(photo: by Julian Hochgesang on Unsplash)",
        "dAdd": "2022-07-12",
        "dSrc": "2022-07-11",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Jorge Guerra Pires, PhD",
        "aUrl": "https://medium.com/@jorgeguerrapires",
        "spkrs": ["Jorge Guerra Pires"],
        "tags": ["Route Params", "ParamMap"]
      },
      {
        "slug": "2022-07-12-D",
        "type": "blog",
        "title": "Angular, RxJS: 2 ways you could share the HTTP request execution when the request is executed inside a method call",
        "url": "https://ramya-bala221190.medium.com/angular-rxjs-2-ways-you-could-share-the-http-request-execution-when-the-request-is-executed-inside-975d0dce054c",
        "desc": "I have written about a similar concept on which multicast operators you can use to ensure that an HTTP request is executed just once and the response is shared between multiple observers irrespective of when they subscribe.\n(photo: by James Harrison on Unsplash)",
        "dAdd": "2022-07-12",
        "dSrc": "2022-07-11",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "AngularEnthusiast",
        "aUrl": "https://ramya-bala221190.medium.com",
        "spkrs": [],
        "tags": ["RxJS"]
      },
      {
        "slug": "2022-07-12-E",
        "type": "video",
        "dur": "11",
        "title": "Angular unsubscribe, Angular async pipe, RxJS subscribe - Avoid Memory Leaks",
        "url": "https://www.youtube.com/watch?v=wDAmfqnIrck",
        "desc": "If you write RxJS subscribe in Angular you by default have a memory leak. In order to avoid this you need to use Angular unsubscribe. Other way is to leverage Angular async pipe. We also will look on most production way to unsubscribe by using RxJS takeUntil.",
        "dAdd": "2022-07-12",
        "dSrc": "2022-07-12",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Monsterlessons Academy",
        "aUrl": "https://www.youtube.com/c/MonsterlessonsAcademy/videos",
        "spkrs": [],
        "tags": ["RxJS", "Subscriptions", "Async Pipe", "takeUntil()", "unsubscribe()"]
      },
      {
        "slug": "2022-07-12-F",
        "type": "blog",
        "title": "RxJS 7 operator 'toPromise' deprecated. Alternatives!",
        "url": "https://medium.com/@vicpuigcer/rxjs-7-operator-topromise-deprecated-alternatives-4b02d1061f44",
        "desc": "The helper function toPromise, with which we could convert an Observable to a Promise it has been deprecated in version 7 of RxJS. We have several ways to achieve the same.",
        "dAdd": "2022-07-12",
        "dSrc": "2022-07-12",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Victor Puigcerver",
        "aUrl": "https://medium.com/@vicpuigcer",
        "spkrs": ["Victor Puigcerver"],
        "tags": []
      }
    ]
  },
  {
    "date": "2022-07-13",
    "dailyPosts": [
      {
        "slug": "2022-07-13-A",
        "type": "blog",
        "title": "Adding Netlify CMS to an Angular Scully blog site",
        "url": "https://brunoelo.hashnode.dev/adding-netlify-cms-to-an-angular-scully-blog-site",
        "desc": "Netlify CMS provides an efficient way to manage content on a blog. It integrates well with contents written in markdown that is stored in repository.\n(photo: by Priscilla Du Preez on Unsplash)",
        "dAdd": "2022-07-13",
        "dSrc": "2022-07-13",
        "srcSite": "Hashnode",
        "srcUrl": "https://hashnode.com",
        "aName": "Emeka Elo-Chukwuma",
        "aUrl": "https://hashnode.com/@BrunoElo",
        "spkrs": ["Emeka Elo-Chukwuma"],
        "tags": ["Scully"]
      },
      {
        "slug": "2022-07-13-B",
        "type": "blog",
        "title": "CanDeactivate Route Guard in Angular",
        "url": "https://chibueze.hashnode.dev/candeactivate-route-guard-in-angular",
        "desc": "In this article we are going to be talking about the CanDeactivate guard, however, this is not a beginner-based article. It requires some knowledge of other guards, we will only be focusing on the CanDeactivate guard.",
        "dAdd": "2022-07-13",
        "dSrc": "2022-07-13",
        "srcSite": "Hashnode",
        "srcUrl": "https://hashnode.com",
        "aName": "Sam-Obisike Chibueze",
        "aUrl": "https://hashnode.com/@uniquechibueze",
        "spkrs": ["Sam-Obisike Chibueze"],
        "tags": ["Route Guards", "CanDeactivate"]
      },
      {
        "slug": "2022-07-13-C",
        "type": "blog",
        "title": "Firebase Push Notifications for Android and iOS Using Ionic and ASP.NET —A Complete Guide",
        "url": "https://dev.to/syncfusion/firebase-push-notifications-for-android-and-ios-using-ionic-and-aspnet-a-complete-guide-16bi",
        "desc": "In this blog, we are going to learn how to build an Ionic Angular app for implementing Firebase push notifications for both Android and iOS. We'll create an ASP.NET project with SQL to send Firebase push notifications.",
        "dAdd": "2022-07-13",
        "dSrc": "2022-07-13",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Suresh Mohan",
        "aUrl": "https://dev.to/sureshmohan",
        "spkrs": ["Suresh Mohan"],
        "tags": ["Firebase", "Ionic"]
      },
      {
        "slug": "2022-07-13-D",
        "type": "blog",
        "title": "Pipes In Angular",
        "url": "https://dev.to/angular/pipes-in-angular-3g4i",
        "desc": "Hi readers! Glad to have you as a part of my learning journey! Today is the fourth week and we are learning Pipes in Angular. The articles are a part of my 'Getting Started With Angular' series. If you are a newbie like me, I hope to help you a little with this series.",
        "dAdd": "2022-07-13",
        "dSrc": "2022-07-13",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Haimantika Mitra",
        "aUrl": "https://dev.to/haimantika",
        "spkrs": ["Haimantika Mitra"],
        "tags": ["Pipes"]
      },
      {
        "slug": "2022-07-13-E",
        "type": "release",
        "title": "Angular Release: v14.0.6",
        "url": "https://github.com/angular/angular/releases/tag/14.0.6",
        "desc": "",
        "dAdd": "2022-07-13",
        "dSrc": "2022-07-13",
        "srcSite": "GitHub Angular",
        "srcUrl": "https://github.com/angular/angular/releases",
        "aName": "Jessica Janiuk",
        "aUrl": "https://github.com/jessicajaniuk",
        "spkrs": [],
        "tags": ["Release"]
      },
      {
        "slug": "2022-07-13-F",
        "type": "release",
        "title": "Angular Release: v14.1.0-rc.0",
        "url": "https://github.com/angular/angular/releases/tag/14.1.0-rc.0",
        "desc": "",
        "dAdd": "2022-07-13",
        "dSrc": "2022-07-13",
        "srcSite": "GitHub Angular",
        "srcUrl": "https://github.com/angular/angular/releases",
        "aName": "Jessica Janiuk",
        "aUrl": "https://github.com/jessicajaniuk",
        "spkrs": [],
        "tags": ["Release"]
      },
      {
        "slug": "2022-07-13-G",
        "type": "blog",
        "title": "setValue vs patchValue Angular",
        "url": "https://medium.com/@singhkrishnapal0818/setvalue-vs-patchvalue-angular-2a493439a0f8",
        "desc": "setValue and patchValue are methods from the Angular FormGroup. They both set the value of a control in a FormFroup. The clear difference is that setValue cannot exclude some controls while the patchValue is able to do just that.",
        "dAdd": "2022-07-13",
        "dSrc": "2022-07-12",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Krishnapal Singh Chandrawat",
        "aUrl": "https://medium.com/@singhkrishnapal0818",
        "spkrs": ["Krishnapal Singh Chandrawat"],
        "tags": ["setValue()", "patchValue()", "Forms", "Reactive Forms"]
      },
      {
        "slug": "2022-07-13-H",
        "type": "blog",
        "title": "Angular HttpClient Multiple Content-Type in Single Request — Image along with JSON",
        "url": "https://medium.com/@jh00032012/angular-httpclient-multiple-content-type-in-single-request-image-along-with-json-fabddee4904b",
        "desc": "In a distinct case POST or PUT the images along with JSON in a single request body that most use cases would not be expected in the first place and Angular wasn't an exception. In Angular, we use FormData for one or more multipart data. See the following",
        "dAdd": "2022-07-13",
        "dSrc": "2022-07-13",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Jaya Sahita Avadata",
        "aUrl": "https://medium.com/@jh00032012",
        "spkrs": ["Jaya Sahita Avadata"],
        "tags": ["HttpClient", "JSON"]
      },
      {
        "slug": "2022-07-13-J",
        "type": "video",
        "dur": "10",
        "title": "Reactive forms: Reusable Input Component",
        "url": "https://www.youtube.com/watch?v=psojgR7joWk",
        "desc": "Have you ever wondered how Angular's Reactive Forms could be used to standardize input components and error messages? It has never been easier than now. Since the release of Angular 14 - Reactive Forms are now strongly typed, meaning it's easier to work with and debug.\nIn this video, I demonstrate how reusability can be achieved for input components where we add error messages whenever an error occurs.",
        "dAdd": "2022-07-13",
        "dSrc": "2022-07-13",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Sebastian Persson",
        "aUrl": "https://www.youtube.com/channel/UChACd5wGjvkmgTR63YW4HGQ",
        "spkrs": ["Sebastian Persson"],
        "tags": ["Forms", "Reactive Forms"]
      }
    ]
  },
  {
    "date": "2022-07-14",
    "dailyPosts": [
      {
        "slug": "2022-07-14-A",
        "type": "blog",
        "title": "Monorepo: Nx + Storybook in Angular",
        "url": "https://medium.com/@diaslalinda/monorepo-nx-storybook-in-angular-7365bd1508ff",
        "desc": "When you think about the architecture of front-end applications, you have to focus on two main things.: separating concerns and mitigating code repetitions. In order to achieve these, you have to break down large features into smaller, reusable packages (micro front-ends). But, then comes the question of how you manage all those small packages/repos?",
        "dAdd": "2022-07-14",
        "dSrc": "2022-07-13",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Lalinda Dias",
        "aUrl": "https://medium.com/@diaslalinda",
        "spkrs": ["Lalinda Dias"],
        "tags": ["Nx", "Storybook"]
      },
      {
        "slug": "2022-07-14-B",
        "type": "blog",
        "title": "Data Status: the most used component in any Angular project!",
        "url": "https://medium.com/@nimeresam95/data-status-the-most-used-component-in-any-angular-project-c53a4ac46b1e",
        "desc": "As a front-end developer, your mission isn't just to make the application work!\nIt doesn't make sense for the user to see data come out of nowhere!\nYou have to show him what's going on on the page such as loading data, facing some errors, no data to show …etc.",
        "dAdd": "2022-07-14",
        "dSrc": "2022-07-13",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Nimer Esam",
        "aUrl": "https://medium.com/@nimeresam95",
        "spkrs": ["Nimer Esam"],
        "tags": ["Spinner", "Errors"]
      },
      {
        "slug": "2022-07-14-C",
        "type": "blog",
        "title": "Infinite whiteboard with konvaJS and Angular — part 1",
        "url": "https://ashatilovdev.medium.com/infinite-whiteboard-with-konvajs-and-angular-part-1-db0f86cfe02d",
        "desc": "Working in an advance realtime collaboration board requires us to use and extra technics. In this note I'll tell how to create Infinite whiteboard with KonvaJS and Angular. The story bellow allow us to better understand how the KonvaJS works.",
        "dAdd": "2022-07-14",
        "dSrc": "2022-07-13",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Aleksandr Shatilov",
        "aUrl": "https://ashatilovdev.medium.com",
        "spkrs": ["Aleksandr Shatilov"],
        "tags": []
      },
      {
        "slug": "2022-07-14-D",
        "type": "video",
        "dur": "10",
        "title": "Drag-Drop Angular Material Table",
        "url": "https://www.youtube.com/watch?v=8SBHbFYeZgw",
        "desc": "This video contains a live working example of drag-drop functionality implemented in an Angular Material table.",
        "dAdd": "2022-07-14",
        "dSrc": "2022-07-14",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Aish Anu",
        "aUrl": "https://www.youtube.com/channel/UCL9OMgGX3rngRzodiRls85Q/videos",
        "spkrs": ["Aish Anu"],
        "tags": ["Angular Material", "Angular CDK", "Drag and Drop"]
      },
      {
        "slug": "2022-07-14-E",
        "type": "video",
        "dur": "31",
        "title": "Angular Redux - NgRx Angular, NgRx store, NgRx Effects, NgRx selectors",
        "url": "https://www.youtube.com/watch?v=SkoI_VHtcTU",
        "desc": "Learn how to implement Angular Redux with NgRx. NgRx Angular is the most popular solution for state management inside applications. If is typically used with NgRx store, ngRx selectors, NgRx effects and NgRx reducers. Here we will bind everything to Angular application on a simple example.",
        "dAdd": "2022-07-14",
        "dSrc": "2022-07-14",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Monsterlessons Academy",
        "aUrl": "https://www.youtube.com/c/MonsterlessonsAcademy/videos",
        "spkrs": [],
        "tags": ["NgRx"]
      },
      {
        "slug": "2022-07-14-F",
        "type": "video",
        "dur": "40",
        "title": "Angular Loves Ionic: A Fairytale Future | Emma Twersky | Ioniconf 2022",
        "url": "https://www.youtube.com/watch?v=aSvpKzKcef8",
        "desc": "Learn how the cross-platform movement is making web and app development more accessible, collaborative, successful, and enjoyable. Hear from community leaders, contemporary companies, and your fellow developers as they share how to out-code, out-ship, and outrun the competition using the power of open source and the Web.",
        "dAdd": "2022-07-14",
        "dSrc": "2022-07-14",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Ionic",
        "aUrl": "https://www.youtube.com/c/Ionicframework/videos",
        "spkrs": ["Emma Twersky"],
        "tags": ["Ionic"]
      },
      {
        "slug": "2022-07-14-G",
        "type": "video",
        "dur": "7",
        "title": "Angular | Reactiveforms in Angular",
        "url": "https://www.youtube.com/watch?v=EfFzkyFzJwo",
        "desc": "Reactive forms in Angular with a sample example",
        "dAdd": "2022-07-14",
        "dSrc": "2022-07-14",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Chipmunk",
        "aUrl": "https://www.youtube.com/channel/UC6YwGouAuS8aS2a2YPExgjA/videos",
        "spkrs": [],
        "tags": ["Forms", "Reactive Forms"]
      },
      {
        "slug": "2022-07-14-H",
        "type": "video",
        "dur": "14",
        "title": "Angular 13 Project to Build Speech to Text Web App Using Web Speech Recognition API in TypeScript",
        "url": "https://www.youtube.com/watch?v=dCaZhWIhLWI",
        "desc": "Download the full source code of application here...",
        "dAdd": "2022-07-14",
        "dSrc": "2022-07-14",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Coding Shiksha",
        "aUrl": "https://www.youtube.com/c/CodingShiksha/videos",
        "spkrs": ["Gautam Sharma"],
        "tags": []
      },
      {
        "slug": "2022-07-14-J",
        "type": "video",
        "dur": "50",
        "title": "Todo - Angular Authentication (Login and Registration) - Part 11",
        "url": "https://www.youtube.com/watch?v=yWrSbAB-5Tc",
        "desc": "Angular Authentication Login and Registration form. In this video series I will be going through a step by step process for the user authentication.",
        "dAdd": "2022-07-14",
        "dSrc": "2022-07-14",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "BugArray",
        "aUrl": "https://www.youtube.com/channel/UCIkpfwmX7PORuZdnJ0OznAA/videos",
        "spkrs": ["Sibonelo Vilakazi"],
        "tags": ["Auth"]
      },
      {
        "slug": "2022-07-14-K",
        "type": "blog",
        "title": "Amplication & Angular: Using GraphQL",
        "url": "https://dev.to/amplication/amplication-angular-using-graphql-3k5o",
        "desc": "Welcome to this tutorial on how to build a full-stack application with Amplication. What we will do is go step by step to create a Todos application using Angular for your frontend and Amplication for your backend.",
        "dAdd": "2022-07-14",
        "dSrc": "2022-07-14",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Michael Solati",
        "aUrl": "https://dev.to/michaelsolati",
        "spkrs": ["Michael Solati"],
        "tags": ["GraphQL"]
      },
      {
        "slug": "2022-07-14-L",
        "type": "podcast",
        "dur": "45",
        "title": "The Angular Developer's Nx Handbook - AiA 350",
        "url": "https://topenddevs.com/podcasts/adventures-in-angular/episodes/4035",
        "desc": "Nx is a smart, fast and extensible build system with first class monorepo support and powerful integrations, and it has a powerful core and a rich plugin ecosystem.  Today, Charles interviews Angular expert Lars Gyrup Brink Nielsen to discuss the benefits of the Nx build framework.",
        "dAdd": "2022-07-14",
        "dSrc": "2022-07-14",
        "srcSite": "DevChat.tv",
        "srcUrl": "https://devchat.tv",
        "aName": "Adventures In Angular",
        "aUrl": "https://topenddevs.com/podcasts/adventures-in-angular/",
        "spkrs": ["Lars Gyrup Brink Nielsen"],
        "tags": ["Nx"]
      },
      {
        "slug": "2022-07-14-M",
        "type": "video",
        "dur": "24",
        "title": "How to Make a Basic Angular Chrome Extension",
        "url": "https://www.youtube.com/watch?v=bU3S2CFYrQo",
        "desc": "Ever wanted to use Angular in an Angular Chrome extension? In this video we cover how to make a basic Chrome extension with Angular!\nThis video is a little longer because I show you how to install the tools you will need to use Angular, as well as downloading an IDE. If you don't need that you can skip to the timestamp you are interested below.",
        "dAdd": "2022-07-14",
        "dSrc": "2022-07-14",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "IamDB",
        "aUrl": "https://www.youtube.com/channel/UCOAvYSXh-6sMR5FT4MtzMJg/videos",
        "spkrs": [],
        "tags": []
      },
      {
        "slug": "2022-07-14-N",
        "type": "video",
        "dur": "9",
        "title": "Get to Know the 2022 ng-conf Speakers | Christina Brink | ng-conf 2022",
        "url": "https://www.youtube.com/watch?v=uTiBVpRrr2U",
        "desc": "",
        "dAdd": "2022-07-14",
        "dSrc": "2022-07-14",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "ng-conf",
        "aUrl": "https://www.youtube.com/c/ngconfonline/videos",
        "spkrs": ["Christina Brink"],
        "tags": []
      }
    ]
  },
  {
    "date": "2022-07-15",
    "dailyPosts": [
      {
        "slug": "2022-07-15-A",
        "type": "blog",
        "title": "7 VSCode Extensions to Boost Your Performance as an Angular Developer",
        "url": "https://medium.com/herodevs/7-vscode-extensions-to-boost-your-performance-as-an-angular-developer-21bc37104446",
        "desc": "Extensions on VSCode are invaluable tools for us developers to turn repetitive manual tasks in a few clicks or key bindings, do complex operations automagically, and increase our development satisfaction by providing us a whole new experience on gray areas.\n(photo: by Charlotte Coneybeer on Unsplash)",
        "dAdd": "2022-07-15",
        "dSrc": "2022-07-13",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Diego Juliao",
        "aUrl": "https://medium.com/@dianjuar",
        "spkrs": ["Diego Juliao"],
        "tags": ["VSCode"]
      },
      {
        "slug": "2022-07-15-B",
        "type": "blog",
        "title": "Publish your awesome ideas as NPM packages",
        "url": "https://medium.com/ideacoding-lab/publish-your-awesome-ideas-as-npm-packages-a33c45b849d2",
        "desc": "I do believe we may change the world with third-party packages. You can easily be part of this revolution!\n(photo: by Clay Banks on Unsplash)",
        "dAdd": "2022-07-15",
        "dSrc": "2022-07-13",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Jorge Guerra Pires, PhD",
        "aUrl": "https://medium.com/@jorgeguerrapires",
        "spkrs": ["Jorge Guerra Pires"],
        "tags": ["Libraries", "NPM"]
      },
      {
        "slug": "2022-07-15-C",
        "type": "video",
        "dur": "9",
        "title": "38. Emit Child Component Event Emitter using Comp Instance from Parent Component - Angular testing",
        "url": "https://www.youtube.com/watch?v=xXSwgm2PW-I",
        "desc": "In this video we will see how to emit the child components event emitter using the component instance from the parent component - Angular Unit testing.",
        "dAdd": "2022-07-15",
        "dSrc": "2022-07-14",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Leela Web Dev",
        "aUrl": "https://www.youtube.com/c/LeelaWebDev/videos",
        "spkrs": ["Leela Narasimha"],
        "tags": ["Testing", "Unit Testing", "Jasmine", "Karma", "EventEmitter", "@Output"]
      },
      {
        "slug": "2022-07-15-D",
        "type": "video",
        "dur": "24",
        "title": "Reusable Table Component Angular 14 | Angular tutorial | Reusable components in Angular",
        "url": "https://www.youtube.com/watch?v=vsTrYV6CXQM",
        "desc": "Build Reusable component in Angular. With action button. Configuration of Table header columns as well.",
        "dAdd": "2022-07-15",
        "dSrc": "2022-07-15",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Learning Partner",
        "aUrl": "https://www.youtube.com/c/LearningPartnerDigital/videos",
        "spkrs": [],
        "tags": ["Components", "@Input", "@Output", "Data Transfer"]
      },
      {
        "slug": "2022-07-15-E",
        "type": "blog",
        "title": "Module scoped styling in Angular 13",
        "url": "https://dev.to/brunoelo/module-scoped-styling-in-angular-13-i09",
        "desc": "Styling applications can get technical at times especially if it is large with many modules. Learn how to style based on the scope of Angular modules.\n(photo: by Maxim Potkin ❄ on Unsplash)",
        "dAdd": "2022-07-15",
        "dSrc": "2022-07-15",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Emeka Elo-Chukwuma",
        "aUrl": "https://hashnode.com/@BrunoElo",
        "spkrs": ["Emeka Elo-Chukwuma"],
        "tags": ["Architecture"]
      },
      {
        "slug": "2022-07-15-F",
        "type": "video",
        "dur": "3",
        "title": "How to use custom SVG icons in Angular",
        "url": "https://www.youtube.com/watch?v=V-xg-lFhXn4",
        "desc": "",
        "dAdd": "2022-07-15",
        "dSrc": "2022-07-15",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Rui Wang",
        "aUrl": "https://www.youtube.com/user/turingcs2001/videos",
        "spkrs": ["Rui Wang"],
        "tags": []
      },
      {
        "slug": "2022-07-15-G",
        "type": "video",
        "dur": "66",
        "title": "AngularAir - How Much TypeScript Is Enough For Our Angular Apps?",
        "url": "https://www.youtube.com/watch?v=ltdVNRaykzE",
        "desc": "",
        "dAdd": "2022-07-15",
        "dSrc": "2022-07-15",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "AngularAir",
        "aUrl": "https://www.youtube.com/c/AngularAirPodcast/videos",
        "spkrs": ["Justin Schwartzenberger", "Alyssa Nicoll", "Mike Brocci"],
        "tags": []
      },
      {
        "slug": "2022-07-15-H",
        "type": "video",
        "dur": "9",
        "title": "39. Create Post Details Component with the Activated Route - Angular Unit Testing",
        "url": "https://www.youtube.com/watch?v=RpmFS0_ygnI",
        "desc": "In this video we will see how to create the Post Details component with the activated route - Angular Unit Testing",
        "dAdd": "2022-07-15",
        "dSrc": "2022-07-15",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Leela Web Dev",
        "aUrl": "https://www.youtube.com/c/LeelaWebDev/videos",
        "spkrs": ["Leela Narasimha"],
        "tags": ["Testing", "Unit Testing", "Jasmine", "Karma", "ActivatedRoute"]
      },
      {
        "slug": "2022-07-15-J",
        "type": "video",
        "dur": "42",
        "title": "Building a configurable Angular package with Nx",
        "url": "https://youtu.be/Vh0OcM0MoWA?t=140",
        "desc": " Building a configurable Angular library using Angular 14+ with Standalone Components, Single File Components, inject function and Nx",
        "dAdd": "2022-07-15",
        "dSrc": "2022-07-15",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Jay Bell",
        "aUrl": "https://www.youtube.com/channel/UCNSNsSjigIpbMwof4BjKmNA/videos",
        "spkrs": ["Jay Bell"],
        "tags": ["Nx", "Libraries", "Standalone Components"]
      }
    ]
  },
  {
    "date": "2022-07-16",
    "dailyPosts": [
      {
        "slug": "2022-07-16-A",
        "type": "blog",
        "title": "Building a Chrome Extension with the Angular framework / Rafflesia Part 1",
        "url": "https://fleker.medium.com/building-a-chrome-extension-with-the-angular-framework-rafflesia-part-1-dd7fe8702a46",
        "desc": "Over the last few months I've worked on a handful of assorted projects and written short blog posts about them. For the next few months, I want to go deeper into one particular project.",
        "dAdd": "2022-07-16",
        "dSrc": "2022-07-14",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Nick Felker",
        "aUrl": "https://fleker.medium.com",
        "spkrs": ["Nick Felker"],
        "tags": []
      },
      {
        "slug": "2022-07-16-B",
        "type": "blog",
        "title": "Angular material checkbox with reactive form observables to monitor form control values",
        "url": "https://medium.com/@HonoraryMarleyans/angular-material-checkbox-with-reactive-form-observables-to-monitor-form-control-values-a56148027548",
        "desc": "This is the description from the official Angular website. Angular makes use of observables as an interface to handle a variety of common asynchronous operations.",
        "dAdd": "2022-07-16",
        "dSrc": "2022-07-14",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Honorary Marleyans",
        "aUrl": "https://medium.com/@HonoraryMarleyans",
        "spkrs": [],
        "tags": ["Angular Material", "Checkbox"]
      },
      {
        "slug": "2022-07-16-C",
        "type": "blog",
        "title": "Applying different themes dynamically in Angular with CSS Application",
        "url": "https://mohammedfahimullah.medium.com/applying-different-themes-dynamically-in-angular-with-css-application-2ecf88a91535",
        "desc": "To increase the user experience of the applications now a days applications can have multiple themes. Through this article you will get an basic idea on how to apply different themes dynamically in an Angular Application.",
        "dAdd": "2022-07-16",
        "dSrc": "2022-07-14",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Mohammedfahimullah",
        "aUrl": "https://mohammedfahimullah.medium.com",
        "spkrs": [],
        "tags": ["Theming"]
      },
      {
        "slug": "2022-07-16-D",
        "type": "blog",
        "title": "Moduliths in Angular with Nx",
        "url": "https://levelup.gitconnected.com/moduliths-in-angular-with-nx-b8b0076794fb",
        "desc": "Using DDD and Monorepos to create sustainable applications",
        "dAdd": "2022-07-16",
        "dSrc": "2022-07-15",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Stefan Haas",
        "aUrl": "https://medium.com/@stefan.haas.privat",
        "spkrs": ["Stefan Haas"],
        "tags": ["Architecture", "Nx"]
      },
      {
        "slug": "2022-07-16-E",
        "type": "video",
        "dur": "27",
        "title": "Part-4| Angular(v14) | GraphQL Client - Apollo Angular(v3) | JSON Server GraphQL | CRUD Example",
        "url": "https://www.youtube.com/watch?v=b2bEURixOwY",
        "desc": "",
        "dAdd": "2022-07-16",
        "dSrc": "2022-07-16",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Naveen Bommidi Tech Seeker",
        "aUrl": "https://www.youtube.com/c/NaveenTechSeeker/videos",
        "spkrs": ["Naveen Bommidi"],
        "tags": ["GraphQL", "CRUD"]
      },
      {
        "slug": "2022-07-16-F",
        "type": "video",
        "dur": "12",
        "title": "Angular Tutorial For Beginners 2022 - 1. Install & Folder Structure",
        "url": "https://www.youtube.com/watch?v=HajQX22fmhA",
        "desc": "",
        "dAdd": "2022-07-16",
        "dSrc": "2022-07-16",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Teddy Smith",
        "aUrl": "https://www.youtube.com/c/TeddySmithNC/videos",
        "spkrs": ["Teddy Smith"],
        "tags": []
      },
      {
        "slug": "2022-07-16-G",
        "type": "video",
        "dur": "9",
        "title": "40. Create TestBed for ActivatedRoute and Location for Component Dependencies - Angular Unit Testing",
        "url": "https://www.youtube.com/watch?v=KlA1wn6oquU",
        "desc": " In this video we will see how to create the providers for the activated route and the Location for resolving component dependencies in Angular Unit testing",
        "dAdd": "2022-07-16",
        "dSrc": "2022-07-16",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Leela Web Dev",
        "aUrl": "https://www.youtube.com/c/LeelaWebDev/videos",
        "spkrs": ["Leela Narasimha"],
        "tags": ["Testing", "Unit Testing", "Jasmine", "Karma", "ActivatedRoute"]
      },
      {
        "slug": "2022-07-16-H",
        "type": "blog",
        "title": "How to Use Dynamic Titles from NgRx Selectors",
        "url": "https://dev.to/davidshortman/how-to-use-dynamic-titles-from-ngrx-selectors-1f0",
        "desc": "When Angular 14 released and custom title strategies became a possibility, my mind immediately went to asking, 'how can I dynamically set a page's title from a selector?'",
        "dAdd": "2022-07-16",
        "dSrc": "2022-07-16",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "David",
        "aUrl": "https://dev.to/davidshortman",
        "spkrs": ["David Shortman"],
        "tags": ["NgRx"]
      },
      {
        "slug": "2022-07-16-J",
        "type": "blog",
        "title": "Searchable Data Table in Angular (NO Material) with SCSS, Useful Directives, JS methods, and Virtual Scroll",
        "url": "https://dev.to/riapacheco/searchable-data-table-in-angular-no-material-with-scss-useful-directives-js-methods-and-virtual-scroll-1ilh",
        "desc": "If you've taken on the use-case of a searchable or sortable data table in Angular, that avoids the restrictive styles of @angular/material by using the cdkTable under it, you've probably pulled out your hair as much as I have in frustration.",
        "dAdd": "2022-07-16",
        "dSrc": "2022-07-16",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Ria Pacheco",
        "aUrl": "https://dev.to/riapacheco",
        "spkrs": ["Ria Pacheco"],
        "tags": ["Data Table", "Directives", "Scrolling"]
      }
    ]
  },
  {
    "date": "2022-07-17",
    "dailyPosts": [
      {
        "slug": "2022-07-17-A",
        "type": "blog",
        "title": "How to do Live Tracking using Google Maps in Taxi App",
        "url": "https://medium.com/enappd/how-to-use-google-maps-in-taxi-app-and-do-live-tracking-a66bf46e016e",
        "desc": "In this blog, we are going to learn about Live Tracking using Google Maps in Ionic Angular App OR any Angular App. We will use freely available directive agm-maps and agm-directions and use them in the Ionic Taxi application for tracking and other features.",
        "dAdd": "2022-07-17",
        "dSrc": "2022-07-16",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Vaibhav gehani",
        "aUrl": "https://medium.com/@vgehani90",
        "spkrs": ["Vaibhav Gehani"],
        "tags": ["Ionic", "Google Maps"]
      },
      {
        "slug": "2022-07-17-B",
        "type": "blog",
        "title": "Angular theming",
        "url": "https://medium.com/@bananicabananica/angular-theming-b49576e6e827",
        "desc": "I wish to share here my little experiment with theming Angular applications. I'm not claiming that this is a battle tested solution, or even a good idea… It's just my experiment. Also, some of the things may be over-complicated since I'm still uncertain in which direction I'm going to take this.",
        "dAdd": "2022-07-17",
        "dSrc": "2022-07-16",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Bananica Bananica",
        "aUrl": "https://medium.com/@bananicabananica",
        "spkrs": [],
        "tags": []
      },
      {
        "slug": "2022-07-17-C",
        "type": "blog",
        "title": "Amazon Cognito Login to Angular Application with Amplify UI",
        "url": "https://medium.com/@kasupsri/amazon-cognito-login-to-angular-application-with-amplify-ui-17bda1e6e7e5",
        "desc": "Amazon cognito is a BaaS provided by Amason. It's a Secure identity and an access management service for apps.",
        "dAdd": "2022-07-17",
        "dSrc": "2022-07-16",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Kasup Sri Bandara",
        "aUrl": "https://medium.com/@kasupsri",
        "spkrs": ["Kasup Sri Bandara"],
        "tags": ["AWS", "Auth"]
      },
      {
        "slug": "2022-07-17-D",
        "type": "blog",
        "title": "TypeScript Decorator for Logging Analytics Event in Angular Using Monad Design Pattern",
        "url": "https://medium.com/@kartikjagdale11/typescript-decorator-for-logging-analytics-event-in-angular-using-monad-design-pattern-3241246b0c5d",
        "desc": "The Logging Decorator tracks Analytics events in Angular using a Monad design pattern, decoupling application code, and logging logic.",
        "dAdd": "2022-07-17",
        "dSrc": "2022-07-16",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Kartik Jagdale",
        "aUrl": "https://medium.com/@kartikjagdale11",
        "spkrs": ["Kartik Jagdale"],
        "tags": ["Decorators", "TypeScript"]
      },
      {
        "slug": "2022-07-17-E",
        "type": "blog",
        "title": "4 Problems of Angular 14 Typed Forms and How to Fix Them",
        "url": "https://medium.com/@iam.guid/why-new-angular-14-typed-forms-isnt-good-and-how-to-fix-it-1ffebf193df",
        "desc": "You can't get FormGroup or FormArray from your models' types. But in real-world forms bind with models. You should be able to construct controls' type from model, example:",
        "dAdd": "2022-07-17",
        "dSrc": "2022-07-16",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Vlad Lebedev",
        "aUrl": "https://medium.com/@iam.guid",
        "spkrs": ["Vlad Lebedev"],
        "tags": ["Typed Forms"]
      },
      {
        "slug": "2022-07-17-F",
        "type": "video",
        "dur": "11",
        "title": "Docker & Angular: Dockerizing your Angular Application in 10 min for Beginners",
        "url": "https://www.youtube.com/watch?v=GXf0y_nUIZE",
        "desc": "This tutorial will walk you through the steps How to Dockerize an Angular Application within 10 minute",
        "dAdd": "2022-07-17",
        "dSrc": "2022-07-16",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Techno Saviour",
        "aUrl": "https://www.youtube.com/c/TechnoSaviour/videos",
        "spkrs": ["Biswa kalyan Das"],
        "tags": ["Docker"]
      },
      {
        "slug": "2022-07-17-G",
        "type": "blog",
        "title": "Drag-and-drop with Angular Material",
        "url": "https://dev.to/asayerio_techblog/drag-and-drop-with-angular-material-3jeb",
        "desc": "Angular Material is a User Interface (UI) component library that developers can use to quickly create stunning and cohesive user interfaces in their Angular projects. With Angular Material, you can find reusable and appealing UI components like Cards, Inputs, Data Tables, Datepickers, and much more.",
        "dAdd": "2022-07-17",
        "dSrc": "2022-07-17",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "OpenReplay Tech Blog",
        "aUrl": "https://dev.to/asayerio_techblog",
        "spkrs": ["Godwin Chinda"],
        "tags": ["Angular Material", "Angular CDK", "Drag and Drop", "Data Table"]
      },
      {
        "slug": "2022-07-17-H",
        "type": "video",
        "dur": "9",
        "title": "41. Testing Post Detail Component Template using nativeElement & debugElement - Angular Unit Testing",
        "url": "https://www.youtube.com/watch?v=JRL1lgiExQ4",
        "desc": "In this video we will see how to test the post details component template using native element and the debug element - Angular Unit Testing",
        "dAdd": "2022-07-17",
        "dSrc": "2022-07-17",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Leela Web Dev",
        "aUrl": "https://www.youtube.com/c/LeelaWebDev/videos",
        "spkrs": ["Leela Narasimha"],
        "tags": ["Testing", "Unit Testing", "Jasmine", "Karma"]
      },
      {
        "slug": "2022-07-17-J",
        "type": "blog",
        "title": "Dynamic Tab Title in Angular",
        "url": "https://dev.to/entangledcognition/dynamic-tab-title-in-angular-26jg",
        "desc": "With Angular 14, Now we can generate dynamic tab titles with ease.",
        "dAdd": "2022-07-17",
        "dSrc": "2022-07-17",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Bharath Muppa",
        "aUrl": "https://dev.to/bharathmuppa",
        "spkrs": ["Bharath Muppa"],
        "tags": ["setTitle()"]
      }
    ]
  },
  {
    "date": "2022-07-18",
    "dailyPosts": [
      {
        "slug": "2022-07-18-A",
        "type": "blog",
        "title": "Serving multilingual Angular application with ExpressJS",
        "url": "https://dev.to/ayyash/serving-multilingual-angular-application-with-expressjs-ocf",
        "desc": "Previously we derived the locales file that contains all the language resources in preparation to isolate them. Our focus today is serving through NodeJs and ExpressJS server. We will serve different languages using cookies, and later relying on the URL. But before we dig in, one last benefit of our resources class.",
        "dAdd": "2022-07-18",
        "dSrc": "2022-07-17",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Ayyash",
        "aUrl": "https://dev.to/ayyash",
        "spkrs": [],
        "tags": ["Internationalization"]
      },
      {
        "slug": "2022-07-18-B",
        "type": "video",
        "dur": "5",
        "title": "How to fix CORS issue with Angular 14 and Django Rest API",
        "url": "https://www.youtube.com/watch?v=H2nMCQLhmps",
        "desc": " In this tutorial You will get learn how to fix CORS issue with Angular 14 and Django Rest API",
        "dAdd": "2022-07-18",
        "dSrc": "2022-07-18",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "TechWebDocs",
        "aUrl": "https://www.youtube.com/channel/UCAT2-rlTnNn6G9JXUHMCRdQ/videos",
        "spkrs": [],
        "tags": ["CORS"]
      },
      {
        "slug": "2022-07-18-C",
        "type": "video",
        "dur": "13",
        "title": "Part-6 | Angular(v14) | GraphQL Client - Apollo Angular(v3) | JSON Server GraphQL | CRUD Example",
        "url": "https://www.youtube.com/watch?v=6gvBIYSs6-A",
        "desc": "Summary:\n1. Create Mutation command for deleting an item.\n2. Creae delete confirmation popup using bootstrap\n3. GraphQL endpoint for deleting the item.",
        "dAdd": "2022-07-18",
        "dSrc": "2022-07-18",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Naveen Bommidi Tech Seeker",
        "aUrl": "https://www.youtube.com/c/NaveenTechSeeker/videos",
        "spkrs": ["Naveen Bommidi"],
        "tags": ["GraphQL", "CRUD"]
      },
      {
        "slug": "2022-07-18-D",
        "type": "podcast",
        "dur": "75",
        "title": "S2E25 - Craig Shearer on Independent Contracting",
        "url": "https://www.spreaker.com/user/14532324/s2e25-craig-shearer-on-independent-contr?utm_campaign=episode-title&utm_medium=app&utm_source=widget",
        "desc": "In this episode, we go to the land down to talk to our favorite Kiwi developer, Craig Shearer. Craig shares his experiences working as an independent contractor starting from how he got into programming and what led to his decision to go solo. If you've ever wondered if working as a contractor is right for you, Craig has all the answers for you like finding these opportunities, comparing salary differences and similarities, insurance and benefits, managing time, and much much more!",
        "dAdd": "2022-07-18",
        "dSrc": "2022-07-18",
        "srcSite": "Spreaker",
        "srcUrl": "https://spreaker.com",
        "aName": "Angular Experience",
        "aUrl": "https://angular-experience.web.app/episodes",
        "spkrs": ["Craig Shearer", "Brooke Avery", "Erik Slack"],
        "tags": []
      },
      {
        "slug": "2022-07-18-E",
        "type": "video",
        "dur": "17",
        "title": "Material UI Autocomplete in Angular 14 |Consume .NET Core 6 API in Angular 14 | Nihira Techiees",
        "url": "https://www.youtube.com/watch?v=hUqoqNhereg",
        "desc": "This video explains how to implement material UI Autocomplete & Consume .NET Core 6 API in Angular 14",
        "dAdd": "2022-07-18",
        "dSrc": "2022-07-18",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Nihira Techiees",
        "aUrl": "https://www.youtube.com/channel/UCsbmVmB_or8sVLLEq4XhE_A/videos",
        "spkrs": [],
        "tags": []
      },
      {
        "slug": "2022-07-18-F",
        "type": "video",
        "dur": "25",
        "title": "Designing Reactive Angular Components (RxJS) | Deborah Kurata | EnterpriseNG 2021",
        "url": "https://www.youtube.com/watch?v=CZYAph73mnI",
        "desc": "In this talk, you'll learn:\nTechniques for designing Angular components and services\nHow to leverage RxJS to retrieve and combine data for display\nHow to leverage RxJS to react to user actions and state changes\nHow to leverage RxJS emit notifications to any other components or services\nWe'll also examine the concept of 'Degrees of Freedom' and how it can help us think through our design and confirm the correctness of our design model.",
        "dAdd": "2022-07-18",
        "dSrc": "2022-07-18",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "ng-conf",
        "aUrl": "https://www.youtube.com/c/ngconfonline/videos",
        "spkrs": ["Deborah Kurata"],
        "tags": ["RxJS"]
      },
      {
        "slug": "2022-07-18-G",
        "type": "video",
        "dur": "7",
        "title": "Ionic 6 Angular - constructor vs ngOnInit",
        "url": "https://www.youtube.com/watch?v=QR-N11BFpAY",
        "desc": "Hello Friends, Welcome Back to @CodingTechnyks. In this video, I am going to teach you the difference between constructor and ngOnInit using an existing project, part of my Ionic complete course.",
        "dAdd": "2022-07-18",
        "dSrc": "2022-07-18",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Coding Technyks",
        "aUrl": "https://www.youtube.com/c/CodingTechnyks/videos",
        "spkrs": [],
        "tags": ["Ionic"]
      },
      {
        "slug": "2022-07-18-H",
        "type": "video",
        "dur": "76",
        "title": "Angular 13 Reactive forms with real-time WEB API | CRUD Operation | Angular 13 | Learn Smart Coding",
        "url": "https://www.youtube.com/watch?v=5vnWjjKpPW8",
        "desc": "This video demonstrates how to implement CRUD (Create, Read, Update and Delete) operations using Reactive Forms in Angular 13. We will be using a shopping app for this demo.",
        "dAdd": "2022-07-18",
        "dSrc": "2022-07-18",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Learn Smart Coding",
        "aUrl": "https://www.youtube.com/channel/UCKUxSY2xp12QiP3c60sOc-g/videos",
        "spkrs": [],
        "tags": ["Forms", "Reactive Forms", "CRUD"]
      }
    ]
  },
  {
    "date": "2022-07-19",
    "dailyPosts": [
      {
        "slug": "2022-07-19-A",
        "type": "blog",
        "title": "How to authenticate users rapidly in Angular using Firebase Authentication",
        "url": "https://arif-arrijal.medium.com/how-to-create-authentication-quickly-in-angular-using-firebase-2209aa149122",
        "desc": "In making an application, authentication is needed to make our application more secure. Authentication is usually created when we have several roles that need to be handled in our application.",
        "dAdd": "2022-07-19",
        "dSrc": "2022-07-18",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Muhamad Arif Arrijal",
        "aUrl": "https://arif-arrijal.medium.com",
        "spkrs": ["Muhamad Arif Arrijal"],
        "tags": ["Firebase", "Auth"]
      },
      {
        "slug": "2022-07-19-B",
        "type": "blog",
        "title": "Beginner resources for learning Angular 2022",
        "url": "https://medium.com/@nccandiotti/beginner-resources-for-learning-angular-2022-8c1703e16392",
        "desc": "May 6, 2022, a day I will never forget … I was offered my first job as an associate software engineer! I DID IT! Since then, I have been hard at work studying up on Angular, the primary frontend framework used by my employer.",
        "dAdd": "2022-07-19",
        "dSrc": "2022-07-17",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Nicole Candiotti",
        "aUrl": "https://medium.com/@nccandiotti",
        "spkrs": ["Nicole Candiotti"],
        "tags": []
      },
      {
        "slug": "2022-07-19-C",
        "type": "blog",
        "title": "Local Angular SSR with https",
        "url": "https://medium.com/@dnlcyan/local-angular-ssr-with-https-b9d305dc620d",
        "desc": "For security reasons, nowadays every website should be only accessible by https and most of the browsers are limiting the possibility to enter at a not certificated website (browser configuration can bypassed that).",
        "dAdd": "2022-07-19",
        "dSrc": "2022-07-18",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Daniel Chang Yan",
        "aUrl": "https://medium.com/@dnlcyan",
        "spkrs": ["Daniel Chang Yan"],
        "tags": ["SSR"]
      },
      {
        "slug": "2022-07-19-D",
        "type": "blog",
        "title": "Angular Material Forms Username Availability (Learn it in 21 Steps)",
        "url": "https://srisad95.medium.com/angular-material-forms-username-availability-learn-it-in-21-steps-41214e7ab929",
        "desc": "",
        "dAdd": "2022-07-19",
        "dSrc": "2022-07-18",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Srikanth Y",
        "aUrl": "https://srisad95.medium.com",
        "spkrs": [],
        "tags": ["Angular Material", "Forms"]
      },
      {
        "slug": "2022-07-19-E",
        "type": "blog",
        "title": "Angular Application Build Optimizations",
        "url": "https://medium.com/ngconf/angular-application-build-optimizations-3b9c5dca2083",
        "desc": "tldr; So many users use our applications on their phones and on mobile internet. Others may be on wifi, but not have super fast speeds. Because of those constraints, one of the most important things we can do is ensure our application bundle size is as small as possible. I recently went down the road of optimizing these build sizes for the apps in our Nx workspace and realized a few things that I hope can help others.",
        "dAdd": "2022-07-19",
        "dSrc": "2022-07-18",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Preston Lamb",
        "aUrl": "https://medium.com/@pjlamb12",
        "spkrs": ["Preston Lamb"],
        "tags": ["Performance", "Nx"]
      },
      {
        "slug": "2022-07-19-F",
        "type": "video",
        "dur": "42",
        "title": "Setting up Angular libraries with partial Ivy compilation and peer deps",
        "url": "https://www.youtube.com/watch?v=Tgg_J41FVCA",
        "desc": "Going through the Trellis.org Open Source repo and updating Angular packages with supported peer dependencies and partial compilation mode for Ivy instructions.",
        "dAdd": "2022-07-19",
        "dSrc": "2022-07-18",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Jay Bell",
        "aUrl": "https://www.youtube.com/channel/UCNSNsSjigIpbMwof4BjKmNA/videos",
        "spkrs": ["Jay Bell"],
        "tags": ["Libraries", "Ivy"]
      },
      {
        "slug": "2022-07-19-G",
        "type": "video",
        "dur": "5",
        "title": "Unit testing in Angular (Testing functions)",
        "url": "https://www.youtube.com/watch?v=c-TtbwjibIc",
        "desc": "No matter whether you choose to adopt a TDD (test-driven development) strategy or not, working with unit testing is a need for every project that at least attempts to be serious.\n\nIn this video, we will briefly discuss how to write your first unit test, how to name the tests, and what to think on when working with testing in Angular using Jasmine and Karma and outlining every step of the procedure.",
        "dAdd": "2022-07-19",
        "dSrc": "2022-07-19",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Sebastian Persson",
        "aUrl": "https://www.youtube.com/channel/UChACd5wGjvkmgTR63YW4HGQ/videos",
        "spkrs": ["Sebastian Persson"],
        "tags": ["Testing", "Unit Testing"]
      },
      {
        "slug": "2022-07-19-H",
        "type": "video",
        "dur": "35",
        "title": "Angular Interview Questions and Answers | Angular Interview Questions | For 2-4 years",
        "url": "https://www.youtube.com/watch?v=PZNB4zGOnl0",
        "desc": "Top 20 Angular Interview Question and Answers will help you to prepare yourself for Angular Interviews.",
        "dAdd": "2022-07-19",
        "dSrc": "2022-07-19",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Learning Partner",
        "aUrl": "https://www.youtube.com/c/LearningPartnerDigital/videos",
        "spkrs": [],
        "tags": []
      },
      {
        "slug": "2022-07-19-J",
        "type": "blog",
        "title": "How to create an Angular library or package and publish on npm",
        "url": "https://dev.to/brunoelo/how-to-create-an-angular-library-or-package-4c15",
        "desc": "What are libraries?\nLibraries which are also known as packages are reusable codes that speed up development processes or add functionalities to our applications. They save time, energy and resources for developers.",
        "dAdd": "2022-07-19",
        "dSrc": "2022-07-19",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Emeka Elo-Chukwuma",
        "aUrl": "https://dev.to/brunoelo",
        "spkrs": ["Emeka Elo-Chukwuma"],
        "tags": ["Libraries", "NPM"]
      },
      {
        "slug": "2022-07-19-K",
        "type": "video",
        "dur": "102",
        "title": "Angular(v14) | GraphQL Client - Apollo Angular(v3) | JSON Server GraphQL | CRUD Example[Full Video]",
        "url": "https://www.youtube.com/watch?v=5c-AGyuO7VA",
        "desc": "",
        "dAdd": "2022-07-19",
        "dSrc": "2022-07-19",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Naveen Bommidi Tech Seeker",
        "aUrl": "https://www.youtube.com/c/NaveenTechSeeker/videos",
        "spkrs": ["Naveen Bommidi"],
        "tags": ["GraphQL", "CRUD"]
      },
      {
        "slug": "2022-07-19-L",
        "type": "blog",
        "title": "Making typed forms a bit more consistent",
        "url": "https://dev.to/jrubzjeknf/making-typed-forms-a-bit-more-consistent-353l",
        "desc": "Angular typed forms are pretty awesome. Strongly typing your forms bring a lot of benefits, but one issue is holding it back: allowing you to define a single interface from which you can create a typed form and infer the form value from it.",
        "dAdd": "2022-07-19",
        "dSrc": "2022-07-19",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Jrubzjeknf",
        "aUrl": "https://dev.to/jrubzjeknf",
        "spkrs": [],
        "tags": ["Forms", "Typed Forms"]
      },
      {
        "slug": "2022-07-19-M",
        "type": "video",
        "dur": "29",
        "title": "Angular JSON File - My Top 8 Settings (2022)",
        "url": "https://www.youtube.com/watch?v=L9dG17xbVic",
        "desc": "The Angular.json file is where we usually configure the Angular workspace and every particular project or library. In this video, I will share my TOP 8 the most used settings in my angular.json files, and some advanced configurations that might also be useful in your projects.",
        "dAdd": "2022-07-19",
        "dSrc": "2022-07-19",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Decoded Frontend",
        "aUrl": "https://www.youtube.com/c/DecodedFrontend/videos",
        "spkrs": ["Dmytro Mezhenskyi"],
        "tags": ["Configuration"]
      },
      {
        "slug": "2022-07-19-N",
        "type": "blog",
        "title": "Intro To Angular Reactive Forms",
        "url": "https://dev.to/this-is-angular/intro-to-angular-reactive-forms-2ggk",
        "desc": "Angular offers two main approaches to handling user input through forms: reactive and template-driven. Both approaches build on top of a common Forms API.",
        "dAdd": "2022-07-19",
        "dSrc": "2022-07-19",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Lorenzo Zarantonello",
        "aUrl": "https://dev.to/lorenzojkrl",
        "spkrs": ["Lorenzo Zarantonello"],
        "tags": ["Forms", "Reactive Forms"]
      },
      {
        "slug": "2022-07-19-P",
        "type": "video",
        "dur": "9",
        "title": "How to proxying Angular 14 to a backend server ( Django Rest API )",
        "url": "https://www.youtube.com/watch?v=uH4W7thH4fs",
        "desc": "This is a complete tutorial, here, You will get learn how to configure proxying Angular 14 to a backend server Django Rest API",
        "dAdd": "2022-07-19",
        "dSrc": "2022-07-19",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "TechWebDocs",
        "aUrl": "https://www.youtube.com/channel/UCAT2-rlTnNn6G9JXUHMCRdQ/videos",
        "spkrs": [],
        "tags": []
      },
      {
        "slug": "2022-07-19-Q",
        "type": "video",
        "dur": "11",
        "title": "#3 Angular Components",
        "url": "https://www.youtube.com/watch?v=YuXLXnRVxPw",
        "desc": "Components are the most basic UI building block of an Angular application.",
        "dAdd": "2022-07-19",
        "dSrc": "2022-07-19",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Rohini Babu",
        "aUrl": "https://www.youtube.com/channel/UCjf7EQhfWGF74XQ6Q0inDtA/videos",
        "spkrs": ["Rohini Babu"],
        "tags": ["Components"]
      },
      {
        "slug": "2022-07-19-R",
        "type": "video",
        "dur": "27",
        "title": "Speed up your Angular serve and build times with Module Federation and Nx",
        "url": "https://www.youtube.com/watch?v=JkcaGzhRjkc",
        "desc": "Learn how to speed up your Angular serve times in development (but build times in CI) by leveraging Webpack Module Federation. @Juri Strumpflohner walks you through adding MF capabilities to an existing Angular application and shows how to create separate MF remote apps and how to refactor the existing Angular routes into those apps. Finally, you're also going to see how to set up a local deployment script.",
        "dAdd": "2022-07-19",
        "dSrc": "2022-07-19",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Nrwl - Narwhal Technologies Inc.",
        "aUrl": "https://www.youtube.com/c/Nrwl_io/videos",
        "spkrs": ["Juri Strumpflohner"],
        "tags": ["Nx", "Module Federation", "Webpack"]
      },
      {
        "slug": "2022-07-19-S",
        "type": "video",
        "dur": "58",
        "title": "Angular World Tour with Angular MTV, Angular SF, GDGSV and Modern Web",
        "url": "https://www.youtube.com/watch?v=obb9DM1iwa4",
        "desc": "Duncan Faulkner - Angular Developer, Author, Speaker - Angular Material Form-Field Fundamentals\nJuri Strumpflohner, Director of Developer Experience, Nrwl - Architecting large scale Angular apps with Module Federation",
        "dAdd": "2022-07-19",
        "dSrc": "2022-07-19",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "This Dot Media",
        "aUrl": "https://www.youtube.com/c/ThisDotMedia/videos",
        "spkrs": ["Juri Strumpflohner", "Duncan Faulkner"],
        "tags": ["Angular Material", "Architecture", "Module Federation"]
      },
      {
        "slug": "2022-07-19-T",
        "type": "blog",
        "title": "Ng-News: Episode 22/28",
        "url": "https://dev.to/rainerhahnekamp/ng-news-episode-2228-38h1",
        "desc": "",
        "dAdd": "2022-07-19",
        "dSrc": "2022-07-19",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Rainer Hahnekamp",
        "aUrl": "https://dev.to/rainerhahnekamp",
        "spkrs": [],
        "tags": []
      }
    ]
  },
  {
    "date": "2022-07-20",
    "dailyPosts": [
      {
        "slug": "2022-07-20-A",
        "type": "video",
        "dur": "32",
        "title": "Angular Forms",
        "url": "https://www.youtube.com/watch?v=-I232-uRtMs",
        "desc": "A detailed review of the two types of Angular Forms, Template-driven and Reactive",
        "dAdd": "2022-07-20",
        "dSrc": "2022-07-19",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Milwaukee JavaScript User Group",
        "aUrl": "https://www.youtube.com/user/milwaukeejs/videos",
        "spkrs": ["James Domagalski"],
        "tags": ["Forms"]
      },
      {
        "slug": "2022-07-20-B",
        "type": "video",
        "dur": "10",
        "title": "Angular Tutorial For Beginners : Angular HTTP Part 13 Core Knowledge Sharing",
        "url": "https://www.youtube.com/watch?v=MeIIJaq6tKE",
        "desc": "",
        "dAdd": "2022-07-20",
        "dSrc": "2022-07-19",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Core Knowledge Sharing",
        "aUrl": "https://www.youtube.com/c/CoreKnowledgeSharing/videos",
        "spkrs": ["Ankush Agnihotri"],
        "tags": ["HttpClient"]
      },
      {
        "slug": "2022-07-20-C",
        "type": "video",
        "dur": "64",
        "title": "Angular V14 Get Started Introduction, Project File Structure - LIVE",
        "url": "https://www.youtube.com/watch?v=6Smb7HHTEEs",
        "desc": "",
        "dAdd": "2022-07-20",
        "dSrc": "2022-07-19",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Leela Web Dev",
        "aUrl": "https://www.youtube.com/c/LeelaWebDev/videos",
        "spkrs": ["Leela Narasimha"],
        "tags": []
      },
      {
        "slug": "2022-07-20-D",
        "type": "video",
        "dur": "65",
        "title": "Build A Angular Movie Info App Using RxJS Part1",
        "url": "https://www.youtube.com/watch?v=8n2xoG92dns",
        "desc": "In this video we will build a movie listing application using JavaScript ES6, HttpClientModule for making HTTP requests to the OMDb API, Add navigation with routing and create a detail page to your single page application.",
        "dAdd": "2022-07-20",
        "dSrc": "2022-07-20",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "MartinDevs",
        "aUrl": "https://www.youtube.com/user/Electronicsmf/videos",
        "spkrs": [],
        "tags": ["RxJS", "HttpClient", "Routing"]
      },
      {
        "slug": "2022-07-20-E",
        "type": "blog",
        "title": "Have a Day at the Spa working on Your SPA with Remote Data",
        "url": "https://dev.to/dmitryefimenko/have-a-day-at-the-spa-working-on-your-spa-with-remote-data-5epo",
        "desc": "TLDR: Use the RemoteData data structure from the @ngspot/remote-data library to describe data being requested from an API. Use RxJS and a custom operator trackRemoteData from the @ngspot/remote-data-rx library for best results.",
        "dAdd": "2022-07-20",
        "dSrc": "2022-07-20",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Dmitry A. Efimenko",
        "aUrl": "https://dev.to/dmitryefimenko",
        "spkrs": ["Dmitry A. Efimenko"],
        "tags": ["SPA", "RxJS"]
      },
      {
        "slug": "2022-07-20-F",
        "type": "video",
        "dur": "9",
        "title": "A simple approach to displaying form validation messages in Angular",
        "url": "https://www.youtube.com/watch?v=ctXcCRl-zCw",
        "desc": "In this video, we take a look at how to display form validation error messages to the user in a way that is simple to implement, doesn't rely on any 3rd party dependencies, and doesn't compromise on UX.",
        "dAdd": "2022-07-20",
        "dSrc": "2022-07-20",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Joshua Morony",
        "aUrl": "https://www.youtube.com/c/JoshuaMorony/videos",
        "spkrs": ["Joshua Morony"],
        "tags": ["Forms", "Validation"]
      },
      {
        "slug": "2022-07-20-G",
        "type": "blog",
        "title": "Creating a Combobox component in Angular",
        "url": "https://medium.com/into-tech/creating-a-combobox-component-in-angular-4ea8dfcf5112",
        "desc": "This article outlines key steps I took when building a Combobox in Angular, but also highlights what makes a good shared component, noting challenges along the way such as evolving requirements and developer experience.",
        "dAdd": "2022-07-20",
        "dSrc": "2022-07-20",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Joel Balmer",
        "aUrl": "https://medium.com/@joel.balmer",
        "spkrs": ["Joel Balmer"],
        "tags": []
      },
      {
        "slug": "2022-07-20-H",
        "type": "release",
        "title": "Angular Release: v14.0.7",
        "url": "https://github.com/angular/angular/releases/tag/14.0.7",
        "desc": "",
        "dAdd": "2022-07-20",
        "dSrc": "2022-07-20",
        "srcSite": "GitHub Angular",
        "srcUrl": "https://github.com/angular/angular/releases",
        "aName": "Andrew Kushnir",
        "aUrl": "https://github.com/AndrewKushnir",
        "spkrs": [],
        "tags": ["Release"]
      },
      {
        "slug": "2022-07-20-J",
        "type": "release",
        "title": "Angular Release: v14.1.0",
        "url": "https://github.com/angular/angular/releases/tag/14.1.0",
        "desc": "",
        "dAdd": "2022-07-20",
        "dSrc": "2022-07-20",
        "srcSite": "GitHub Angular",
        "srcUrl": "https://github.com/angular/angular/releases",
        "aName": "Andrew Kushnir",
        "aUrl": "https://github.com/AndrewKushnir",
        "spkrs": [],
        "tags": ["Release"]
      },
      {
        "slug": "2022-07-20-K",
        "type": "blog",
        "title": "Testing NgRx Effects with Async/Await",
        "url": "https://medium.com/herodevs/testing-ngrx-effects-with-async-await-351cc39bc5d5",
        "desc": "This post explains a delightful approach to testing NgRx Effects that could help simplify your code.\n(photo: by Alexandar Todov on Unsplash)",
        "dAdd": "2022-07-20",
        "dSrc": "2022-07-20",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Edward Ezekiel",
        "aUrl": "https://medium.com/@edezekiel",
        "spkrs": ["Edward Ezekiel"],
        "tags": ["NgRx", "Async/await"]
      },
      {
        "slug": "2022-07-20-L",
        "type": "blog",
        "title": "How to Unit Test Angular NgRx Effects",
        "url": "https://marklowg.medium.com/how-to-unit-test-angular-ngrx-effects-ce5075e870a2",
        "desc": "Effects are where you manage things like requesting data, long-running processes that create several events, and other external interactions that your components don't need to be aware of. Read more here.",
        "dAdd": "2022-07-20",
        "dSrc": "2022-07-20",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "George Marklow",
        "aUrl": "https://marklowg.medium.com",
        "spkrs": ["George Marklow"],
        "tags": ["Testing", "Unit Testing", "NgRx"]
      },
      {
        "slug": "2022-07-20-M",
        "type": "blog",
        "title": "Dynamic Component Loading in Angular",
        "url": "https://javascript.plainenglish.io/dynamic-component-loading-4945ce73ad1",
        "desc": "Angular provides a nifty feature for loading new components at runtime. Dynamic component loading can be achieved using various ways including structural directives such as ngSwitchCase, ngIf, ngFor, and router-outlet.",
        "dAdd": "2022-07-20",
        "dSrc": "2022-07-20",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Paul Chesa",
        "aUrl": "https://paul-chesa.medium.com",
        "spkrs": ["Paul Chesa"],
        "tags": ["Components", "Directives", "Dynamic", "*ngFor", "*ngIf", "*ngSwitch", "<router-outlet>"]
      }
    ]
  },
  {
    "date": "2022-07-21",
    "dailyPosts": [
      {
        "slug": "2022-07-21-A",
        "type": "video",
        "dur": "54",
        "title": "Angular V14 Property, Event, Two Way and One Way Data Binding - LIVE",
        "url": "https://www.youtube.com/watch?v=nRfezy9TgpY",
        "desc": "",
        "dAdd": "2022-07-21",
        "dSrc": "2022-07-20",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Leela Web Dev",
        "aUrl": "https://www.youtube.com/c/LeelaWebDev/videos",
        "spkrs": ["Leela Narasimha"],
        "tags": ["Two-Way Data Binding", "One-Way Data Binding"]
      },
      {
        "slug": "2022-07-21-B",
        "type": "blog",
        "title": "Angular — Reading data from JSON file using HttpClient",
        "url": "https://medium.com/@anooprvarrier/angular-reading-data-from-json-file-using-httpclient-3c46ba1aaf22",
        "desc": "In this post, we will discuss on how to read data from a JSON file which is there locally in our assets folder within our repo. So without wasting much time let's start.",
        "dAdd": "2022-07-21",
        "dSrc": "2022-07-20",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Anoop R Warrier",
        "aUrl": "https://medium.com/@anooprvarrier",
        "spkrs": ["Anoop R Warrier"],
        "tags": ["HttpClient", "JSON"]
      },
      {
        "slug": "2022-07-21-C",
        "type": "video",
        "dur": "5",
        "title": "Part 9: Angular 13 @ViewChild. How to use Examples and comparison against simple html / javascript.",
        "url": "https://www.youtube.com/watch?v=HT4GzcQtJNc",
        "desc": "A Gentle introduction to use the @ViewChild decorator. Begin each example by comparing to simple HTML/JavaScript. How to use the Template Reference Variable in your HTML, and how to use this reference variable in the TypeScript code.",
        "dAdd": "2022-07-21",
        "dSrc": "2022-07-21",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Software Nuggets",
        "aUrl": "https://www.youtube.com/c/SoftwareNuggets/videos",
        "spkrs": [],
        "tags": ["@ViewChild", "Template Reference Variable"]
      },
      {
        "slug": "2022-07-21-D",
        "type": "video",
        "dur": "6",
        "title": "Angular Chat App with Firebase (6/6): Preventing duplicate chats with the same users",
        "url": "https://www.youtube.com/watch?v=KlzLj0_JGqU",
        "desc": "This is Part 6 (last part) of a series of videos on creating a chat app with Angular Material and Firebase Firestore Database. In this part, we'll fix a bug and prevent multiple chats from being created with the same users.",
        "dAdd": "2022-07-21",
        "dSrc": "2022-07-21",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Zoaib Khan",
        "aUrl": "https://www.youtube.com/c/ZoaibKhan/videos",
        "spkrs": ["Zoaib Khan"],
        "tags": ["Firebase", "AngularFire"]
      },
      {
        "slug": "2022-07-21-E",
        "type": "video",
        "dur": "7",
        "title": "Angular 13 Tutorial #11 Custom Directive",
        "url": "https://www.youtube.com/watch?v=ICUWX4nVFw4",
        "desc": "In this video, We will discuss how to create custom directive in Angular with a practical demonstration",
        "dAdd": "2022-07-21",
        "dSrc": "2022-07-21",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Tech Talks",
        "aUrl": "https://www.youtube.com/channel/UCqDzH0cMrTy9sRqeyH9auEQ/videos",
        "spkrs": [],
        "tags": ["Directives", "Custom"]
      },
      {
        "slug": "2022-07-21-F",
        "type": "video",
        "dur": "82",
        "title": "Testing Angular - How to Start Loving Writing Tests Again",
        "url": "https://www.youtube.com/watch?v=M39PAWttOWg",
        "desc": "In this session, Alex goes over different types of testing, the whys and the hows - testing Angular Components & Services.",
        "dAdd": "2022-07-21",
        "dSrc": "2022-07-21",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Angular Kenya",
        "aUrl": "https://www.youtube.com/c/AngularKenya/videos",
        "spkrs": ["Alex Okrushko"],
        "tags": ["Testing"]
      },
      {
        "slug": "2022-07-21-G",
        "type": "podcast",
        "dur": "25",
        "title": "Episode 193: Localizing Docs with Aristeidis Bampakos",
        "url": "https://webrush.io/episodes/episode-193-localizing-docs-with-aristeidis-bampakos",
        "desc": "Aristeidis Bampakos joins us to talk about translating documentation into other languages, how to deal with images, whether Google Translate is any help, and if crowd sourcing the problem works?",
        "dAdd": "2022-07-21",
        "dSrc": "2022-07-21",
        "srcSite": "Web Rush",
        "srcUrl": "https://webrush.io",
        "aName": "Aristeidis Bampakos",
        "aUrl": "https://twitter.com/abampakos",
        "spkrs": ["Aristeidis Bampakos"],
        "tags": ["Internationalization"]
      },
      {
        "slug": "2022-07-21-H",
        "type": "video",
        "dur": "11",
        "title": "Angular 13 Tutorial #12 @Input Decorator",
        "url": "https://www.youtube.com/watch?v=hvUhfuz0hxI",
        "desc": "In this video, we will discuss - what is @Input Decorator and passing Data From Parent To Child Component",
        "dAdd": "2022-07-21",
        "dSrc": "2022-07-21",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Tech Talks",
        "aUrl": "https://www.youtube.com/channel/UCqDzH0cMrTy9sRqeyH9auEQ/videos",
        "spkrs": [],
        "tags": ["@Input", "Data Transfer"]
      },
      {
        "slug": "2022-07-21-J",
        "type": "video",
        "dur": "63",
        "title": "Angular and Firebase Crash Course | Create a Note Taking Application",
        "url": "https://www.youtube.com/watch?v=BlMhUSjnlJI",
        "desc": "In this crash course, we created a Note Taking Application with full CRUD functionality using the Firestore database. Some of the things we did in this crash course include:\nGetting data from the Firestore database.\nMaking use of Modular imports from the Firebase API\nImplementing Reactive forms.\nQuerying the Firestore database\nCreating services and injecting Angular services, etc.",
        "dAdd": "2022-07-21",
        "dSrc": "2022-07-21",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "The Code Angle",
        "aUrl": "https://www.youtube.com/c/TheCodeAngle/videos",
        "spkrs": ["Deji Adesoga"],
        "tags": ["Firebase"]
      },
      {
        "slug": "2022-07-21-K",
        "type": "video",
        "dur": "8",
        "title": "Creating a Basic Form in Angular Using the ngModel Directive - Relearning Angular Part 16",
        "url": "https://www.youtube.com/watch?v=WMxhT1HWkcA",
        "desc": "Hey everyone, today we are going to create a basic form in Angular and tie the data to the component class using ngModel",
        "dAdd": "2022-07-21",
        "dSrc": "2022-07-21",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Coding Under Pressure",
        "aUrl": "https://www.youtube.com/channel/UCdGYTnk-Ll4S6yOsYwU8D2w/videos",
        "spkrs": [],
        "tags": ["Forms", "ngModel"]
      },
      {
        "slug": "2022-07-21-L",
        "type": "video",
        "dur": "56",
        "title": "JS Girl in a .NET World: Angular App Wrapped in a.NET MAUI Blazor Hybrid App!",
        "url": "https://www.youtube.com/watch?v=6dEl4n5MuBo",
        "desc": "Let's chat about .NET MAUI Blazor Hybrid apps. More precisely, Alyssa will make a brand new Angular app and practice (along with anyone who wants to give this a try) wrapping it in a .NET MAUI Blazor Hybrid App. Easy, right?",
        "dAdd": "2022-07-21",
        "dSrc": "2022-07-21",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Progress Telerik",
        "aUrl": "https://www.youtube.com/c/telerik/videos",
        "spkrs": ["Alyssa Nicoll"],
        "tags": []
      },
      {
        "slug": "2022-07-21-M",
        "type": "podcast",
        "dur": "28",
        "title": "Making the Most of Meetups - AiA 351",
        "url": "https://topenddevs.com/podcasts/adventures-in-angular/episodes/making-the-most-of-meetups-aia-351",
        "desc": "Meetups are a remarkably easy and convenient way to connect and network with others.  Today on the show, Charles shares his various strategies on how to make the most of Meetups, whether to network to find a better job, learn something new, collaborate with others, get counsel about your career or current work problems, or simply enjoy the human connection and community with others.",
        "dAdd": "2022-07-21",
        "dSrc": "2022-07-21",
        "srcSite": "DevChat.tv",
        "srcUrl": "https://devchat.tv",
        "aName": "Adventures In Angular",
        "aUrl": "https://topenddevs.com/podcasts/adventures-in-angular/",
        "spkrs": [],
        "tags": ["Community"]
      },
      {
        "slug": "2022-07-21-N",
        "type": "video",
        "dur": "11",
        "title": "Typed Forms in Angular",
        "url": "https://www.youtube.com/watch?v=L-odCf4MfJc",
        "desc": "Welcome to another new video all where we're talking about Typed Forms in Angular. Our very own Dylan Hunn shares the details! Are you already using Typed Forms in your applications? Let us know in the comments down below.",
        "dAdd": "2022-07-21",
        "dSrc": "2022-07-21",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Angular",
        "aUrl": "https://www.youtube.com/c/Angular/videos",
        "spkrs": ["Dylan Hunn"],
        "tags": ["Forms", "Typed Forms"]
      }
    ]
  },
  {
    "date": "2022-07-22",
    "dailyPosts": [
      {
        "slug": "2022-07-22-A",
        "type": "blog",
        "title": "How I optimized my Angular website",
        "url": "https://dev.to/brihoum/how-i-optimized-my-angular-website-3fd0",
        "desc": "Building application/websites with Angular always come with a downside: the bundle size. The latter has a direct impact on the loading speed & the user experience of our project.",
        "dAdd": "2022-07-22",
        "dSrc": "2022-07-21",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Abdjalil Brihoum",
        "aUrl": "https://dev.to/brihoum",
        "spkrs": ["Abdjalil Brihoum"],
        "tags": ["Performance"]
      },
      {
        "slug": "2022-07-22-B",
        "type": "blog",
        "title": "Angular Basics: Tips for Structuring Your Angular Project",
        "url": "https://www.telerik.com/blogs/angular-basics-tips-structuring-angular-project",
        "desc": "Your Angular app structure will change depending on the scenario, but these tips will help get you started right every time.",
        "dAdd": "2022-07-22",
        "dSrc": "2022-07-22",
        "srcSite": "Progress Telerik Blog",
        "srcUrl": "https://www.telerik.com/blogs/web-angular",
        "aName": "Dany Paredes",
        "aUrl": "https://www.telerik.com/blogs/author/dany-paredes",
        "spkrs": ["Dany Paredes"],
        "tags": ["Architecture"]
      },
      {
        "slug": "2022-07-22-C",
        "type": "video",
        "dur": "28",
        "title": "Testing RxJS observables effectively | Shai Reznik | EnterpriseNG 2021",
        "url": "https://www.youtube.com/watch?v=0IfTwAtL_fI",
        "desc": "In this session, I will show you better tools and strategies for testing RxJS Observables, which are much easier and more intuitive. As a result, you will increase your confidence in your code correctness and will be able to refactor parts of it with ease without feeling confused or stuck.",
        "dAdd": "2022-07-22",
        "dSrc": "2022-07-22",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "ng-conf",
        "aUrl": "https://www.youtube.com/c/ngconfonline/videos",
        "spkrs": ["Shai Reznik"],
        "tags": ["Testing", "RxJS", "Observables"]
      },
      {
        "slug": "2022-07-22-D",
        "type": "video",
        "dur": "140",
        "title": "Angular Community Meetup | June 28th, 2022 | Carl Bergenhem, Jordan Powell, & Gleb Bahmutov",
        "url": "https://www.youtube.com/watch?v=RVascfQ9X8U",
        "desc": " This month's Angular Community Meetup featured:\nCarl Bergenhem - Developing a Product Sense\nJordan Powell - Multi-Domain\nGleb Bahmutov - HTTP/1, HTTP/2, HTTP/3 ...\n\nThe Angular Community Meetup is an online monthly meetup sponsored by ng-conf.",
        "dAdd": "2022-07-22",
        "dSrc": "2022-07-22",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "ng-conf",
        "aUrl": "https://www.youtube.com/c/ngconfonline/videos",
        "spkrs": ["Carl Bergenhem", "Jordan Powell", "Gleb Bahmutov"],
        "tags": []
      },
      {
        "slug": "2022-07-22-E",
        "type": "video",
        "dur": "133",
        "title": "Angular Community Meetup | July 12, 2022 | Lightning Talks Lollapolooza",
        "url": "https://www.youtube.com/watch?v=E9RDS7lcQns",
        "desc": "Chris Perko | Conditional validators in Reactive Forms\nMarko Stanimirovic | NgRx Action Group Creator\nMarkus Ingvarsson | A boost of dependency injection\nAdy Ngom | 3 Quick Tips on How to Learn and Understand Angular\nKamil Chlebek | How to lazily load standalone component & configure it by using Injector?\nNicolas Ticona Valdivia | Design Principles in Angular\nYaakov Chaikin | Replace ::ng-deep For Good!\nJon Warrington | RxJS and Lego Art\nMini Bhati | Introduction to Standalone PDC\nAzizi Yazit | Continuous integration with Trunk-based & Feature Toggle\nJonathan Garvey | Tools of the Trade: Better software through better dev tools\nAlfredo Perez | Making Atomic the NgRx Entity",
        "dAdd": "2022-07-22",
        "dSrc": "2022-07-22",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "ng-conf",
        "aUrl": "https://www.youtube.com/c/ngconfonline/videos",
        "spkrs": ["Chris Perko", "Marko Stanimirovic", "Markus Ingvarsson", "Ady Ngom", "Kamil Chlebek", "Nicolas Ticona Valdivia", "Yaakov Chaikin", "Jon Warrington", "Mini Bhati", "Azizi Yazit", "Jonathan Garvey", "Alfredo Perez"],
        "tags": ["::ng-deep", "Styles"]
      },
      {
        "slug": "2022-07-22-F",
        "type": "video",
        "dur": "5",
        "title": "Angular For Beginners - 6. Template Reference Variable",
        "url": "https://www.youtube.com/watch?v=UyWDqZODprk",
        "desc": "",
        "dAdd": "2022-07-22",
        "dSrc": "2022-07-22",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Teddy Smith",
        "aUrl": "https://www.youtube.com/c/TeddySmithNC",
        "spkrs": ["Teddy Smith"],
        "tags": ["Template Reference Variable"]
      }
    ]
  },
  {
    "date": "2022-07-23",
    "dailyPosts": [
      {
        "slug": "2022-07-23-A",
        "type": "blog",
        "title": "Angular 13 Crop Image Before Upload With Preview",
        "url": "https://websolutionstuff.medium.com/angular-13-crop-image-before-upload-with-preview-d650ea0f7664",
        "desc": "In this article, we will see the Angular 13 crop image before uploading with a preview. we will give you a simple example of an Angular 12/13 image cropper example. For image cropping, we are using the ngx-image-cropper npm package. it will provide you Cropping, Zooming, Scaling, and Preview functionality while uploading time.",
        "dAdd": "2022-07-23",
        "dSrc": "2022-07-21",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Websolutionstuff",
        "aUrl": "https://websolutionstuff.medium.com",
        "spkrs": [],
        "tags": []
      },
      {
        "slug": "2022-07-23-B",
        "type": "blog",
        "title": "Location Selection in AGM maps based on Ionic 5 Angular App",
        "url": "https://medium.com/enappd/complete-flow-of-location-selection-in-agm-maps-based-ionic-5-application-28f94442f66c",
        "desc": "In this tutorial, we will be going through the complete solution for handling the location selection in the Ionic 5 Angular application. When you think of any taxi booking application like Uber — these applications have the auto-complete location feature — that will suggest you the address when you type one or more characters.",
        "dAdd": "2022-07-23",
        "dSrc": "2022-07-22",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Vaibhav Gehani",
        "aUrl": "https://medium.com/@vgehani90",
        "spkrs": ["Vaibhav Gehani"],
        "tags": ["Maps", "Google Maps", "Ionic"]
      },
      {
        "slug": "2022-07-23-C",
        "type": "blog",
        "title": "NgRx : Solution to State Management using Angular",
        "url": "https://ashishgopalhattimare.medium.com/ngrx-solution-to-state-management-using-angular-344889572c18",
        "desc": "What is NgRx? NgRx is a Reactive State Management for Angular inspired by Redux. It provides a perfect library support for the following features...",
        "dAdd": "2022-07-23",
        "dSrc": "2022-07-22",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Ashish Gopal Hattimare",
        "aUrl": "https://ashishgopalhattimare.medium.com",
        "spkrs": ["Ashish Gopal Hattimare"],
        "tags": ["NgRx"]
      },
      {
        "slug": "2022-07-23-D",
        "type": "blog",
        "title": "Angular — Dynamic Language (i18n and l10n)",
        "url": "https://levelup.gitconnected.com/angular-dynamic-language-i18n-l10n-300d76c31b17",
        "desc": "Learn how to run your application with more than one language and bring scalability without borders!\n(photo: by Syd Wachs on Unsplash)",
        "dAdd": "2022-07-23",
        "dSrc": "2022-07-22",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Lucas de Brito Silva",
        "aUrl": "https://lucasbsilva29.medium.com",
        "spkrs": ["Lucas de Brito Silva"],
        "tags": ["Internationalization"]
      },
      {
        "slug": "2022-07-23-E",
        "type": "video",
        "dur": "9",
        "title": "Reponsive Sidemenu in Angular",
        "url": "https://www.youtube.com/watch?v=DNN5T13jg3w",
        "desc": "If you've never created a responsive sidebar or side menu from scratch in Angular, it might be tricky at first. One way of solving the responsiveness could be to utilize a variable to keep track of the menu's open state. This is something that easily can be achievable with Angular and HTML+SCSS using class toggling.",
        "dAdd": "2022-07-23",
        "dSrc": "2022-07-23",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Sebastian Persson",
        "aUrl": "https://www.youtube.com/channel/UChACd5wGjvkmgTR63YW4HGQ",
        "spkrs": ["Sebastian Persson"],
        "tags": ["Responsive", "Sidenav"]
      },
      {
        "slug": "2022-07-23-F",
        "type": "blog",
        "title": "How-To: Combine Angular with a legacy Asp.Net Web application",
        "url": "https://medium.com/@diari.ismail/how-to-combine-angular-with-a-legacy-asp-net-web-application-b9760adc1bfc",
        "desc": "Through this article, I want to share with you an easy way to coexist Angular side by side with an existing Asp.Net Web application.",
        "dAdd": "2022-07-23",
        "dSrc": "2022-07-23",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Dieri Ismail",
        "aUrl": "https://medium.com/@diari.ismail",
        "spkrs": ["Dieri Ismail"],
        "tags": []
      },
      {
        "slug": "2022-07-23-G",
        "type": "video",
        "dur": "18",
        "title": "Part-1 | Angular(v14) JWT Access Token Authentication & Refresh Token",
        "url": "https://www.youtube.com/watch?v=hbgR1xV63QI",
        "desc": "Video Summary:, What JSON Web Token, Creating Angular 14 application, Configure bootstrap, Create Home component, Create Feature Module like 'Auth' and Component like 'Login', NestJS(NodeJS app) GitHub documentation for jwt API",
        "dAdd": "2022-07-23",
        "dSrc": "2022-07-23",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Naveen Bommidi Tech Seeker",
        "aUrl": "https://www.youtube.com/c/NaveenTechSeeker/videos",
        "spkrs": ["Naveen Bommidi"],
        "tags": ["Auth", "JWT"]
      }
    ]
  },
  {
    "date": "2022-07-24",
    "dailyPosts": [
      {
        "slug": "2022-07-24-A",
        "type": "video",
        "dur": "15",
        "title": "Scully - Generate static site from Angular 14 app",
        "url": "https://www.youtube.com/watch?v=zwgFgBH-y9k",
        "desc": "Scully static site generator for creating static website from Angular SPA. We also explore the concept of Transferstate which can be used to share data between Server and Client sides.",
        "dAdd": "2022-07-24",
        "dSrc": "2022-07-24",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "JS Frameworks",
        "aUrl": "https://www.youtube.com/c/JSFrameworks/videos",
        "spkrs": [],
        "tags": ["Scully"]
      },
      {
        "slug": "2022-07-24-B",
        "type": "video",
        "dur": "5",
        "title": "03. Introduction to Angular | Angular - Beyond Fundamentals",
        "url": "https://www.youtube.com/watch?v=a4vBljyLPmI",
        "desc": "",
        "dAdd": "2022-07-24",
        "dSrc": "2022-07-24",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Ervis Trupja",
        "aUrl": "https://www.youtube.com/c/DotNetHow/videos",
        "spkrs": ["Ervis Trupja"],
        "tags": []
      },
      {
        "slug": "2022-07-24-C",
        "type": "blog",
        "title": "File Upload in Angular 13",
        "url": "https://dev.to/giladmaayan/file-upload-in-angular-13-5829",
        "desc": "In this article, I will show how to set up file upload in Angular 13 in just a few simple steps:",
        "dAdd": "2022-07-24",
        "dSrc": "2022-07-24",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Gilad David Maayan",
        "aUrl": "https://dev.to/giladmaayan",
        "spkrs": ["Gilad David Maayan"],
        "tags": []
      },
      {
        "slug": "2022-07-24-D",
        "type": "video",
        "dur": "19",
        "title": "How To Integrate Google Map In Angular 14 | Angular Google Maps Integration | Core Knowledge Sharing",
        "url": "https://www.youtube.com/watch?v=PDMd35Uamwg",
        "desc": "",
        "dAdd": "2022-07-24",
        "dSrc": "2022-07-24",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Core Knowledge Sharing",
        "aUrl": "https://www.youtube.com/c/CoreKnowledgeSharing/videos",
        "spkrs": [],
        "tags": ["Maps", "Google Maps"]
      }
    ]
  },
  {
    "date": "2022-07-25",
    "dailyPosts": [
      {
        "slug": "2022-07-25-A",
        "type": "video",
        "dur": "44",
        "title": "Angular V14 *ngIf Directive complete analysis with else and if then else - Angularv14",
        "url": "https://www.youtube.com/watch?v=AEr80ERLgIU",
        "desc": " In this video we will see about the complete structure of the ngIf with else condition - Angular V14",
        "dAdd": "2022-07-25",
        "dSrc": "2022-07-24",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Leela Web Dev",
        "aUrl": "https://www.youtube.com/c/LeelaWebDev/videos",
        "spkrs": ["Leela Narasimha"],
        "tags": ["Directives", "*ngIf", "<ng-template>", "Template Reference Variable"]
      },
      {
        "slug": "2022-07-25-B",
        "type": "video",
        "dur": "28",
        "title": "15. Showing All Product Details using Angular Material Table (To Admin)",
        "url": "https://www.youtube.com/watch?v=rvnitXFB-Xo",
        "desc": "Showing all product details using Angular material table (to admin). In this session, we will see how to show all product details to admin using Angular material table.",
        "dAdd": "2022-07-25",
        "dSrc": "2022-07-24",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Learn Programming Yourself",
        "aUrl": "https://www.youtube.com/c/LearnProgrammingYourself/videos",
        "spkrs": [],
        "tags": ["Angular Material", "Data Table"]
      },
      {
        "slug": "2022-07-25-C",
        "type": "blog",
        "title": "Serving the same Angular build with different URLs",
        "url": "https://dev.to/ayyash/serving-the-same-angular-build-with-different-urls-2aa0",
        "desc": "Previously we created a server in Express to serve the same Angular build with a different language file, using rewrite rules for that file, detecting a cookie. That works well for intranets and authorized applications. Today we shall create our application to detect the language in the URL instead.",
        "dAdd": "2022-07-25",
        "dSrc": "2022-07-25",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Ayyash",
        "aUrl": "https://dev.to/ayyash",
        "spkrs": [],
        "tags": ["Internationalization"]
      },
      {
        "slug": "2022-07-25-D",
        "type": "video",
        "dur": "20",
        "title": "Part-2 | Angular(v14) JWT Access Token Authentication & Refresh Token",
        "url": "https://www.youtube.com/watch?v=w_q8ruSfEdw",
        "desc": "Video Summary: Creating Login Form, Create login-model.ts and token-model.ts, Create AuthService File, Consume the login endpoint",
        "dAdd": "2022-07-25",
        "dSrc": "2022-07-25",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Naveen Bommidi Tech Seeker",
        "aUrl": "https://www.youtube.com/c/NaveenTechSeeker/videos",
        "spkrs": ["Naveen Bommidi"],
        "tags": ["JWT", "Auth"]
      },
      {
        "slug": "2022-07-25-E",
        "type": "podcast",
        "dur": "74",
        "title": "S2E26 | Ask Me Anything with Jason Warner",
        "url": "https://www.spreaker.com/user/14532324/s2e26-ask-me-anything-with-jason-warner?utm_campaign=episode-title&utm_medium=app&utm_source=widget",
        "desc": "In this episode Brooke, Erik, & guest panelist Jason Warner go boldly into the uncharted territories of our first ever Ask Me Anything episode! We take on listener-submitted questions on topics ranging from working remotely and the dynamics of working on an agile team, to dealing with being fired and revitalizing your motivation at work.",
        "dAdd": "2022-07-25",
        "dSrc": "2022-07-25",
        "srcSite": "Spreaker",
        "srcUrl": "https://spreaker.com",
        "aName": "Angular Experience",
        "aUrl": "https://angular-experience.web.app/episodes",
        "spkrs": ["Jason Warner", "Brooke Avery", "Erik Slack"],
        "tags": []
      },
      {
        "slug": "2022-07-25-F",
        "type": "video",
        "dur": "111",
        "title": "State Management Demo Repo | NgRx vs StateAdapt",
        "url": "https://www.youtube.com/watch?v=h_IkU-52lrM",
        "desc": "Since we have other libraries too, here's how StateAdapt compared to those folders (pages comparisons include files that git thought were completely different when running 'git diff --no-index --stat src/app/pages/elf src/app/pages/state-adapt'",
        "dAdd": "2022-07-25",
        "dSrc": "2022-07-25",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Mike Pearson / Engineering",
        "aUrl": "https://www.youtube.com/channel/UCiPDBcPWl9yswuULEZMosZw/videos",
        "spkrs": ["Mike Pearson"],
        "tags": ["State Management", "NgRx"]
      },
      {
        "slug": "2022-07-25-G",
        "type": "video",
        "dur": "19",
        "title": "Angular Performance Patterns | Minko Gechev | EnterpriseNG 2021",
        "url": "https://www.youtube.com/watch?v=4lNUfL4u9g4",
        "desc": "Angular DevTools is a Google Chrome extension that provides debugging and profiling capabilities for Angular applications. In this session, I will show you how you can leverage this tool to determine what is slowing down your applications and how to quickly resolve the bug and deploy a faster app.",
        "dAdd": "2022-07-25",
        "dSrc": "2022-07-25",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "ng-conf",
        "aUrl": "https://www.youtube.com/c/ngconfonline/videos",
        "spkrs": ["Minko Gechev"],
        "tags": ["Performance", "DevTools"]
      },
      {
        "slug": "2022-07-25-H",
        "type": "blog",
        "title": "Always Know When to Use Share vs. ShareReplay",
        "url": "https://dev.to/bitovi/always-know-when-to-use-share-vs-sharereplay-2jdf",
        "desc": "Using share and shareReplay is pretty darn confusing. The way share and shareReplay work is not always obvious and might lead to unexpected behavior in your application.",
        "dAdd": "2022-07-25",
        "dSrc": "2022-07-25",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Fabio Englert Moutinho",
        "aUrl": "https://dev.to/fabioemoutinho",
        "spkrs": ["Fabio Englert Moutinho"],
        "tags": ["RxJS", "share()", "shareReplay()"]
      },
      {
        "slug": "2022-07-25-J",
        "type": "blog",
        "title": "Reactive forms & Template-driven forms",
        "url": "https://blog.jonandonicastelo.com/reactive-forms-template-driven-forms",
        "desc": "",
        "dAdd": "2022-07-25",
        "dSrc": "2022-07-25",
        "srcSite": "Hashnode",
        "srcUrl": "https://hashnode.com",
        "aName": "Jon Andoni Castelo Melendez",
        "aUrl": "https://hashnode.com/@jonandonicastelo",
        "spkrs": ["Jon Andoni Castelo Melendez"],
        "tags": ["Forms", "Reactive Forms", "Template Driven Forms"]
      },
      {
        "slug": "2022-07-25-K",
        "type": "video",
        "dur": "4",
        "title": "Learn Angular Material | Part #12 | Angular Material Form Field | Angular Material for Beginner",
        "url": "https://www.youtube.com/watch?v=csqwoFWgnjc",
        "desc": "In this tutorial I will show you how to use form field component from Angular Material in your Angular project.",
        "dAdd": "2022-07-25",
        "dSrc": "2022-07-25",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "OnTech",
        "aUrl": "https://www.youtube.com/channel/UC1-XaZ0_TK-oxz4i7CRuXUA/videos",
        "spkrs": [],
        "tags": ["Angular Material", "Form Field"]
      },
      {
        "slug": "2022-07-25-L",
        "type": "video",
        "dur": "39",
        "title": "2022 07 26 Class Binding in Angular",
        "url": "https://www.youtube.com/watch?v=gWari3rKN9Y",
        "desc": "",
        "dAdd": "2022-07-25",
        "dSrc": "2022-07-25",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "DecodingCode",
        "aUrl": "https://www.youtube.com/channel/UCNAtPAC1LT522iXcc0Q1WWg/videos",
        "spkrs": [],
        "tags": ["Class Binding"]
      }
    ]
  },
  {
    "date": "2022-07-26",
    "dailyPosts": [
      {
        "slug": "2022-07-26-A",
        "type": "blog",
        "title": "Byfrost Source Code Visualizer in Development 1— An Indexing Graph",
        "url": "https://itnext.io/byfrost-in-development-1-an-indexing-graph-b696282c734d",
        "desc": "This title could be better but this does have a lot to do with graphs so it's at least not false advertising.",
        "dAdd": "2022-07-26",
        "dSrc": "2022-07-24",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "AlysonN",
        "aUrl": "https://alysonn.medium.com",
        "spkrs": [],
        "tags": ["Performance"]
      },
      {
        "slug": "2022-07-26-B",
        "type": "blog",
        "title": "Angular Interceptors — The Complete Guide",
        "url": "https://javascript.plainenglish.io/angular-interceptors-a-complete-guide-7294e2317ecf",
        "desc": "The Angular interceptor, also known as the HTTP interceptor, is one of my favorite HTTP features in Angular. The reason I like interceptors is that they promote clean code. You write a few lines of code in a single place, and they apply it globally to every HTTP request and response.",
        "dAdd": "2022-07-26",
        "dSrc": "2022-07-24",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Kagklis Vasileios",
        "aUrl": "https://kagklis.medium.com",
        "spkrs": ["Kagklis Vasileios"],
        "tags": ["HttpInterceptors"]
      },
      {
        "slug": "2022-07-26-C",
        "type": "blog",
        "title": "Angular Dependency Injection",
        "url": "https://halfpennysoftware.medium.com/angular-dependency-injection-1d52d3dfb2e9",
        "desc": "Dependency Injection is frequently abbreviated as DI. The paradigm is present throughout Angular. It maintains code flexibility, testability, and mutability. External logic can be inherited by classes without understanding how to generate it. Consumers of those classes are not required to know anything.",
        "dAdd": "2022-07-26",
        "dSrc": "2022-07-25",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Halfpenny Software",
        "aUrl": "https://halfpennysoftware.medium.com",
        "spkrs": [],
        "tags": ["Dependency Injection"]
      },
      {
        "slug": "2022-07-26-D",
        "type": "blog",
        "title": "CSS isolation with Angular Micro frontends",
        "url": "https://medium.com/@epavliy/css-isolation-with-angular-micro-frontends-eb3bd8261bb9",
        "desc": "Recently I've been working with project where micro frontend architecture was required. And found interesting challenges to share with you, folks. In this article we will be working in context Angular, but it's possible also to use other frameworks, of course taking some specifics into account.",
        "dAdd": "2022-07-26",
        "dSrc": "2022-07-24",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Eugene Pavliy",
        "aUrl": "https://medium.com/@epavliy",
        "spkrs": ["Eugene Pavliy"],
        "tags": ["Micro Frontends"]
      },
      {
        "slug": "2022-07-26-E",
        "type": "blog",
        "title": "Content Projection in Angular with Ng-Content",
        "url": "https://javascript.plainenglish.io/content-projection-in-angular-with-ng-content-b8119f3f7360",
        "desc": "How often has it happened to you that while passing in dynamic content from parent to child, you have to use unnecessary Input Property, and then there is the pain to send in a string in the Property binding to complete the requirement? Tough, right? This solution is quite straightforward but it is not the best practice to be followed and also has some shortcomings.\n(photo: by Pim Chu on Unsplash)",
        "dAdd": "2022-07-26",
        "dSrc": "2022-07-25",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Avinash Nandan",
        "aUrl": "https://medium.com/@avinash.dev21987",
        "spkrs": ["Avinash Nandan"],
        "tags": ["Content Projection", "<ng-content>"]
      },
      {
        "slug": "2022-07-26-G",
        "type": "blog",
        "title": "CRUD operation in Angular",
        "url": "https://medium.com/seriea-pub/crud-operation-in-angular-50e9e77a1545",
        "desc": "Angular is a web application framework of typescript which is used to make Single Page Interface. Angular is one of the most popular framework for the web developer.",
        "dAdd": "2022-07-26",
        "dSrc": "2022-07-26",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Sudip Bhattarai",
        "aUrl": "https://medium.com/@bhattarai.sudip.2020",
        "spkrs": ["Sudip Bhattarai"],
        "tags": ["CRUD"]
      },
      {
        "slug": "2022-07-26-H",
        "type": "blog",
        "title": "HTTP and Observables in Angular",
        "url": "https://hrishikeshbappu.medium.com/http-and-observables-in-angular-85eef5c1ef87",
        "desc": "To fetch the data in Angular, we can use observables with HTTP to fetch data.",
        "dAdd": "2022-07-26",
        "dSrc": "2022-07-25",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Hrishikesh Deshmukh",
        "aUrl": "https://hrishikeshbappu.medium.com",
        "spkrs": ["Hrishikesh Deshmukh"],
        "tags": ["HttpClient"]
      },
      {
        "slug": "2022-07-26-J",
        "type": "video",
        "dur": "15",
        "title": "Angular Map Tutorial: How to Make Your Own Map In Angular || how to get user location in Angular",
        "url": "https://www.youtube.com/watch?v=W6Er__jTbek",
        "desc": "Import mapbox into your Angular project",
        "dAdd": "2022-07-26",
        "dSrc": "2022-07-26",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Access Zombies Code",
        "aUrl": "https://www.youtube.com/channel/UCwdMuWWPmgb1wEgzqVGTqBw/videos",
        "spkrs": [],
        "tags": ["Maps"]
      },
      {
        "slug": "2022-07-26-K",
        "type": "blog",
        "title": "Structuring Libraries with Nx",
        "url": "https://medium.com/@smarth55/structuring-libraries-with-nx-9ffab71a94a0",
        "desc": "When using Nx, one of the basic principles for structuring your code is the use of libraries. Libraries are great for reusing code between your applications or even other libraries. One point of contention that I have seen, though, is the question of what defines a library. As in, how many components goes in it? Or what if it isn't used by multiple applications?",
        "dAdd": "2022-07-26",
        "dSrc": "2022-07-25",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Ryan Mackey-Paulsen",
        "aUrl": "https://medium.com/@smarth55",
        "spkrs": ["Ryan Mackey-Paulsen"],
        "tags": ["Nx", "Libraries"]
      },
      {
        "slug": "2022-07-26-L",
        "type": "video",
        "dur": "60",
        "title": "Day 19 Guards in Angular",
        "url": "https://www.youtube.com/watch?v=nRvDACwX7p4",
        "desc": "",
        "dAdd": "2022-07-26",
        "dSrc": "2022-07-26",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Livepure Techonlogy",
        "aUrl": "https://www.youtube.com/channel/UCtu5ZE6cdEBx-7eZGCE4P3Q/videos",
        "spkrs": [],
        "tags": []
      },
      {
        "slug": "2022-07-26-M",
        "type": "video",
        "dur": "6",
        "title": "#2.9 - Understanding Angular Modules, NgModules and AppModule - Angular Architecuture",
        "url": "https://www.youtube.com/watch?v=ahwAEcbVaWk",
        "desc": "In this video we will understand about Angular Modules, then we will walkthrough the app.module.ts file.",
        "dAdd": "2022-07-26",
        "dSrc": "2022-07-26",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "SIMPL Academy",
        "aUrl": "https://www.youtube.com/channel/UCGB1Qg0oq4Ar4h6rzW0vzdA/videos",
        "spkrs": [],
        "tags": ["Modules"]
      },
      {
        "slug": "2022-07-26-N",
        "type": "video",
        "dur": "239",
        "title": "Angular 14 Full Course with real time example 2022 ( Angular CRUD + authentication + Material UI)",
        "url": "https://www.youtube.com/watch?v=rZCQiMdQsxE",
        "desc": "This video explains the full features in Angular 14 with some practical examples , Realtime application and authentication",
        "dAdd": "2022-07-26",
        "dSrc": "2022-07-26",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Nihira Techiees",
        "aUrl": "https://www.youtube.com/c/NihiraTechiees/videos",
        "spkrs": [],
        "tags": []
      },
      {
        "slug": "2022-07-26-P",
        "type": "blog",
        "title": "Protect Your Angular App From Cross-Site Request Forgery",
        "url": "https://dev.to/oktadev/protect-your-angular-app-from-cross-site-request-forgery-2hho",
        "desc": "Previously, I wrote about web security at a high level and the framework-agnostic ways to increase safety and mitigate vulnerabilities.\nNow, I want to dive a little deeper into the vulnerabilities. In this short post, we'll dive into Cross-Site Request Forgery (CSRF) and look at the built-in help you get when using Angular.",
        "dAdd": "2022-07-26",
        "dSrc": "2022-07-26",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Alisa",
        "aUrl": "https://dev.to/alisaduncan",
        "spkrs": ["Alisa Duncan"],
        "tags": ["CSRF"]
      },
      {
        "slug": "2022-07-26-Q",
        "type": "video",
        "dur": "14",
        "title": "Part-3 | Angular(v14) JWT Access Token Authentication & Refresh Token",
        "url": "https://www.youtube.com/watch?v=Zfqewpi_Zg0",
        "desc": "Video summary:\n1. Install the '@auth0/angular-jwt'\n2. Decoding the jwt token\n3. Create token-model.ts",
        "dAdd": "2022-07-26",
        "dSrc": "2022-07-26",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Naveen Bommidi Tech Seeker",
        "aUrl": "https://www.youtube.com/c/NaveenTechSeeker/videos",
        "spkrs": ["Naveen Bommidi"],
        "tags": ["JWT", "Auth"]
      },
      {
        "slug": "2022-07-26-R",
        "type": "blog",
        "title": "Serving a different index.html in an Angular build for different languages",
        "url": "https://dev.to/ayyash/twisting-angular-localizationserving-a-different-indexhtml-in-an-angular-build-for-different-languages-2ekd",
        "desc": "Previously we ended with the notion that reloading the site to change the language is better than changing on client side. There are few problems with not refreshing...",
        "dAdd": "2022-07-26",
        "dSrc": "2022-07-26",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Ayyash",
        "aUrl": "https://dev.to/ayyash",
        "spkrs": [],
        "tags": ["Internationalization"]
      }
    ]
  },
  {
    "date": "2022-07-27",
    "dailyPosts": [
      {
        "slug": "2022-07-27-A",
        "type": "blog",
        "title": "Ng-News: Episode 22/29",
        "url": "https://dev.to/rainerhahnekamp/ng-news-episode-2229-271m",
        "desc": "",
        "dAdd": "2022-07-27",
        "dSrc": "2022-07-26",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Rainer Hahnekamp",
        "aUrl": "https://dev.to/rainerhahnekamp",
        "spkrs": ["Rainer Hahnekamp"],
        "tags": []
      },
      {
        "slug": "2022-07-27-B",
        "type": "video",
        "dur": "46",
        "title": "Angular V14 *ngFor Directive Complete Details with trackBy for increasing Performance - Angular14",
        "url": "https://www.youtube.com/watch?v=C2_hw8m5EiU",
        "desc": "n this video we will see jabout the ngFor Directive for looping over the arrays in the template - Angular 14",
        "dAdd": "2022-07-27",
        "dSrc": "2022-07-26",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Leela Web Dev",
        "aUrl": "https://www.youtube.com/c/LeelaWebDev/videos",
        "spkrs": ["Leela Narasimha"],
        "tags": ["Directives", "*ngFor", "trackBy", "Performance"]
      },
      {
        "slug": "2022-07-27-C",
        "type": "video",
        "dur": "25",
        "title": "I only ever use *these* RxJS operators to code reactively",
        "url": "https://www.youtube.com/watch?v=Byttv3YpjQk",
        "desc": "In this video, I cover the 10(ish) operators I most frequently use when coding reactively in Angular. We take a look at the theory for each one, along with a realistic example of where I have used it recently.",
        "dAdd": "2022-07-27",
        "dSrc": "2022-07-27",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Joshua Morony",
        "aUrl": "https://www.youtube.com/c/JoshuaMorony/videos",
        "spkrs": ["Joshua Morony"],
        "tags": ["RxJS", "map()", "filter()", "tap()", "switchMap()", "concatMap()", "combineLatest()", "startWith()", "distinctUntilChanged()", "debounceTime()", "catchError()"]
      },
      {
        "slug": "2022-07-27-D",
        "type": "blog",
        "title": "Create Chart with Data from API using HttpClient Module in Angular",
        "url": "https://dev.to/manoj_004d/create-chart-with-data-from-api-using-httpclient-module-in-angular-2gn5",
        "desc": "In real-time Angular applications, we often interact with some API or service to get data. These data can either be statistical or user-related. If you are building an application to show statistics about a country, you may use some third party APIs or services to get the data from",
        "dAdd": "2022-07-27",
        "dSrc": "2022-07-27",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Manoj Mohan",
        "aUrl": "https://dev.to/manoj_004d",
        "spkrs": ["Manoj Mohan"],
        "tags": ["HttpClient", "Charts"]
      },
      {
        "slug": "2022-07-27-E",
        "type": "video",
        "dur": "10",
        "title": "#4 Angular Modules",
        "url": "https://www.youtube.com/watch?v=CsdrUt6p6UA",
        "desc": "What is Angular Module? Module refers to a place where you can group the components, directives, pipes, and services that are related, in such a way that can be combined with other modules to create an application.",
        "dAdd": "2022-07-27",
        "dSrc": "2022-07-27",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Rohini Babu",
        "aUrl": "https://www.youtube.com/channel/UCjf7EQhfWGF74XQ6Q0inDtA/videos",
        "spkrs": ["Rohini Babu"],
        "tags": ["Modules"]
      },
      {
        "slug": "2022-07-27-F",
        "type": "video",
        "dur": "35",
        "title": "Scaling Effective Angular Teams | Jennifer Wadella | EnterpriseNG 2021",
        "url": "https://www.youtube.com/watch?v=YU31ASbWKLE",
        "desc": "In this talk, we will cover:\nHow to interview candidates.\nHow to spot skill gaps.\nStrategies for mentoring & coaching junior developers.\nProcess & best practices for creating an engaging growth environment.\nProperly leveraging Senior Engineer coding abilities while still leaving bandwidth for training.",
        "dAdd": "2022-07-27",
        "dSrc": "2022-07-27",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "ng-conf",
        "aUrl": "https://www.youtube.com/c/ngconfonline/videos",
        "spkrs": ["Jennifer Wadella"],
        "tags": []
      },
      {
        "slug": "2022-07-27-G",
        "type": "blog",
        "title": "Protect Your Angular App From Cross-Site Scripting",
        "url": "https://dev.to/oktadev/protect-your-angular-app-from-cross-site-scripting-26d4",
        "desc": "In the last post of this SPA security series, we covered Cross-Site Request Forgery (CSRF) and how Angular helps you with a mitigation technique. Next, we'll dive into Cross-Site Scripting (XSS) and look at the built-in security guards you get when using Angular.",
        "dAdd": "2022-07-27",
        "dSrc": "2022-07-27",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Alisa",
        "aUrl": "https://dev.to/alisaduncan",
        "spkrs": ["Alisa Duncan"],
        "tags": ["XSS"]
      },
      {
        "slug": "2022-07-27-H",
        "type": "blog",
        "title": "AG Grid Cell Rendering Pipeline with TypeScript",
        "url": "https://dev.to/blove/ag-grid-cell-rendering-pipeline-with-typescript-c5c",
        "desc": "In this article you'll learn:\nThe AG Grid cell rendering pipeline\nHow to leverage the new TypeScript generics provided by the AG Grid API (released in version 28)\nHow to create a type-safe value getter to retrieve the value for a cell\nHow to create a type-safe value formatted to format the value of a cell\nHow to create a type-safe and performant cell renderer",
        "dAdd": "2022-07-27",
        "dSrc": "2022-07-27",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Brian Love",
        "aUrl": "https://dev.to/blove",
        "spkrs": ["Brian Love"],
        "tags": ["AG Grid", "TypeScript"]
      },
      {
        "slug": "2022-07-27-J",
        "type": "video",
        "dur": "57",
        "title": "Angular - Getting started guide 2022",
        "url": "https://www.youtube.com/watch?v=UNO7NRxhd40",
        "desc": " Let's start a journey to learn a new amazing, demanding framework called Angular, whether this is your first introduction to any framework or you just want to revise topics of Angular. Just follow along with me and we will going to cover all the main topics like Directives, Pipes, Services, Form handling, Handling HTTP requests.",
        "dAdd": "2022-07-27",
        "dSrc": "2022-07-27",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Raj Lanjewar",
        "aUrl": "https://www.youtube.com/channel/UCkIGv4jRYsRzDcRWg030lOw/videos",
        "spkrs": ["Raj Lanjewar"],
        "tags": []
      },
      {
        "slug": "2022-07-27-K",
        "type": "blog",
        "title": "Angular 14 new Feature — Typed Forms",
        "url": "https://zmushegh.medium.com/angular-14-new-feature-typed-forms-71b0a44673db",
        "desc": "Many improvements and bug fixes in the most recent Angular 14 release were directly provided by members of the community, from the addition of router strong typing to more tree-shakable error messages. But let's focus on a feature that is a personal favorite of mine.",
        "dAdd": "2022-07-27",
        "dSrc": "2022-07-27",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Mushegh Zakaryan",
        "aUrl": "https://zmushegh.medium.com",
        "spkrs": ["Mushegh Zakaryan"],
        "tags": ["Forms", "Typed Forms"]
      },
      {
        "slug": "2022-07-27-L",
        "type": "blog",
        "title": "HostListener + Output =",
        "url": "https://dev.to/mmuscat/hostlistener-output--2dhe",
        "desc": "It was a little surprising to learn that Angular components and directives can listen to custom events published by the Output decorator. This gives us a convenient way to subscribe to an observable without cleaning up afterwards; the subscription is automatically disposed when the component is destroyed. We do however pollute the output namespace in the process.",
        "dAdd": "2022-07-27",
        "dSrc": "2022-07-27",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Michael Muscat",
        "aUrl": "https://dev.to/mmuscat",
        "spkrs": ["Michael Muscat"],
        "tags": ["@HostListener", "@Output"]
      }
    ]
  },
  {
    "date": "2022-07-28",
    "dailyPosts": [
      {
        "slug": "2022-07-28-A",
        "type": "blog",
        "title": "How to Unit Test an NgRx Reducer",
        "url": "https://marklowg.medium.com/how-to-unit-test-an-ngrx-reducer-f47cd9b55bc2",
        "desc": "Before we start unit testing reducers, we'll begin with a quick recap of NgRx reducers.\n(photo: by Steve Johnson on Unsplash)",
        "dAdd": "2022-07-28",
        "dSrc": "2022-07-28",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "George Marklow",
        "aUrl": "https://marklowg.medium.com",
        "spkrs": ["George Marklow"],
        "tags": ["NgRx"]
      },
      {
        "slug": "2022-07-28-B",
        "type": "blog",
        "title": "Building Conditional Validators in Reactive Forms",
        "url": "https://medium.com/herodevs/building-conditional-validators-in-reactive-forms-c2f4a9242c0a",
        "desc": "Reactive forms in Angular provide a powerful way to validate your user's inputs in a declarative style. But what happens when the validation rules depend on another form control's value? Here's an example problem that we will use to learn how to write conditional validators in reactive forms.\n(photo: by Javier Allegue Barros on Unsplash)",
        "dAdd": "2022-07-28",
        "dSrc": "2022-07-27",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Chris Perko",
        "aUrl": "https://medium.com/@perkoHD",
        "spkrs": ["Chris Perko"],
        "tags": ["Forms", "Reactive Forms", "Validation"]
      },
      {
        "slug": "2022-07-28-C",
        "type": "blog",
        "title": "Manage Angular page titles translation",
        "url": "https://itnext.io/manage-angular-page-titles-translation-d1384bbede86",
        "desc": "Translate pages' titles using the Streamlined page title feature!",
        "dAdd": "2022-07-28",
        "dSrc": "2022-07-27",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Adnane Lamghari",
        "aUrl": "https://adnane-lamghari.medium.com",
        "spkrs": ["Adnane Lamghari"],
        "tags": ["Title", "Internationalization"]
      },
      {
        "slug": "2022-07-28-D",
        "type": "blog",
        "title": "Top 9 Mind-Blowing Features Of New Angular 14 | Hyperlink InfoSystem",
        "url": "https://hennyjones.medium.com/top-9-mind-blowing-features-of-new-angular-14-hyperlink-infosystem-9d13a1f1745c",
        "desc": "This is supposed to be breaking news for Angular developers. Angular 14 with the latest version which is having Type-based and open-source web framework is out with the new update. Well, this just happened on 2nd June 2022. Considering every version of Angular, Angular 14 is one of the best upgrades that has been launched to date.",
        "dAdd": "2022-07-28",
        "dSrc": "2022-07-27",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Henny Jones",
        "aUrl": "https://hennyjones.medium.com",
        "spkrs": ["Henny Jones"],
        "tags": []
      },
      {
        "slug": "2022-07-28-E",
        "type": "blog",
        "title": "Angular NgRx Setup with Simple Example using Node JS API (Learn it in 21 Steps)",
        "url": "https://srisad95.medium.com/angular-ngrx-setup-with-simple-example-using-node-js-api-learn-it-in-14-steps-5acde7183ca2",
        "desc": "",
        "dAdd": "2022-07-28",
        "dSrc": "2022-07-27",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Srikanth Y",
        "aUrl": "https://srisad95.medium.com",
        "spkrs": [],
        "tags": ["NgRx"]
      },
      {
        "slug": "2022-07-28-F",
        "type": "blog",
        "title": "Angular Application Deployment to Azure Web App using GitHub",
        "url": "https://blog.devgenius.io/angular-application-deployment-to-azure-web-app-using-github-49a4e3a7ba87",
        "desc": "In this article I will demonstrate the process to deploy an Angular application to Azure Web App using GitHub",
        "dAdd": "2022-07-28",
        "dSrc": "2022-07-28",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Babula Parida",
        "aUrl": "https://medium.com/@babulaparida",
        "spkrs": ["Babula Parida"],
        "tags": ["Deployment", "Azure"]
      },
      {
        "slug": "2022-07-28-G",
        "type": "blog",
        "title": "Notes on RxJS - Introduction",
        "url": "https://98sunny.hashnode.dev/notes-on-rxjs-introduction-cl64kd3l602tm2snvesm84w3b",
        "desc": "This is my understanding on What RxJS is, and all important terms related to it.",
        "dAdd": "2022-07-28",
        "dSrc": "2022-07-27",
        "srcSite": "Hashnode",
        "srcUrl": "https://hashnode.com",
        "aName": "Sunny Singh",
        "aUrl": "https://hashnode.com/@98sunny",
        "spkrs": ["Sunny Singh"],
        "tags": ["RxJS"]
      },
      {
        "slug": "2022-07-28-H",
        "type": "video",
        "dur": "47",
        "title": "Angular V14 Parent Child Component Communication using Input() and Output() Decorator - Angular",
        "url": "https://www.youtube.com/watch?v=5V77yVzzv7A",
        "desc": "In this video we will see about the parent and child communication using Input() and Output() decorator - MongoDB",
        "dAdd": "2022-07-28",
        "dSrc": "2022-07-27",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Leela Web Dev",
        "aUrl": "https://www.youtube.com/c/LeelaWebDev/videos",
        "spkrs": ["Leela Narasimha"],
        "tags": ["@Input", "@Output", "Data Transfer"]
      },
      {
        "slug": "2022-07-28-J",
        "type": "video",
        "dur": "38",
        "title": "Cypress Component Testing in Angular",
        "url": "https://www.youtube.com/watch?v=nPqPt-aFDso",
        "desc": "A first look into Angular Component Testing with Cypress",
        "dAdd": "2022-07-28",
        "dSrc": "2022-07-28",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Angular Kenya",
        "aUrl": "https://www.youtube.com/c/AngularKenya/videos",
        "spkrs": ["Jordan Powell"],
        "tags": ["Testing", "Cypress"]
      },
      {
        "slug": "2022-07-28-K",
        "type": "blog",
        "title": "Angular two way binding between parent and child components",
        "url": "https://dev.to/tonyhicks20/angular-two-way-binding-between-parent-and-child-components-16kl",
        "desc": "In Angular, it's well known how to pass data from the parent component to the child. What I would like to demonstrate is how in Angular with two way binding we can ensure that changes in the child are also propagated to the parent when needed.",
        "dAdd": "2022-07-28",
        "dSrc": "2022-07-28",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Tony Hicks",
        "aUrl": "https://dev.to/tonyhicks20",
        "spkrs": ["Tony Hicks"],
        "tags": ["Two-Way Data Binding"]
      },
      {
        "slug": "2022-07-28-L",
        "type": "video",
        "dur": "13",
        "title": "Angular 13 Tutorial - 9 - Passing data between components using Services",
        "url": "https://www.youtube.com/watch?v=SEimlo7C-nc",
        "desc": "We are talking aboout passing data from one component to another using services and also discuss the concept of dependency injection",
        "dAdd": "2022-07-28",
        "dSrc": "2022-07-28",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Kode With Kamran",
        "aUrl": "https://www.youtube.com/channel/UClAF60JODGbZKoyREtl6S5A/videos",
        "spkrs": [],
        "tags": ["Services", "Dependency Injection"]
      },
      {
        "slug": "2022-07-28-M",
        "type": "blog",
        "title": "Angular Basics: Router Link Overview",
        "url": "https://www.telerik.com/blogs/angular-basics-router-link-overview",
        "desc": "Learn how to use the Angular Router to add routes and links that render the content we want when we navigate to the routes.",
        "dAdd": "2022-07-28",
        "dSrc": "2022-07-28",
        "srcSite": "Progress Telerik Blog",
        "srcUrl": "https://www.telerik.com/blogs/web-angular",
        "aName": "John Au-Yeung",
        "aUrl": "https://www.telerik.com/blogs/author/john-au-yeung",
        "spkrs": ["John Au-Yeung"],
        "tags": ["routerLink"]
      },
      {
        "slug": "2022-07-28-N",
        "type": "video",
        "dur": "7",
        "title": "Support for Cypress 10",
        "url": "https://www.youtube.com/watch?v=QDWN4C7T-Ck",
        "desc": "Nx 14.5 includes some new generators for migrating to Cypress version 10, plus generators for adding Cypress component tests to your project to support unit and integration tests!",
        "dAdd": "2022-07-28",
        "dSrc": "2022-07-28",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Nrwl - Narwhal Technologies Inc.",
        "aUrl": "https://www.youtube.com/c/Nrwl_io/videos",
        "spkrs": [],
        "tags": ["Nx", "Cypress"]
      },
      {
        "slug": "2022-07-28-P",
        "type": "blog",
        "title": "Reactive Forms In Angular",
        "url": "https://dev.to/angular/reactive-forms-in-angular-350n",
        "desc": "Hi readers, glad to have you as a part of my learning journey! Last week was a bit rough, back again this week with the fifth blog.\nFor the new readers, I document my learning journey in the series 'Getting Started With Angular', hoping it can help people learn.\nThis week we will be learning about Reactive Forms.",
        "dAdd": "2022-07-28",
        "dSrc": "2022-07-28",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Haimantika Mitra",
        "aUrl": "https://dev.to/haimantika",
        "spkrs": ["Haimantika Mitra"],
        "tags": ["Forms", "Reactive Forms"]
      }
    ]
  },
  {
    "date": "2022-07-29",
    "dailyPosts": [
      {
        "slug": "2022-07-29-A",
        "type": "blog",
        "title": "A New Way to Set Inputs on Angular ComponentRefs",
        "url": "https://netbasal.com/a-new-way-to-set-inputs-on-angular-componentrefs-6214f95db63d",
        "desc": "When creating dynamic components in our applications or writing tests, we use the component reference instance property to change input values. For example...",
        "dAdd": "2022-07-29",
        "dSrc": "2022-07-28",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Netanel Basal",
        "aUrl": "https://netbasal.medium.com",
        "spkrs": ["Netanel Basal"],
        "tags": ["viewContainerRef"]
      },
      {
        "slug": "2022-07-29-B",
        "type": "blog",
        "title": "A New Method for Retrieving Metadata about Angular Components",
        "url": "https://netbasal.com/a-new-method-for-retrieving-metadata-about-angular-components-b494351dd130",
        "desc": "A new function named reflectComponentType() has been added to Angular v14.1.0 that returns the following metadata from a component...",
        "dAdd": "2022-07-29",
        "dSrc": "2022-07-28",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Netanel Basal",
        "aUrl": "https://netbasal.medium.com",
        "spkrs": ["Netanel Basal"],
        "tags": []
      },
      {
        "slug": "2022-07-29-C",
        "type": "blog",
        "title": "Determine Why a Navigation Was Canceled in Angular",
        "url": "https://netbasal.com/determine-why-a-navigation-was-canceled-in-angular-252a65ebff3c",
        "desc": "Angular v14.1.0 added a new property named code to the NavigationCancel event. It contains a code that indicates why the navigation was canceled. The code is an enum with the following options...",
        "dAdd": "2022-07-29",
        "dSrc": "2022-07-29",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Netanel Basal",
        "aUrl": "https://netbasal.medium.com",
        "spkrs": ["Netanel Basal"],
        "tags": ["NavigationCancel", "NavigationCancellationCode"]
      },
      {
        "slug": "2022-07-29-D",
        "type": "blog",
        "title": "Data Sharing using Services in Angular",
        "url": "https://medium.com/@shaikhkamran959/data-sharing-using-services-in-angular-50c6f25ca633",
        "desc": "Michael started his Angular project with two components. He used input decorator to pass data from parent to child component and output decorator to pass data from child to parent component. As the project grew, he kept adding more components to the project and before he knew it, the project was as big as the 'Fast and Furious' franchise.",
        "dAdd": "2022-07-29",
        "dSrc": "2022-07-28",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Kamran Shaikh",
        "aUrl": "https://medium.com/@shaikhkamran959",
        "spkrs": ["Kamran Shaikh"],
        "tags": ["RxJS", "BehaviorSubject"]
      },
      {
        "slug": "2022-07-29-E",
        "type": "blog",
        "title": "RxJS — Why should you learn it?",
        "url": "https://kaleb-dalla.medium.com/rxjs-why-should-you-learn-it-721fcda7f431",
        "desc": "Hey everyone, if you work with the Angular framework it is highly possible that you'll came across with the RxJS library. So, what is RxJS and why it is important to learn it?",
        "dAdd": "2022-07-29",
        "dSrc": "2022-07-28",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Kaleb Dalla",
        "aUrl": "https://kaleb-dalla.medium.com",
        "spkrs": ["Kaleb Dalla"],
        "tags": ["RxJS"]
      },
      {
        "slug": "2022-07-29-F",
        "type": "blog",
        "title": "ViewEncapsulation",
        "url": "https://medium.com/js-development-tidbits/view-encapsulation-7836e4425c71",
        "desc": "In a bid to try and demystify the Shadow DOM in the Angular context. Here we go.\n(photo: by Edward Jenner)",
        "dAdd": "2022-07-29",
        "dSrc": "2022-07-28",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "B. Chepkorir",
        "aUrl": "https://medium.com/@chepkorir",
        "spkrs": [],
        "tags": ["ViewEncapsulation", "Styles"]
      },
      {
        "slug": "2022-07-29-G",
        "type": "video",
        "dur": "17",
        "title": "Build A Angular Movie Info App Using RxJS Part2 implement TypeScript",
        "url": "https://www.youtube.com/watch?v=V3EOfERRHTg",
        "desc": "This is part 2. In this video we will build a movie listing application using JavaScript ES6,  HttpClientModule for making HTTP requests to the OMDb API, Add navigation with routing and create a detail page to your single page application. Implement Interfaces to the application using TypeScript plus use the pipe operator with map from RxJS library",
        "dAdd": "2022-07-29",
        "dSrc": "2022-07-28",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "MartinDevs",
        "aUrl": "https://www.youtube.com/user/Electronicsmf/videos",
        "spkrs": ["MartinDevs"],
        "tags": ["HttpClient", "RxJS", "map()"]
      },
      {
        "slug": "2022-07-29-H",
        "type": "video",
        "dur": "69",
        "title": "Angular Real World Project Development",
        "url": "https://www.youtube.com/watch?v=Syis2k_9ilc",
        "desc": "Let's create cool projects together on the stream and go from setting up a new project to finally hosting it!",
        "dAdd": "2022-07-29",
        "dSrc": "2022-07-28",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Simon Grimm",
        "aUrl": "https://www.youtube.com/c/SimonGrimmDev/videos",
        "spkrs": ["Simon Grimm"],
        "tags": []
      },
      {
        "slug": "2022-07-29-J",
        "type": "podcast",
        "dur": "49",
        "title": "Async Angular Testing and Introducing AG Charts - AiA 352",
        "url": "https://topenddevs.com/podcasts/adventures-in-angular/episodes/async-angular-testing-and-introducing-ag-charts-aia-352",
        "desc": "If you are testing an Angular application, then at some point, you will be required to test asynchronous behavior.  Today on the show, guests Stephen Cooper and Mona Peirov share about how you can validate your internal models with async Angular testing and integrate AG Charts into your workflows.",
        "dAdd": "2022-07-29",
        "dSrc": "2022-07-28",
        "srcSite": "DevChat.tv",
        "srcUrl": "https://devchat.tv",
        "aName": "Adventures In Angular",
        "aUrl": "https://topenddevs.com/podcasts/adventures-in-angular/",
        "spkrs": ["Mana Peirov", "Stephen Cooper"],
        "tags": ["Charts", "Testing"]
      },
      {
        "slug": "2022-07-29-K",
        "type": "video",
        "dur": "48",
        "title": "View Encapsulation, Template Variable and its Scope, @ViewChild and Content Projection - Angular V14",
        "url": "https://www.youtube.com/watch?v=C35aDpW8TwU",
        "desc": "In this video we will see about the view encapsulation, Template Variable and its Scope @ViewChild and Content Projection - Angular V14",
        "dAdd": "2022-07-29",
        "dSrc": "2022-07-28",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Leela Web Dev",
        "aUrl": "https://www.youtube.com/c/LeelaWebDev/videos",
        "spkrs": ["Leela Narasimha"],
        "tags": ["ViewEncapsulation", "Styles", "@ViewChild", "Content Projection"]
      },
      {
        "slug": "2022-07-29-L",
        "type": "blog",
        "title": "Angular URL State management with Query Params or Route Params",
        "url": "https://dev.to/pavankjadda/angular-url-state-management-with-query-params-or-route-params-3mcb",
        "desc": "This blog post explains the process to maintain state using browser URL. In Angular there are couple of different ways to manage the state",
        "dAdd": "2022-07-29",
        "dSrc": "2022-07-28",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Pavan K Jadda",
        "aUrl": "https://dev.to/pavankjadda",
        "spkrs": ["Pavan K Jadda"],
        "tags": ["State Management", "Query Params", "Route Params"]
      },
      {
        "slug": "2022-07-29-M",
        "type": "video",
        "dur": "49",
        "title": "Day 21 Dependency Injection",
        "url": "https://www.youtube.com/watch?v=VGuxPhRayT8",
        "desc": "Angular Complete Course: In this playlist, I will explain to you everything you need to get started with the Angular framework. Angular is a very popular framework used to create single-page applications (SPA). This video will cover an Angular Project in English",
        "dAdd": "2022-07-29",
        "dSrc": "2022-07-29",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Livepure Techonlogy",
        "aUrl": "https://www.youtube.com/channel/UCtu5ZE6cdEBx-7eZGCE4P3Q/videos",
        "spkrs": [],
        "tags": ["Dependency Injection"]
      },
      {
        "slug": "2022-07-29-N",
        "type": "blog",
        "title": "How to Create Angular Chart from CSV Data",
        "url": "https://dev.to/manoj_004d/how-to-create-angular-chart-from-csv-data-52ed",
        "desc": "In the last article, I have created chart with data from API using HTTPClient module in Angular. Similarly in this article, I will be using same HTTPClient modules and CanvasJS Angular chart component to plot chart with data from CSV files.",
        "dAdd": "2022-07-29",
        "dSrc": "2022-07-29",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Manoj Mohan",
        "aUrl": "https://dev.to/manoj_004d",
        "spkrs": ["Manoj Mohan"],
        "tags": ["Charts", "HttpClient"]
      },
      {
        "slug": "2022-07-29-P",
        "type": "video",
        "dur": "15",
        "title": "Angular 14 Project to Read & Display JSON Data inside Bootstrap 4 Table in Browser Using TypeScript",
        "url": "https://www.youtube.com/watch?v=7UCZFl-sJlU",
        "desc": "",
        "dAdd": "2022-07-29",
        "dSrc": "2022-07-29",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Coding Shiksha",
        "aUrl": "https://www.youtube.com/c/CodingShiksha/videos",
        "spkrs": ["Gautam Sharma"],
        "tags": ["JSON", "Bootstrap"]
      },
      {
        "slug": "2022-07-29-Q",
        "type": "blog",
        "title": "Angular Resolver: A core tutorial for beginners",
        "url": "https://dev.to/arohiadhyaru/angular-resolver-a-core-tutorial-for-beginners-3a02",
        "desc": "The fundamental purpose of an Angular resolver is to prefetch data even before the user begins to browse it. One option for handling data retrieval and presentation from an API is to route a user to a component and then call a function in a class in a certain component's ngOnInit hook to obtain the required data. Perhaps the component can display a loading indicator when retrieving the data.",
        "dAdd": "2022-07-29",
        "dSrc": "2022-07-29",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "ArohiAdhyaru",
        "aUrl": "https://dev.to/arohiadhyaru",
        "spkrs": [],
        "tags": []
      },
      {
        "slug": "2022-07-29-R",
        "type": "blog",
        "title": "A simpler and smaller Angular starter with ngLite",
        "url": "https://dev.to/angular/a-simpler-and-smaller-angular-starter-with-nglite-1ooh",
        "desc": "A lot of complaints I heard when starting with Angular are about the sheer amount of files you get even on simple apps. When looking at the default starter template you get from Angular CLI's ng new command, it's true that it can be a bit overwhelming if you're not used to it.",
        "dAdd": "2022-07-29",
        "dSrc": "2022-07-29",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Yohan Lasorsa",
        "aUrl": "https://dev.to/sinedied",
        "spkrs": ["Yohan Lasorsa"],
        "tags": []
      },
      {
        "slug": "2022-07-29-S",
        "type": "blog",
        "title": "Angular Typed Forms Supercharged",
        "url": "https://dev.to/jrubzjeknf/angular-typed-forms-supercharged-1op",
        "desc": "In my previous post about typed forms I mentioned two utility types which make it easier to work with typed forms.\nHere I'll make a three recommendations that will make it a LOT easier to work with typed forms.",
        "dAdd": "2022-07-29",
        "dSrc": "2022-07-29",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Jrubzjeknf",
        "aUrl": "https://dev.to/jrubzjeknf",
        "spkrs": [],
        "tags": ["Forms", "Typed Forms"]
      },
      {
        "slug": "2022-07-29-T",
        "type": "video",
        "dur": "33",
        "title": "Concurrent Mode in Angular - Non-blocking UIs at scale | Michael Hladky | EnterpriseNG 2021",
        "url": "https://www.youtube.com/watch?v=pzgnBboBW0s",
        "desc": "In this session, I will teach you the theory behind Concurrent Mode in Angular, how it works, how to enable it in your builds, and how you can use it to speed up the performance of your application.",
        "dAdd": "2022-07-29",
        "dSrc": "2022-07-29",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "ng-conf",
        "aUrl": "https://www.youtube.com/c/ngconfonline/videos",
        "spkrs": ["Michael Hladky"],
        "tags": ["Performance"]
      },
      {
        "slug": "2022-07-29-U",
        "type": "blog",
        "title": "How to Import and Export Excel XLSX Using Angular",
        "url": "https://dev.to/grapecity/how-to-import-and-export-excel-xlsx-using-angular-531j",
        "desc": "The Excel spreadsheet has been around since the 1980s. With over 30 million users, most are familiar with the Excel spreadsheet experience. Many businesses begin using Excel spreadsheets for budgeting and planning when their businesses are moderately simple.",
        "dAdd": "2022-07-29",
        "dSrc": "2022-07-29",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Chelsea Devereaux",
        "aUrl": "https://dev.to/chelseadevereaux",
        "spkrs": ["Chelsea Devereaux"],
        "tags": []
      },
      {
        "slug": "2022-07-29-V",
        "type": "video",
        "dur": "21",
        "title": "Micro Frontends with Angular and Nx",
        "url": "https://www.youtube.com/watch?v=G3AIr7fTAes",
        "desc": "",
        "dAdd": "2022-07-29",
        "dSrc": "2022-07-29",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "TechBuild with San",
        "aUrl": "https://www.youtube.com/channel/UCZvWqdjs8pXHHSPn3AOu9EQ/videos",
        "spkrs": [],
        "tags": ["Nx", "Micro Frontends"]
      }
    ]
  },
  {
    "date": "2022-07-30",
    "dailyPosts": [
      {
        "slug": "2022-07-30-A",
        "type": "blog",
        "title": "How to Handle Errors with the RxJS 'Retry' Operator",
        "url": "https://javascript.plainenglish.io/retry-rxjs-operator-4aab1fbb4347",
        "desc": "There are several ways to handle errors with observables. One can use operators such as catchError, retry, or retryWhen. Today I look at just retry and a simple way in which it can be used.",
        "dAdd": "2022-07-30",
        "dSrc": "2022-07-27",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Paul Chesa",
        "aUrl": "https://paul-chesa.medium.com",
        "spkrs": ["Paul Chesa"],
        "tags": ["RxJS", "catchError()", "retry()", "retryWhen()"]
      },
      {
        "slug": "2022-07-30-B",
        "type": "video",
        "dur": "23",
        "title": "Part-4 | Angular(v14) JWT Access Token Authentication & Refresh Token",
        "url": "https://www.youtube.com/watch?v=ORMlpzOFWuQ",
        "desc": "Video Summary: Create Feature Module like 'Movies', Create Component like 'Fave-Movies', Consuming the secured endpoint, Configure JwtModule",
        "dAdd": "2022-07-30",
        "dSrc": "2022-07-30",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Naveen Bommidi Tech Seeker",
        "aUrl": "https://www.youtube.com/c/NaveenTechSeeker/videos",
        "spkrs": ["Naveen Bommidi"],
        "tags": ["JWT", "Auth"]
      },
      {
        "slug": "2022-07-30-C",
        "type": "video",
        "dur": "58",
        "title": "Angular V14 Complete Life Cycle Hooks Methods for the Component or Directive - Angular",
        "url": "https://www.youtube.com/watch?v=eo1pisZHv1A",
        "desc": "In this video we will see about the Angular V14 Life Cycle Hook methods for a component and the directive - Angular",
        "dAdd": "2022-07-30",
        "dSrc": "2022-07-30",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Leela Web Dev",
        "aUrl": "https://www.youtube.com/c/LeelaWebDev/videos",
        "spkrs": ["Leela Narasimha"],
        "tags": ["Lifecycle Hooks", "ngOnChanges()", "ngOnInit()", "ngDoCheck()", "ngAfterContentInit()", "ngAfterContentChecked()", "ngAfterViewInit()", "ngAfterViewChecked()"]
      },
      {
        "slug": "2022-07-30-D",
        "type": "video",
        "dur": "14",
        "title": "Angular For Beginners - 12. Components In-Depth & ngOnInit",
        "url": "https://www.youtube.com/watch?v=qv07isP7aZQ",
        "desc": "",
        "dAdd": "2022-07-30",
        "dSrc": "2022-07-30",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Teddy Smith",
        "aUrl": "https://www.youtube.com/c/TeddySmithNC/videos",
        "spkrs": ["Teddy Smith"],
        "tags": ["Components", "ngOnInit"]
      }
    ]
  },
  {
    "date": "2022-07-31",
    "dailyPosts": [
      {
        "slug": "2022-07-31-A",
        "type": "blog",
        "title": "HTTP Error Handling using Interceptor in Angular",
        "url": "https://medium.com/@ifrat.ikhtear_96346/http-error-handling-using-interceptor-in-angular-b2e9154e1d26",
        "desc": "In this article I will be explaining how to use Interceptor to handle HTTP error in Angular.",
        "dAdd": "2022-07-31",
        "dSrc": "2022-07-29",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Ifrat Ikhtear",
        "aUrl": "https://medium.com/@ifrat.ikhtear_96346",
        "spkrs": ["Ifrat Ikhtear"],
        "tags": ["HttpInterceptors", "Errors"]
      },
      {
        "slug": "2022-07-31-B",
        "type": "blog",
        "title": "Implementing state management in Angular using NgRx and what problem does it solve?",
        "url": "https://medium.com/@sharma4aman16/implementing-state-management-in-angular-using-ngrx-and-what-problem-does-it-solve-4af4715a8da6",
        "desc": "Before diving right into the implementation of State management, let us first break down the discussion into a set of smaller problems",
        "dAdd": "2022-07-31",
        "dSrc": "2022-07-30",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Sharmaaman",
        "aUrl": "https://medium.com/@sharma4aman16",
        "spkrs": [],
        "tags": ["NgRx"]
      },
      {
        "slug": "2022-07-31-C",
        "type": "blog",
        "title": "Handling Encodings in Angular",
        "url": "https://makandre.medium.com/handling-encodings-in-angular-16a52e921dfe",
        "desc": "Handling encodings has always been tricky. Fortunately, UTF-8 has become the dominant encoding for all things Internet, so if you stick with it things will likely just work and you can focus on other more important things.\n(photo: by Markus Spiske on Unsplash)",
        "dAdd": "2022-07-31",
        "dSrc": "2022-07-30",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Andrew",
        "aUrl": "https://makandre.medium.com",
        "spkrs": [],
        "tags": []
      },
      {
        "slug": "2022-07-31-D",
        "type": "blog",
        "title": "What's the difference between markForCheck and detectChanges in Angular?",
        "url": "https://medium.com/@andre.schouten_ff/whats-the-difference-between-markforcheck-and-detectchanges-in-angular-fff4e5f54d34",
        "desc": "Every now and then, when developing complex web applications with Angular, we think about increasing the performance of the web app. Either we are forced to do so because we are not satisfied with the performance and it negatively affects the user experience, or we act proactively and use the OnPush strategy from the beginning to avoid refactoring later.",
        "dAdd": "2022-07-31",
        "dSrc": "2022-07-30",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Andre Schouten",
        "aUrl": "https://medium.com/@andre.schouten_ff",
        "spkrs": ["Andre Schouten"],
        "tags": ["Change Detection", "markForCheck()", "detectChanges()", "Performance"]
      },
      {
        "slug": "2022-07-31-E",
        "type": "video",
        "dur": "22",
        "title": "RxJS creation operators with Angular 14 project",
        "url": "https://www.youtube.com/watch?v=J7LxgIs_LT0",
        "desc": "We explore the different creation operators which are available with the latest version of RxJS using an Angular 14 applications. The below operators are explored: ajax, bindCallback, bindNodeCallback, defer, from, fromEvent, fromEventPattern, generate, interval, timer, of, range, throwError, iif",
        "dAdd": "2022-07-31",
        "dSrc": "2022-07-30",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "JS Frameworks",
        "aUrl": "https://www.youtube.com/c/JSFrameworks/videos",
        "spkrs": [],
        "tags": ["RxJS", "ajax()", "bindCallback()", "bindNodeCallback()", "defer()", "empty()", "from()", "fromEvent()", "fromEventPattern()", "generate()", "interval()", "of()", "range()", "throwError()", "timer()", "iif()"]
      },
      {
        "slug": "2022-07-31-F",
        "type": "video",
        "dur": "49",
        "title": "Angular V14 Directives. Create Custom Attribute & Structural Directives with passing data - Angular",
        "url": "https://www.youtube.com/watch?v=AoN56g6UAsE",
        "desc": "In this video we will see about the introduction of the directives and create a custom Structural and Attribute Directives along with passing data - Angular V1.",
        "dAdd": "2022-07-31",
        "dSrc": "2022-07-30",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Leela Web Dev",
        "aUrl": "https://www.youtube.com/c/LeelaWebDev/videos",
        "spkrs": ["Leela Narasimha"],
        "tags": ["Directives", "Custom"]
      },
      {
        "slug": "2022-07-31-G",
        "type": "video",
        "dur": "4",
        "title": "Angular Tutorial 3- Event Binding",
        "url": "https://www.youtube.com/watch?v=cpgJr1mCrBU",
        "desc": "In this tutorial, we are going to talk about event binding.",
        "dAdd": "2022-07-31",
        "dSrc": "2022-07-31",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Data Explained",
        "aUrl": "https://www.youtube.com/channel/UCw-X0FeIKbecpIRvaTJPGwA/videos",
        "spkrs": [],
        "tags": ["Event Binding"]
      },
      {
        "slug": "2022-07-31-H",
        "type": "video",
        "dur": "18",
        "title": "Ionic 6 Angular - Infinite Scroll",
        "url": "https://www.youtube.com/watch?v=UHThNjrxJhM",
        "desc": "Hello Friends, Welcome Back to @CodingTechnyks. In this video, we are going to learn about Infinite Scrolling using Ionic and Angular.",
        "dAdd": "2022-07-31",
        "dSrc": "2022-07-31",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Coding Technyks",
        "aUrl": "https://www.youtube.com/c/CodingTechnyks/videos",
        "spkrs": [],
        "tags": ["Scrolling", "Ionic"]
      },
      {
        "slug": "2022-07-31-J",
        "type": "video",
        "dur": "30",
        "title": "Angular Sudoku 1 -- Who is Nart?",
        "url": "https://www.youtube.com/watch?v=CCGCIikQgbU",
        "desc": "In this video, we create a workspace using Nx. Then we make a Cell component using Storybook to drive the development. Someone called 'Nart' joins the stream and gives some great advice. We spend a bit of time exploring his advice, and the video ends after 'Nart' shares a Stackblitz link with us.",
        "dAdd": "2022-07-31",
        "dSrc": "2022-07-31",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Jason Warner",
        "aUrl": "https://www.youtube.com/channel/UCzF8hdwni3db3UZ7P3uKBkQ/videos",
        "spkrs": ["Jason Warner"],
        "tags": ["Nx"]
      },
      {
        "slug": "2022-07-31-K",
        "type": "blog",
        "title": "Build Custom Structural Directives in Angular like a hero",
        "url": "https://dev.to/deekshithrajbasa/build-custom-structural-directives-in-angular-like-a-hero-2nk6",
        "desc": "Why custom structural directive?\n\nWe have build in structural directive that satisfies our solution, what if we might come across a case that the ones provided with the framework don't solve. so here comes the custom structural directive.\n\nSo, in this article we will try cloning the *ngIf structural directive",
        "dAdd": "2022-07-31",
        "dSrc": "2022-07-31",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Deekshith Raj Basa",
        "aUrl": "https://dev.to/deekshithrajbasa",
        "spkrs": ["Deekshith Raj Basa"],
        "tags": ["Directives", "Custom"]
      }
    ]
  },
  {
    "date": "2022-08-01",
    "dailyPosts": [
      {
        "slug": "2022-08-01-A",
        "type": "blog",
        "title": "Angular Material Table With Search Using Node JS API (Learn it in 28 Steps includes Filter)",
        "url": "https://srisad95.medium.com/angular-material-table-with-search-using-node-js-api-learn-it-in-20-steps-c5f54856e4f8",
        "desc": "Please find the below steps to show the Angular mAaterial table with filters and node js API and apply search and filter in Angular application.",
        "dAdd": "2022-08-01",
        "dSrc": "2022-07-31",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Srikanth Y",
        "aUrl": "https://srisad95.medium.com",
        "spkrs": [],
        "tags": ["Angular Material", "Data Table"]
      },
      {
        "slug": "2022-08-01-B",
        "type": "blog",
        "title": "Angular Material Forms - Adding Form Array in Forms(Learn it in 19 Steps)",
        "url": "https://srisad95.medium.com/angular-material-forms-adding-form-array-in-forms-learn-it-in-19-steps-ee787d4cf0c3",
        "desc": "",
        "dAdd": "2022-08-01",
        "dSrc": "2022-07-31",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Srikanth Y",
        "aUrl": "https://srisad95.medium.com",
        "spkrs": [],
        "tags": ["Angular Material", "Forms", "FormArray"]
      },
      {
        "slug": "2022-08-01-C",
        "type": "video",
        "dur": "63",
        "title": "State of Angular",
        "url": "https://www.youtube.com/watch?v=IB9c3K745P8",
        "desc": "Learn about the latest from Angular, including updates on standalone components, an API simplification strategy for the web. Discover everything from community updates and the request for comments process to new features landing in v14 and beyond!",
        "dAdd": "2022-08-01",
        "dSrc": "2022-07-31",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "GDG North Lebanon",
        "aUrl": "https://www.youtube.com/channel/UCb83rNTM5x0di33UyuwO4pw/videos",
        "spkrs": [],
        "tags": []
      },
      {
        "slug": "2022-08-01-D",
        "type": "blog",
        "title": "What are Services and Tree Shakable providers in Angular Services?",
        "url": "https://medium.com/@gaikwadashish0120/what-are-services-and-tree-shakable-providers-in-angular-services-d9cc97d9c407",
        "desc": "In this article, we will discuss in detail about services how we go and create services and about Tree Shakable Providers in Services.Please give a complete read to this article.",
        "dAdd": "2022-08-01",
        "dSrc": "2022-08-01",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Ashish Rajendra Gaikwad",
        "aUrl": "https://medium.com/@gaikwadashish0120",
        "spkrs": ["Ashish Rajendra Gaikwad"],
        "tags": ["Services"]
      },
      {
        "slug": "2022-08-01-E",
        "type": "blog",
        "title": "Angular Addicts Issue #4: Micro Frontends, Moduliths, Tutorials & more",
        "url": "https://angularaddicts.com/angular-addicts-issue-4-micro-frontends-moduliths-tutorials-more-b36923db8cc2",
        "desc": "Hey fellow Angular Addict, this is the 4th issue of the Angular Addicts Newsletter, a monthly collection of carefully selected Angular resources that got my attention.",
        "dAdd": "2022-08-01",
        "dSrc": "2022-08-01",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Gergely Szerovay",
        "aUrl": "https://medium.com/@GergelySzerovay",
        "spkrs": [],
        "tags": []
      },
      {
        "slug": "2022-08-01-F",
        "type": "video",
        "dur": "38",
        "title": "Angular State Management NgRx",
        "url": "https://www.youtube.com/watch?v=-iz6WdszkkM",
        "desc": "At a high level, NgRx stores a single state and uses actions to express state changes. It makes Angular development easier by simplifying the application's state in objects and enforcing unidirectional data flow. It is established with 5 main components - Store, Actions, Reducers, Selectors, and Effects.",
        "dAdd": "2022-08-01",
        "dSrc": "2022-08-01",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Knoldus Inc.",
        "aUrl": "https://www.youtube.com/c/Knoldus/videos",
        "spkrs": [],
        "tags": ["State Management", "NgRx"]
      },
      {
        "slug": "2022-08-01-G",
        "type": "video",
        "dur": "8",
        "title": "11. Angular component lifecycles",
        "url": "https://www.youtube.com/watch?v=XmRj1HqR1D0",
        "desc": "",
        "dAdd": "2022-08-01",
        "dSrc": "2022-08-01",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Ervis Trupja",
        "aUrl": "https://www.youtube.com/c/DotNetHow/videos",
        "spkrs": ["Ervis Trupja"],
        "tags": ["Lifecycle Hooks"]
      },
      {
        "slug": "2022-08-01-H",
        "type": "video",
        "dur": "59",
        "title": "Angular 14 News Application | Angular with Tailwind CSS | Angular Project for beginners",
        "url": "https://www.youtube.com/watch?v=cvdBjXsqLIQ",
        "desc": "In this video, we learn to create a News Application in Angular 14 by using news org API.",
        "dAdd": "2022-08-01",
        "dSrc": "2022-08-01",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Let's Program",
        "aUrl": "https://www.youtube.com/channel/UCW4PLi-ObJt3m6YTSEQY3gw/videos",
        "spkrs": [],
        "tags": []
      },
      {
        "slug": "2022-08-01-J",
        "type": "blog",
        "title": "Currency Angular pipe, UI language switch, and a verdict",
        "url": "https://dev.to/ayyash/currency-angular-pipe-ui-language-switch-and-a-verdict-4n25",
        "desc": "Angular i18n out of the box provides four pipes with localization: Date, Decimal, Percentage, and Currency. Of all four, I must confess, I thought the currency one was rubbish. I came to writing this article with the perception that it must be overridden. Let me explain.",
        "dAdd": "2022-08-01",
        "dSrc": "2022-08-01",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Ayyash",
        "aUrl": "https://dev.to/ayyash",
        "spkrs": [],
        "tags": ["Pipes"]
      },
      {
        "slug": "2022-08-01-K",
        "type": "blog",
        "title": "Data Sharing using Services in Angular",
        "url": "https://dev.to/shaikhkamran/data-sharing-using-services-in-angular-3l88",
        "desc": "Michael started his Angular project with two components. He used input decorator to pass data from parent to child component and output decorator to pass data from child to parent component. As the project grew, he kept adding more components to the project and before he knew it, the project was as big as the 'Fast and Furious' franchise.",
        "dAdd": "2022-08-01",
        "dSrc": "2022-07-28",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "kamran",
        "aUrl": "https://dev.to/shaikhkamran",
        "spkrs": [],
        "tags": ["Services", "Data Transfer"]
      },
      {
        "slug": "2022-08-01-L",
        "type": "podcast",
        "dur": "67",
        "title": "S2E27 | Jeff Cross on Managing Your Career in Uncertain Times",
        "url": "https://www.spreaker.com/user/14532324/s2e27-jeff-cross-on-managing-your-career?utm_campaign=episode-title&utm_medium=app&utm_source=widget",
        "desc": "From economic strains and inflation to natural disasters, wars, and political unrest, managing your career in today's uncertain environment requires new levels of patience, planning, & flexibility. Where do you even start given all that has and is going on around us? While total control and predictability are an illusion, we sat down with Nrwl co-founder Jeff Cross to talk about ways in which software engineers can plan, prepare, & position themselves for success today and in the future.",
        "dAdd": "2022-08-01",
        "dSrc": "2022-08-01",
        "srcSite": "Spreaker",
        "srcUrl": "https://spreaker.com",
        "aName": "Angular Experience",
        "aUrl": "https://angular-experience.web.app/episodes",
        "spkrs": ["Jeff Cross", "Brooke Avery", "Erik Slack"],
        "tags": []
      },
      {
        "slug": "2022-08-01-M",
        "type": "video",
        "dur": "14",
        "title": "Angular 13 Tutorial #14 Pass data using BehaviorSubject",
        "url": "https://www.youtube.com/watch?v=7YgtsePPYaw",
        "desc": "",
        "dAdd": "2022-08-01",
        "dSrc": "2022-08-01",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Tech Talks",
        "aUrl": "https://www.youtube.com/channel/UCqDzH0cMrTy9sRqeyH9auEQ/videos",
        "spkrs": [],
        "tags": ["Services", "RxJS", "Bevahior Subject", "Data Transfer"]
      },
      {
        "slug": "2022-08-01-N",
        "type": "video",
        "dur": "40",
        "title": "Make an Angular Chrome Extension (Part 2)",
        "url": "https://www.youtube.com/watch?v=A_DJ5-HMLGI",
        "desc": "Part 2 where we bring our Chrome Extension to life! I hope you enjoy the video.",
        "dAdd": "2022-08-01",
        "dSrc": "2022-08-01",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "IamDB",
        "aUrl": "https://www.youtube.com/channel/UCOAvYSXh-6sMR5FT4MtzMJg/videos",
        "spkrs": [],
        "tags": []
      }
    ]
  },
  {
    "date": "2022-08-02",
    "dailyPosts": [
      {
        "slug": "2022-08-02-A",
        "type": "blog",
        "title": "Javascript Observables Explained",
        "url": "https://medium.com/@chenpeleg/javascript-observables-explained-594f0ffec21e",
        "desc": "As Front-end developers, we encounter Observables as classes, objects or patterns, whether if it's in Angular, RxJS or through Redux (Redux uses the Observable pattern).\n\nI will try to unveil the 'magic' behind the Observables in javascript by creating two very simple examples of them. These examples are very simplified versions.",
        "dAdd": "2022-08-02",
        "dSrc": "2022-08-01",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Chenpeleg",
        "aUrl": "https://medium.com/@chenpeleg",
        "spkrs": [],
        "tags": ["Observables", "RxJS"]
      },
      {
        "slug": "2022-08-02-B",
        "type": "blog",
        "title": "Currency Angular pipe, UI language switch, and a verdict",
        "url": "https://medium.com/@aayyash/currency-angular-pipe-ui-language-switch-and-a-verdict-401840375ec",
        "desc": "The current i18n packages provided by Angular for that purpose serve the purpose well. In this series of articles I want to create an alternative solution for smaller scale apps.",
        "dAdd": "2022-08-02",
        "dSrc": "2022-08-01",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Ayyash",
        "aUrl": "https://medium.com/@aayyash",
        "spkrs": [],
        "tags": ["Pipes"]
      },
      {
        "slug": "2022-08-02-C",
        "type": "blog",
        "title": "Creating A Real-Time Search Functionality Using RxJS",
        "url": "https://rauniee.hashnode.dev/creating-a-real-time-search-functionality-using-rxjs",
        "desc": "Guys today we are going to implement real-time search implementation using RxJS(Reactive extension of JavaScript)\n\nReal-time search functionality in the sense for every user input search string we need to make API calls to the server to bring data.",
        "dAdd": "2022-08-02",
        "dSrc": "2022-08-01",
        "srcSite": "Hashnode",
        "srcUrl": "https://hashnode.com/n/angular",
        "aName": "Raunak Thakkar",
        "aUrl": "https://hashnode.com/@Rauniee",
        "spkrs": ["Raunak Thakkar"],
        "tags": ["RxJS"]
      },
      {
        "slug": "2022-08-02-D",
        "type": "video",
        "dur": "47",
        "title": "Angular V14 CRUD Operations using Input and Output Decorators - Angular",
        "url": "https://www.youtube.com/watch?v=1s8ZwKbEiXY",
        "desc": "In this video we will see about the CRUD Operations using the Input and Output Decorators using Angular 14",
        "dAdd": "2022-08-02",
        "dSrc": "2022-08-01",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Leela Web Dev",
        "aUrl": "https://www.youtube.com/c/LeelaWebDev/videos",
        "spkrs": ["Leela Narasimha"],
        "tags": ["CRUD", "@Input", "@Output", "Data Transfer"]
      },
      {
        "slug": "2022-08-02-E",
        "type": "video",
        "dur": "24",
        "title": "APP_INITIALIZER Token in Angular (Advanced, 2022)",
        "url": "https://www.youtube.com/watch?v=MoRScEseTf4",
        "desc": " In real Angular applications, it might happen that you need to perform some logic or pull the data even before Angular will start rendering the very first component. So basically, we want to have something like ngOnInit lifecycle hook but for the whole application. This is where the APP_INITIALIZER token in Angular comes into play! In this video, you will see how to use this token and what you should pay attention to",
        "dAdd": "2022-08-02",
        "dSrc": "2022-08-02",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Decoded Frontend",
        "aUrl": "https://www.youtube.com/c/DecodedFrontend/videos",
        "spkrs": ["Dmytro Mezhenskyi"],
        "tags": ["APP_INITIALIZER"]
      },
      {
        "slug": "2022-08-02-F",
        "type": "video",
        "dur": "15",
        "title": "Account Layout Configuration (Part 2) | Angular for Beginner & Expert | Angular children routing",
        "url": "https://www.youtube.com/watch?v=BRLiapG3v-4",
        "desc": "This is Part 2 of the Angular 14 series and in this video, I have explained about the children and lazy routing. Also explained about basic core and page folder structure.",
        "dAdd": "2022-08-02",
        "dSrc": "2022-08-02",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Beginner 2 Expert",
        "aUrl": "https://www.youtube.com/c/Beginner2Expert/videos",
        "spkrs": ["Biswajit Jana"],
        "tags": ["Configuration"]
      },
      {
        "slug": "2022-08-02-G",
        "type": "blog",
        "title": "Mocking Injected Service and BeforeEach Concepts",
        "url": "https://98sunny.hashnode.dev/mocking-injected-service-and-beforeeach-concepts-cl6ckjvsn01m7fvnv06x6addl",
        "desc": "Here, I have tried showing how to mock services and use them and basics of beforeEach() method by hands-on programming",
        "dAdd": "2022-08-02",
        "dSrc": "2022-08-02",
        "srcSite": "Hashnode",
        "srcUrl": "https://hashnode.com/n/angular",
        "aName": "Sunny Singh",
        "aUrl": "https://hashnode.com/@98sunny",
        "spkrs": ["Sunny Singh"],
        "tags": ["Testing", "Unit Testing"]
      }
    ]
  },
  {
    "date": "2022-08-03",
    "dailyPosts": [
      {
        "slug": "2022-08-03-A",
        "type": "blog",
        "title": "Angular Developer Roadmap 2022 (Things Every Budding Angular Developer Should Know)",
        "url": "https://medium.com/@venkateshb-03/angular-developer-roadmap-2025-things-every-budding-angular-developer-should-know-86061c84a0f9",
        "desc": "Hi readers, This is my second blog of the Roadmap Series. Here I Listed all the Angular topics to learn level by level to master Angular.",
        "dAdd": "2022-08-03",
        "dSrc": "2022-08-02",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Venkatesh B",
        "aUrl": "https://medium.com/@venkateshb-03",
        "spkrs": [],
        "tags": []
      },
      {
        "slug": "2022-08-03-B",
        "type": "blog",
        "title": "Use Angular Async Pipe to Make Your Life Easier",
        "url": "https://javascript.plainenglish.io/angular-async-pipe-714dd864adaa",
        "desc": "Use the async pipe whenever you can. Let Angular do the heavy work for you!\n(photo: by Victor Freitas on Unsplash)",
        "dAdd": "2022-08-03",
        "dSrc": "2022-08-02",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Kagklis Vasileios",
        "aUrl": "https://kagklis.medium.com",
        "spkrs": ["Kagklis Vasileios"],
        "tags": ["RxJS", "Async Pipe"]
      },
      {
        "slug": "2022-08-03-C",
        "type": "blog",
        "title": "Getting to Know the runInContext API in Angular",
        "url": "https://netbasal.com/getting-to-know-the-runincontext-api-in-angular-f8996d7e00da",
        "desc": "Angular v14.10 introduce the EnvironmentInjector.runInContext API. Using this function, we can run a function in the context of an injector.",
        "dAdd": "2022-08-03",
        "dSrc": "2022-08-03",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Netanel Basal",
        "aUrl": "https://netbasal.medium.com",
        "spkrs": ["Netanel Basal"],
        "tags": ["runInContext", "inject()"]
      },
      {
        "slug": "2022-08-03-D",
        "type": "video",
        "dur": "28",
        "title": "Part-5 | Angular(v14) JWT Access Token Authentication & Refresh Token",
        "url": "https://www.youtube.com/watch?v=iCyMbezt-Q0",
        "desc": "Video Summary\n1. Refresh Token API\n2. Interceptor to invoke the refresh token API",
        "dAdd": "2022-08-03",
        "dSrc": "2022-08-03",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Naveen Bommidi Tech Seeker",
        "aUrl": "https://www.youtube.com/c/NaveenTechSeeker/videos",
        "spkrs": ["Naveen Bommidi"],
        "tags": ["JWT", "Auth", "HttpInterceptors"]
      },
      {
        "slug": "2022-08-03-E",
        "type": "video",
        "dur": "17",
        "title": "ngTemplateOutlet is WAY more useful than I realised",
        "url": "https://www.youtube.com/watch?v=TZZApWysF9g",
        "desc": "In this video, we explore a situation where *ngTemplateOutlet can turn an impossibly messy component into something beautiful. We will discuss the role of ng-template, how we can use *ngTemplateOutlet to display them, and why just using components and inputs isn't viable. ",
        "dAdd": "2022-08-03",
        "dSrc": "2022-08-03",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Joshua Morony",
        "aUrl": "https://www.youtube.com/c/CreativeDeveloper/videos",
        "spkrs": ["Joshua Morony"],
        "tags": ["<ng-template>", "ngTemplateOutlet"]
      },
            {
        "slug": "2022-08-03-F",
        "type": "podcast",
        "dur": "44",
        "title": "AMP 27: Michael Hladky on Advanced Reactive UI Patterns",
        "url": "https://open.spotify.com/episode/6on29VMtoEQSd0to8d8DeT",
        "desc": "Topics covered in this episode:\n - Local vs. global state (when to us what)\n - Derived state (shared computations, distinct changes, and nullish values)\n - View vs. ViewModel\n - OOP Design Patterns and Component state (Facade, MVVM, MVC, Adapter)\n - Observable Inputs without decorators\n - Observable HostBindings\n - Managing async data streams with RxJS flattening operators\n - How to handle error, complete, suspense, and values in the template\n - Component lazy loading\n - Improving UX with Reusable reactive helpers (nonFlickerLoader)",
        "dAdd": "2022-08-03",
        "dSrc": "2022-08-03",
        "srcSite": "Spotify",
        "srcUrl": "https://open.spotify.com",
        "aName": "Angular Master Podcast",
        "aUrl": "https://open.spotify.com/show/1wgZAEEIoRZ8eP78LTbyZf",
        "spkrs": ["Michael Hladky"],
        "tags": ["Observables"]
      },
      {
        "slug": "2022-08-03-G",
        "type": "video",
        "dur": "12",
        "title": "Angular For Beginners - 16. Observables",
        "url": "https://www.youtube.com/watch?v=Z8F4_191pCU",
        "desc": "",
        "dAdd": "2022-08-03",
        "dSrc": "2022-08-03",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Teddy Smith",
        "aUrl": "https://www.youtube.com/c/TeddySmithNC/videos",
        "spkrs": ["Teddy Smith"],
        "tags": ["Observables"]
      },
      {
        "slug": "2022-08-03-H",
        "type": "release",
        "title": "Angular Release: v14.1.1",
        "url": "https://github.com/angular/angular/releases/tag/14.1.1",
        "desc": "",
        "dAdd": "2022-08-03",
        "dSrc": "2022-08-03",
        "srcSite": "GitHub Angular",
        "srcUrl": "https://github.com/angular/angular/releases",
        "aName": "Andrew Kushnir",
        "aUrl": "https://github.com/AndrewKushnir",
        "spkrs": [],
        "tags": ["Release"]
      },
      {
        "slug": "2022-08-03-J",
        "type": "release",
        "title": "Angular Release: v14.2.0-next.0",
        "url": "https://github.com/angular/angular/releases/tag/14.2.0-next.0",
        "desc": "",
        "dAdd": "2022-08-03",
        "dSrc": "2022-08-03",
        "srcSite": "GitHub Angular",
        "srcUrl": "https://github.com/angular/angular/releases",
        "aName": "Andrew Kushnir",
        "aUrl": "https://github.com/AndrewKushnir",
        "spkrs": [],
        "tags": ["Release"]
      },
      {
        "slug": "2022-08-03-K",
        "type": "video",
        "dur": "73",
        "title": "UI Mondays: Hosting Angular and React Apps on GitHub pages",
        "url": "https://www.youtube.com/watch?v=0rEa5MjW5ME",
        "desc": "Welcome to UI Mondays where Alyssa and Kathryn will show you how you can host your Angular or React apps on GitHub pages. Kathryn already has her React app up on GitHub pages, so can Alyssa replicate that for her Angular app? ",
        "dAdd": "2022-08-03",
        "dSrc": "2022-08-03",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Kendo UI",
        "aUrl": "https://www.youtube.com/c/KendoUIChannel/videos",
        "spkrs": ["Alyssa Nicoll", "Kathryn Grayson"],
        "tags": ["GitHub Pages"]
      }
    ]
  },
  {
    "date": "2022-08-04",
    "dailyPosts": [
      {
        "slug": "2022-08-04-A",
        "type": "blog",
        "title": "Angular 14: All the Important Updates and Key Features",
        "url": "https://medium.com/@adsumsoftware/angular-14-all-the-important-updates-and-key-features-1566d2148bc2",
        "desc": "Angular is a popular open source and typescript web application framework. It is used widely by top-notch web developers for frontend app development. Most web developers opt for Angular, led by the Angular team at Google. Recently, it has created a buzz as its latest version was introduced in the market-Angular 14.",
        "dAdd": "2022-08-04",
        "dSrc": "2022-08-02",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Adsum Software",
        "aUrl": "https://medium.com/@adsumsoftware",
        "spkrs": [],
        "tags": []
      },
      {
        "slug": "2022-08-04-B",
        "type": "blog",
        "title": "Add themes to Angular using CSS variables",
        "url": "https://medium.com/@ertungabezirgan/add-themes-to-angular-using-css-variables-fc49798285c6",
        "desc": " In this article, we are going to learn how to add themes to Angular apps using a simple service and the power of CSS variables (aka CSS custom properties).\n(photo: by Jeremy Bezanger on Unsplash)",
        "dAdd": "2022-08-04",
        "dSrc": "2022-08-02",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Ertunga Bezirgan",
        "aUrl": "https://medium.com/@ertungabezirgan",
        "spkrs": ["Ertunga Bezirgan"],
        "tags": ["Theming"]
      },
      {
        "slug": "2022-08-04-C",
        "type": "blog",
        "title": "Easy way to optimize Angular App Performance",
        "url": "https://medium.com/peaksoftgmbh/easy-way-to-optimize-angular-app-performance-9de0c5b3564d",
        "desc": "Angular is one of the most popular JavaScript frameworks. This technology is primarily used to build fast and well-performing web apps.\n\nDespite all mechanism implemented by Angular dev teams, it is common to see Angular apps gradually getting slower over time.",
        "dAdd": "2022-08-04",
        "dSrc": "2022-08-04",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Abderrahim Issaoui",
        "aUrl": "https://medium.com/@abderrahim.issaoui",
        "spkrs": ["Abderrahim Issaoui"],
        "tags": []
      },
      {
        "slug": "2022-08-04-D",
        "type": "blog",
        "title": "Angular Basics: Using ESLint to Boost Code Quality",
        "url": "https://www.telerik.com/blogs/angular-basics-using-eslint-boost-code-quality",
        "desc": "Learn how to use ESLint in your Angular projects and how ESLint helps you write better code.",
        "dAdd": "2022-08-04",
        "dSrc": "2022-08-04",
        "srcSite": "Progress Telerik Blog",
        "srcUrl": "https://www.telerik.com/blogs/web-angular",
        "aName": "Nwose Lotanna Victor",
        "aUrl": "https://www.telerik.com/blogs/author/nwose-lotanna",
        "spkrs": ["Nwose Lotanna Victor"],
        "tags": ["ESLint"]
      },
      {
        "slug": "2022-08-04-E",
        "type": "video",
        "dur": "73",
        "title": "Top 30 Angular Interview Questions for Beginner - Part 1 in one hour",
        "url": "https://www.youtube.com/watch?v=PevqeI-Hxzs",
        "desc": "",
        "dAdd": "2022-08-04",
        "dSrc": "2022-08-04",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Interview Happy",
        "aUrl": "https://www.youtube.com/channel/UCPcmW5NwvMPk1FEqSRKV1Dw/videos",
        "spkrs": [],
        "tags": []
      },
      {
        "slug": "2022-08-04-F",
        "type": "video",
        "dur": "58",
        "title": "Angular V14 Services. Implement CRUD operations using Services - Angular 14",
        "url": "https://www.youtube.com/watch?v=wejBctes9jY",
        "desc": "In this video we will see how to do the CRUD operations using Services - Angular 14",
        "dAdd": "2022-08-04",
        "dSrc": "2022-08-04",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Leela Web Dev",
        "aUrl": "https://www.youtube.com/c/LeelaWebDev/videos",
        "spkrs": ["Leela Narasimha"],
        "tags": ["Services", "CRUD"]
      },
      {
        "slug": "2022-08-04-G",
        "type": "video",
        "dur": "6",
        "title": "Two way data binding | Interpolation",
        "url": "https://www.youtube.com/watch?v=7KZ4iedR2Sw",
        "desc": "",
        "dAdd": "2022-08-04",
        "dSrc": "2022-08-04",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "learnAngular",
        "aUrl": "https://www.youtube.com/channel/UCcuw8FzrQa55b7olSKBgWFQ/videos",
        "spkrs": [],
        "tags": ["Two-Way Data Binding", "Interpolation"]
      },
      {
        "slug": "2022-08-04-H",
        "type": "video",
        "dur": "9",
        "title": "Angular 14 - Forms new features",
        "url": "https://www.youtube.com/watch?v=daba7xeo4sA",
        "desc": "Angular tutorial. Shows new features of Angular 14 forms such as types forms and reset form",
        "dAdd": "2022-08-04",
        "dSrc": "2022-08-04",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Alex Khymenko",
        "aUrl": "https://www.youtube.com/channel/UCc6U8t63AXf1twGg6qiK9fA/videos",
        "spkrs": ["Alex Khymenko"],
        "tags": ["Forms", "Typed Forms"]
      },
      {
        "slug": "2022-08-04-J",
        "type": "blog",
        "title": "Add Interactive Angular Charts to ng-bootstrap Components",
        "url": "https://dev.to/vishwas/add-interactive-angular-charts-to-ng-bootstrap-components-15hg",
        "desc": "In this Angular 14 Chart tutorial, we will learn how to add charts to display data within ng-bootstrap tabs. A chart is basically a graphical representation of data, they summarize large data or information in a visual easy-to-understand manner.",
        "dAdd": "2022-08-04",
        "dSrc": "2022-08-04",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Vishwas R",
        "aUrl": "https://dev.to/vishwas",
        "spkrs": [],
        "tags": ["Charts"]
      },
      {
        "slug": "2022-08-04-K",
        "type": "video",
        "dur": "16",
        "title": "Dynamically change page title of Angular (Part - 4) | Angular for expert | Angular for beginner",
        "url": "https://www.youtube.com/watch?v=sr1bKUAaJCg",
        "desc": "This is part 4 of the Angular 14 series and today I have explained in this video about the page title, How to change the application page title at run time, or else can say dynamically.",
        "dAdd": "2022-08-04",
        "dSrc": "2022-08-04",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Beginner 2 Expert",
        "aUrl": "https://www.youtube.com/c/Beginner2Expert/videos",
        "spkrs": ["Biswajit Jana"],
        "tags": ["setTitle()"]
      },
      {
        "slug": "2022-08-04-L",
        "type": "video",
        "dur": "2",
        "title": "Angular Material #53 - CDK Table",
        "url": "https://www.youtube.com/watch?v=sgqx16WZCaw",
        "desc": " Angular Material is a UI Component-Based Library for Angular, and through this series, we will take a look into each feature that Angular Material has to offer.",
        "dAdd": "2022-08-04",
        "dSrc": "2022-08-04",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Omerko",
        "aUrl": "https://www.youtube.com/c/Omerko/videos",
        "spkrs": ["Stefan Omerovic"],
        "tags": ["Angular Material", "Angular CDK", "Data Table"]
      },
      {
        "slug": "2022-08-04-M",
        "type": "video",
        "dur": "23",
        "title": "Angular 14 Reactive Forms with Form Array | Angular 14 full tutorial",
        "url": "https://www.youtube.com/watch?v=QfGMT0eoBrk",
        "desc": "This video explains the concepts for Form array\n1,  What is form array\n2,  How to define form array\n3,  how to add & remove items in form array\n4,  Get values from form array",
        "dAdd": "2022-08-04",
        "dSrc": "2022-08-04",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Nihira Techiees",
        "aUrl": "https://www.youtube.com/channel/UCsbmVmB_or8sVLLEq4XhE_A/videos",
        "spkrs": [],
        "tags": ["Forms", "Reactive Forms", "FormArray"]
      },
      {
        "slug": "2022-08-04-N",
        "type": "video",
        "dur": "68",
        "title": "Angular Real World App with Supabase & Tailwind",
        "url": "https://www.youtube.com/watch?v=G_kqGWeMORQ",
        "desc": "Let's create cool projects together on the stream and go from setting up a new project to finally hosting it!",
        "dAdd": "2022-08-04",
        "dSrc": "2022-08-04",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Simon Grimm",
        "aUrl": "https://www.youtube.com/c/SimonGrimmDev/videos",
        "spkrs": ["Simon Grimm"],
        "tags": []
      }
    ]
  },
  {
    "date": "2022-08-05",
    "dailyPosts": [
      {
        "slug": "2022-08-05-A",
        "type": "blog",
        "title": "Nice Angular Material selection dropdown",
        "url": "https://medium.com/weekly-webtips/nice-angular-material-selection-dropdown-dc3147db07c6",
        "desc": "TL;DR: Lets implement a nice dropdown component using Angular mat-select with icons and custom closed option.(photo: by Priscilla Du Preez on Unsplash)",
        "dAdd": "2022-08-05",
        "dSrc": "2022-08-03",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Dominik Januvka",
        "aUrl": "https://medium.com/@dominik-januvka",
        "spkrs": ["Dominik Januvka"],
        "tags": ["Angular Material", "Select"]
      },
      {
        "slug": "2022-08-05-B",
        "type": "video",
        "dur": "47",
        "title": "Angular V14 Routing Introduction. Passing & retrieving Parameters, queryparams, fragments - Angular",
        "url": "https://www.youtube.com/watch?v=aOxgeBG92cc",
        "desc": "In this video we will see about the Angular 14 routing introduction. Passing and retrieving the parameters, query params and fragments in Angular",
        "dAdd": "2022-08-05",
        "dSrc": "2022-08-04",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Leela Web Dev",
        "aUrl": "https://www.youtube.com/c/LeelaWebDev/videos",
        "spkrs": ["Leela Narasimha"],
        "tags": ["Routing", "Route Params", "Query Params"]
      },
      {
        "slug": "2022-08-05-C",
        "type": "video",
        "dur": "6",
        "title": "Angular - How to add titles to your application",
        "url": "https://www.youtube.com/watch?v=Li3gZwvc3Zw",
        "desc": "Angular tutorial. This is example how to add page titles to you application",
        "dAdd": "2022-08-05",
        "dSrc": "2022-08-05",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Alex Khymenko",
        "aUrl": "https://www.youtube.com/channel/UCc6U8t63AXf1twGg6qiK9fA/videos",
        "spkrs": ["Alex Khymenko"],
        "tags": ["Title", "setTitle()"]
      },
      {
        "slug": "2022-08-05-D",
        "type": "blog",
        "title": "A robust Angular search bar with RxJS Debounce",
        "url": "https://medium.com/@pabasaramahindapala/a-robust-angular-search-bar-with-rxjs-debounce-29a082d6816e",
        "desc": "We come across numerous types of search bars, search dropdowns in the internet everyday. Most of these search bars would be calling to a backend API to query the results based on our input.\n(photo: by Daniel Lerman on Unsplash)",
        "dAdd": "2022-08-05",
        "dSrc": "2022-08-05",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Pabasara Mahindapala",
        "aUrl": "https://medium.com/@pabasaramahindapala",
        "spkrs": ["Pabasara Mahindapala"],
        "tags": ["RxJS", "debounce()"]
      },
      {
        "slug": "2022-08-05-E",
        "type": "podcast",
        "dur": "27",
        "title": "AMP 29: Emma Twersky on Future of Angular",
        "url": "https://open.spotify.com/episode/4btlNMlhJxA38eLGvPexYy",
        "desc": "",
        "dAdd": "2022-08-05",
        "dSrc": "2022-08-05",
        "srcSite": "Spotify",
        "srcUrl": "https://open.spotify.com",
        "aName": "Angular Master Podcast",
        "aUrl": "https://open.spotify.com/show/1wgZAEEIoRZ8eP78LTbyZf",
        "spkrs": ["Emma Twersky"],
        "tags": []
      },
      {
        "slug": "2022-08-05-F",
        "type": "video",
        "dur": "3",
        "title": "#5.3 - Execution Flow - Event Binding - Angular Series",
        "url": "https://www.youtube.com/watch?v=CXDH_IV3MYQ",
        "desc": "In this video, we will walkthrough the flow of events that happen in the Event Binding example, that we have implemented. We will also update the architecture diagram and understand the benefits of Angular over JavaScript.",
        "dAdd": "2022-08-05",
        "dSrc": "2022-08-05",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "SIMPL Academy",
        "aUrl": "https://www.youtube.com/channel/UCGB1Qg0oq4Ar4h6rzW0vzdA/videos",
        "spkrs": [],
        "tags": ["Event Binding"]
      },
      {
        "slug": "2022-08-05-G",
        "type": "blog",
        "title": "Crossfade CSS animation in Angular",
        "url": "https://medium.com/@zgollum/crossfade-animation-in-angular-a18f08fe5a03",
        "desc": "I was developing a settings component for my Angular application and I've been using a Bootstrap-based theme for the app, so naturally I've lifted most of my layout from the theme.",
        "dAdd": "2022-08-05",
        "dSrc": "2022-08-05",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Volodymyr Volodin",
        "aUrl": "https://medium.com/@zgollum",
        "spkrs": ["Volodymyr Volodin"],
        "tags": ["Animations"]
      },
      {
        "slug": "2022-08-05-H",
        "type": "blog",
        "title": "A Guide to Angular 14 Release Features and Updates",
        "url": "https://dev.to/grapecity/a-guide-to-angular-14-release-features-and-updates-442f",
        "desc": "Angular 14 has officially been released! This version of Angular contains many powerful features, such as typed forms, standalone components, and new primitives in the Angular CDK.",
        "dAdd": "2022-08-05",
        "dSrc": "2022-08-05",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Chelsea Devereaux",
        "aUrl": "https://dev.to/chelseadevereaux",
        "spkrs": ["Chelsea Devereaux"],
        "tags": []
      },
      {
        "slug": "2022-08-05-J",
        "type": "blog",
        "title": "Add Angular Input Form Mask & Validation Features to Your Web App",
        "url": "https://dev.to/grapecity/add-angular-input-form-mask-validation-features-to-your-web-app-3g7h",
        "desc": "Form elements are a common way to collect information that your website requires from users. They typically consist of elements, checkboxes, radio buttons, and a button for users to submit the information they entered.",
        "dAdd": "2022-08-05",
        "dSrc": "2022-08-05",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Chelsea Devereaux",
        "aUrl": "https://dev.to/chelseadevereaux",
        "spkrs": ["Chelsea Devereaux"],
        "tags": ["Forms", "Validation"]
      },
      {
        "slug": "2022-08-05-K",
        "type": "blog",
        "title": "Angular Interview Questions Part 1",
        "url": "https://dev.to/stacksjar/angular-interview-questions-part-1-5cc2",
        "desc": "In this article we are going to see a well curated list of Angular interview questions 2021 and answers for experienced as well as freshers.",
        "dAdd": "2022-08-05",
        "dSrc": "2022-08-05",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Stacksjar",
        "aUrl": "https://dev.to/stacksjar",
        "spkrs": [],
        "tags": []
      },
      {
        "slug": "2022-08-05-L",
        "type": "blog",
        "title": "Angular Interview Questions Part 2",
        "url": "https://dev.to/stacksjar/angular-interview-questions-part-2-10bn",
        "desc": "In this article we are going to see a well curated list of Angular interview questions 2021 and answers for experienced as well as freshers.",
        "dAdd": "2022-08-05",
        "dSrc": "2022-08-05",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Stacksjar",
        "aUrl": "https://dev.to/stacksjar",
        "spkrs": [],
        "tags": []
      },
      {
        "slug": "2022-08-05-M",
        "type": "blog",
        "title": "Angular Interview Questions Part 3",
        "url": "https://dev.to/stacksjar/angular-interview-questions-part-3-4m2h",
        "desc": "In this article we are going to see a well curated list of Angular interview questions 2021 and answers for experienced as well as freshers.",
        "dAdd": "2022-08-05",
        "dSrc": "2022-08-05",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Stacksjar",
        "aUrl": "https://dev.to/stacksjar",
        "spkrs": [],
        "tags": []
      },
      {
        "slug": "2022-08-05-N",
        "type": "video",
        "dur": "65",
        "title": "Angular Team Meetup July 2022 - MFEs w/ Module Federation and Angular Elements",
        "url": "https://www.youtube.com/watch?v=hP-oUGbR3N8",
        "desc": "An archive of our July 2022 Angular Team Meetup Twitch Stream. Idris Shedu talks about Module Federation in Angular and AJ Wiebe goes over how Angular Elements can be used to build Micro Frontends!",
        "dAdd": "2022-08-05",
        "dSrc": "2022-08-05",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Bitovi",
        "aUrl": "https://www.youtube.com/c/Bitovi/videos",
        "spkrs": ["AJ Wiebe", "Idris Shedu"],
        "tags": ["Module Federation", "Angular Elements"]
      },
      {
        "slug": "2022-08-05-P",
        "type": "video",
        "dur": "68",
        "title": "Gaming and Q/A with the Angular Team | August 2022",
        "url": "https://youtu.be/fkoFf4_yPRw?t=23",
        "desc": "Mark and Jeremy are back and ready to connect with the community and play some games! What questions do you have for the Angular team?",
        "dAdd": "2022-08-05",
        "dSrc": "2022-08-05",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Angular",
        "aUrl": "https://www.youtube.com/c/Angular/videos",
        "spkrs": ["Jessica Janiuk", "Jeremy Elbourn", "Mark Thompson"],
        "tags": []
      }
    ]
  },
  {
    "date": "2022-08-06",
    "dailyPosts": [
      {
        "slug": "2022-08-06-A",
        "type": "blog",
        "title": "Angular: Reload/Refresh a Component or Entire Application & Reuse Logic Across Multiple Components",
        "url": "https://ramya-bala221190.medium.com/angular-how-you-can-reload-refresh-a-single-component-or-the-entire-application-and-reuse-the-logic-c6e975a278c3",
        "desc": "An Angular tutorial on how to reload/refresh a single component or the entire application and reuse the logic across multiple components.",
        "dAdd": "2022-08-06",
        "dSrc": "2022-08-05",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "AngularEnthusiast",
        "aUrl": "https://ramya-bala221190.medium.com",
        "spkrs": [],
        "tags": ["Routing"]
      },
      {
        "slug": "2022-08-06-B",
        "type": "blog",
        "title": "Make a signing pad in Angular & Vanilla JS",
        "url": "https://itnext.io/make-a-signing-pad-in-angular-vanilla-js-7a3eb7e0599d",
        "desc": "How to make a signature pad in Angular and store the digital signature in your server",
        "dAdd": "2022-08-06",
        "dSrc": "2022-08-05",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Adnane Lamghari",
        "aUrl": "https://adnane-lamghari.medium.com",
        "spkrs": ["Adnane Lamghari"],
        "tags": []
      },
      {
        "slug": "2022-08-06-C",
        "type": "video",
        "dur": "60",
        "title": "Build an Angular App in 1 hour [ Components | Routing | Network ]",
        "url": "https://www.youtube.com/watch?v=rL7MLmmy58A",
        "desc": "",
        "dAdd": "2022-08-06",
        "dSrc": "2022-08-05",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Ganesh Pilli",
        "aUrl": "https://www.youtube.com/c/GaneshPilli/videos",
        "spkrs": ["Ganesh Pilli"],
        "tags": []
      },
      {
        "slug": "2022-08-06-D",
        "type": "video",
        "dur": "27",
        "title": "Angular component communication",
        "url": "https://www.youtube.com/watch?v=ItZcgy9ZQTQ",
        "desc": "How to communication between components in Angular.\nPass data from parent to child component using @Input decorator.\nPass data from child to parent component using @Output and EventEmitter.\nHow to access child components properties & methods using @ViewChild.\nHow to communication between components using services.\nHow to share data between components in Angular.\nHow to use Subject in Angular.",
        "dAdd": "2022-08-06",
        "dSrc": "2022-08-06",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Hike Coding Knowledge",
        "aUrl": "https://www.youtube.com/user/rajupaul71/videos",
        "spkrs": [],
        "tags": ["Data Transfer", "@Input", "@Output", "EventEmitter", "@ViewChild", "Subject"]
      },
      {
        "slug": "2022-08-06-E",
        "type": "podcast",
        "dur": "39",
        "title": "AMP 30: Dhananjay Kumar on Angular Services",
        "url": "https://open.spotify.com/episode/4btlNMlhJxA38eLGvPexYy",
        "desc": "",
        "dAdd": "2022-08-06",
        "dSrc": "2022-08-06",
        "srcSite": "Spotify",
        "srcUrl": "https://open.spotify.com",
        "aName": "Angular Master Podcast",
        "aUrl": "https://open.spotify.com/show/1wgZAEEIoRZ8eP78LTbyZf",
        "spkrs": ["Dhananjay Kumar"],
        "tags": ["Services"]
      },
      {
        "slug": "2022-08-06-F",
        "type": "video",
        "dur": "5",
        "title": "20. Template variables in Angular",
        "url": "https://www.youtube.com/watch?v=uhFFE1v9XNs",
        "desc": "Template variables are used to pass data in one direction from the template to the typescript component.\nIn the template, you use the hash symbol to declare a template variable.",
        "dAdd": "2022-08-06",
        "dSrc": "2022-08-06",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Ervis Trupja",
        "aUrl": "https://www.youtube.com/c/DotNetHow/videos",
        "spkrs": ["Ervis Trupja"],
        "tags": ["Template Reference Variable"]
      },
      {
        "slug": "2022-08-06-G",
        "type": "video",
        "dur": "18",
        "title": "Part-6 | Angular(v14) JWT Access Token Authentication & Refresh Token",
        "url": "https://www.youtube.com/watch?v=M3df6OFmeQY",
        "desc": "",
        "dAdd": "2022-08-06",
        "dSrc": "2022-08-06",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Naveen Bommidi Tech Seeker",
        "aUrl": "https://www.youtube.com/c/NaveenTechSeeker/videos",
        "spkrs": ["Naveen Bommidi"],
        "tags": ["JWT", "Auth"]
      },
      {
        "slug": "2022-08-06-H",
        "type": "blog",
        "title": "Listening to multiple form controls in Angular",
        "url": "https://dev.to/rajsaha/listening-to-multiple-form-controls-in-angular-im3",
        "desc": "Let's say you're in a situation where you're listening to one FormControl but you're dependent on the value of another FormControl.",
        "dAdd": "2022-08-06",
        "dSrc": "2022-08-06",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Raj Saha",
        "aUrl": "https://dev.to/rajsaha",
        "spkrs": ["Raj Saha"],
        "tags": ["Forms", "FormControl", "withLatestFrom()", "combineLatest()", "RxJS"]
      },
      {
        "slug": "2022-08-06-J",
        "type": "video",
        "dur": "27",
        "title": "Login functionality with JWT token | Angular for Beginner and Experience | Angular 14 login",
        "url": "https://www.youtube.com/watch?v=2-OvE9xRnXA",
        "desc": "This is part 5 of Angular 14 series and in this video explained regarding login and remember me full functionality.",
        "dAdd": "2022-08-06",
        "dSrc": "2022-08-06",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Beginner 2 Expert",
        "aUrl": "https://www.youtube.com/c/Beginner2Expert/videos",
        "spkrs": ["Biswajit Jana"],
        "tags": ["JWT", "Auth"]
      }
    ]
  },
  {
    "date": "2022-08-06",
    "dailyPosts": [
      {
        "slug": "2022-08-07-A",
        "type": "video",
        "dur": "20",
        "title": "combineLatest, concat, merge, forkJoin, zip, race, partition RxJS Join creation operators in Angular 14",
        "url": "https://www.youtube.com/watch?v=BkbId2HQnLA",
        "desc": "We explore the different join creation operators which are available with the latest version of RxJS using an Angular 14 applications. The below operators are explored: combineLatest, concat, merge, forkJoin, zip, race, partition.",
        "dAdd": "2022-08-07",
        "dSrc": "2022-08-06",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "JS Frameworks",
        "aUrl": "https://www.youtube.com/c/JSFrameworks/videos",
        "spkrs": [],
        "tags": ["RxJS", "combineLatest()", "concat()", "merge()", "forkJoin()", "zip()", "race()", "partition()"]
      },
      {
        "slug": "2022-08-07-B",
        "type": "video",
        "dur": "4",
        "title": "Angular 13 Tutorial - 10 - ngIf Directives in Angular | Learn Web Development",
        "url": "https://www.youtube.com/watch?v=AsauWmRnERE",
        "desc": " We are talking aboout directives in angular and we will discus what is ngIf and its usage in details",
        "dAdd": "2022-08-07",
        "dSrc": "2022-08-06",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Kode With Kamran",
        "aUrl": "https://www.youtube.com/channel/UClAF60JODGbZKoyREtl6S5A/videos",
        "spkrs": [],
        "tags": ["Directives", "*ngIf"]
      },
      {
        "slug": "2022-08-07-C",
        "type": "video",
        "dur": "39",
        "title": "Deploying Angular Website with AWS in 40 mins",
        "url": "https://www.youtube.com/watch?v=ktlHXUpEfBE",
        "desc": "We will be using: Angular, Domain, Route 53, S3, CloudFront, ACM, KMS, CloudWatch",
        "dAdd": "2022-08-07",
        "dSrc": "2022-08-07",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "TutorECafe",
        "aUrl": "https://www.youtube.com/c/TutorECafe/videos",
        "spkrs": [],
        "tags": []
      },
      {
        "slug": "2022-08-07-D",
        "type": "video",
        "dur": "86",
        "title": "What's new in Angular 14 - Hands-on Guide | Karsten Sitterberg",
        "url": "https://www.youtube.com/watch?v=rv6pbIAmiI4",
        "desc": "The Angular Framework version 14 is the most extensive and most awaited update by the community for a long time. There are exciting features for different user groups, so there should be something for everyone. An update is therefore worthwhile, even if there are one or two incompatible changes to consider. This workshop will present in detail what Angular 14 has to offer for developers.",
        "dAdd": "2022-08-07",
        "dSrc": "2022-08-07",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Entwickler Videos",
        "aUrl": "https://www.youtube.com/channel/UCc_UHsU7YIj5JxKnr-TNVEg/videos",
        "spkrs": [],
        "tags": []
      },
      {
        "slug": "2022-08-07-E",
        "type": "video",
        "dur": "16",
        "title": "BehaviorSubject In Angular",
        "url": "https://www.youtube.com/watch?v=C0SAdxccykU",
        "desc": "Behavior Subject in Angular (Any to Any Component Data Relation)",
        "dAdd": "2022-08-07",
        "dSrc": "2022-08-07",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Ali Eshghi Coding",
        "aUrl": "https://www.youtube.com/channel/UCXsQdLaxN-T_ybOlB756Qfw/videos",
        "spkrs": ["Ali Eshghi"],
        "tags": ["RxJS", "BehaviorSubject"]
      },
      {
        "slug": "2022-08-07-F",
        "type": "video",
        "dur": "10",
        "title": "How to quickly test the front end | Angular | Testing | Chart.js | ng2-charts | Aelli codes",
        "url": "https://www.youtube.com/watch?v=dg3q2u9nbnw",
        "desc": "In this tutorial you will learn how to quickly test your front end if you don't want or can't use a test framework, or don't want to spend time on testing APIs, etc. Angular@14.1.0, chart.js@3.9.1, ng2-charts@4.0.0 ",
        "dAdd": "2022-08-07",
        "dSrc": "2022-08-07",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Aelli codes",
        "aUrl": "https://www.youtube.com/channel/UCt4xAbpkHGIHOwMOnWA_-AQ/videos",
        "spkrs": [],
        "tags": ["Testing", "Fakes"]
      },
      {
        "slug": "2022-08-07-G",
        "type": "video",
        "dur": "33",
        "title": "Angular Essentials 1 - Deep Dive Into Nx Files",
        "url": "https://www.youtube.com/watch?v=Je01EH_C8HQ",
        "desc": " This is more of an entry-level video. We discuss how to set up an Angular project using Yarn and Nx. We discuss managing node versions and why that is a good idea. We discuss the Angular compatibility chart. I discuss why I like GitKraken. We do a deep dive into the files generated by Nx.",
        "dAdd": "2022-08-07",
        "dSrc": "2022-08-07",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Jason Warner",
        "aUrl": "https://www.youtube.com/channel/UCzF8hdwni3db3UZ7P3uKBkQ/videos",
        "spkrs": ["Jason Warner"],
        "tags": ["Nx"]
      }
    ]
  },
  {
    "date": "2022-08-08",
    "dailyPosts": [
      {
        "slug": "2022-08-08-A",
        "type": "blog",
        "title": "Getting to Know the createApplication API in Angular",
        "url": "https://netbasal.com/getting-to-know-the-createapplication-api-in-angular-f1c0a2685047",
        "desc": "Angular v14.2.0 introduce a new function named createApplication. The createApplication function creates an application instance without bootstrapping any components.",
        "dAdd": "2022-08-08",
        "dSrc": "2022-08-07",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Netanel Basal",
        "aUrl": "https://netbasal.medium.com",
        "spkrs": ["Netanel Basal"],
        "tags": ["createApplication()"]
      },
      {
        "slug": "2022-08-08-B",
        "type": "video",
        "dur": "42",
        "title": "Angular 14 Child Nested Routing. Divide Routes to separate file. Preserve Query Params - Angular V14",
        "url": "https://www.youtube.com/watch?v=Jv8Us9xek6k",
        "desc": "In this video we will see about the Angular V14 child Nested Routing and divide the routes into s separate file. Preserve and merge the query params in Angular V14.",
        "dAdd": "2022-08-08",
        "dSrc": "2022-08-07",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Leela Web Dev",
        "aUrl": "https://www.youtube.com/c/LeelaWebDev/videos",
        "spkrs": ["Leela Narasimha"],
        "tags": ["Routing", "Query Params"]
      },
      {
        "slug": "2022-08-08-C",
        "type": "blog",
        "title": "Pre-generating multiple index files using Angular Builders and Gulp tasks to serve a multilingual Angular app",
        "url": "https://dev.to/ayyash/pre-generating-multiple-index-files-using-angular-builders-and-gulp-tasks-to-serve-a-multilingual-angular-app-323",
        "desc": "Now that we know how to generate different index files on runtime through Express template engines, we are going to build the right index file before serving it, and drop the template engines. The main benefit of this is decoupling from the server, and making all HTML processing go under one hood. This also makes hosting on cloud hosts easier.",
        "dAdd": "2022-08-08",
        "dSrc": "2022-08-08",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Ayyash",
        "aUrl": "https://dev.to/ayyash",
        "spkrs": [],
        "tags": ["Internationalization"]
      },
      {
        "slug": "2022-08-08-D",
        "type": "blog",
        "title": "An Overview of the Modular Structure in Angular P1",
        "url": "https://medium.com/@dp.manakal82/an-overview-of-the-modular-structure-in-angular-p1-13f0c12330eb",
        "desc": "Hello there my friends again back with another awesome post (After a long time). Today I thought of introducing you to Modules. hmm… More particularly Modules in Angular. Here I'll give you a basic understanding of what is a module in Angular what are the common types of modules How to build your own custom module.\n(photo: https://www.istockphoto.com/photos/world-revolving-around-man)",
        "dAdd": "2022-08-08",
        "dSrc": "2022-08-08",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Buhuti Manakal",
        "aUrl": "https://medium.com/@dp.manakal82",
        "spkrs": ["Buhuti Manakal"],
        "tags": ["Modules"]
      },
      {
        "slug": "2022-08-08-E",
        "type": "blog",
        "title": "How to create your own Angular Tooltip Directive — a short tutorial",
        "url": "https://pgolofit.medium.com/how-to-create-your-own-angular-tooltip-directive-a-short-tutorial-4d58a4633495",
        "desc": "Tooltips may seem insignificant, shy, and sometimes neglected. But they are real superheroes of many user interfaces. And like superheroes, they appear from nowhere, right when you need them, exactly where the help is needed. But, what is their superpower?",
        "dAdd": "2022-08-08",
        "dSrc": "2022-08-08",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Piotr Golofit",
        "aUrl": "https://pgolofit.medium.com",
        "spkrs": ["Piotr Golofit"],
        "tags": ["Tooltip"]
      },
      {
        "slug": "2022-08-08-F",
        "type": "podcast",
        "dur": "54",
        "title": "S2E28 | David Khourshid on the Current & Future States of Development",
        "url": "https://www.spreaker.com/user/14532324/s2e28-david-khourshid-on-the-current-fut?utm_campaign=episode-title&utm_medium=app&utm_source=widget",
        "desc": "From economic strains and inflation to natural disasters, wars, and political unrest, managing your career in today's uncertain environment requires new levels of patience, planning, & flexibility. Where do you even start given all that has and is going on around us? While total control and predictability are an illusion, we sat down with Nrwl co-founder Jeff Cross to talk about ways in which software engineers can plan, prepare, & position themselves for success today and in the future.",
        "dAdd": "2022-08-08",
        "dSrc": "2022-08-08",
        "srcSite": "Spreaker",
        "srcUrl": "https://spreaker.com",
        "aName": "Angular Experience",
        "aUrl": "https://angular-experience.web.app/episodes",
        "spkrs": ["David Khourshid", "Brooke Avery", "Erik Slack"],
        "tags": []
      },
      {
        "slug": "2022-08-08-G",
        "type": "video",
        "dur": "33",
        "title": "Form Builder in Angular 14 Reactive forms | Form Control vs Form Group vs Form Array",
        "url": "https://www.youtube.com/watch?v=qCmxKuck9NI",
        "desc": "This video explains the concepts for Form Builder & how to define control ,group and array using builder also difference between Form Group ,Form Control & From Array",
        "dAdd": "2022-08-08",
        "dSrc": "2022-08-08",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Nihira Techiees",
        "aUrl": "https://www.youtube.com/c/NihiraTechiees/videos",
        "spkrs": [],
        "tags": ["Forms", "Reactive Forms", "FormBuilder", "FormControl", "FormGroup", "FormArray"]
      },
      {
        "slug": "2022-08-08-H",
        "type": "video",
        "dur": "13",
        "title": "How to implement Bootstrap 5 dashboard page with child page | Angular for beginner and expert",
        "url": "https://www.youtube.com/watch?v=ARNgZREs65I",
        "desc": "This is part 6 of Angular 14 series and in this video have explained about the dashboard layout page design using Bootstrap 5.",
        "dAdd": "2022-08-08",
        "dSrc": "2022-08-08",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Beginner 2 Expert",
        "aUrl": "https://www.youtube.com/c/Beginner2Expert/videos",
        "spkrs": ["Biswajit Jana"],
        "tags": ["Bootstrap"]
      },
      {
        "slug": "2022-08-08-J",
        "type": "video",
        "dur": "22",
        "title": "Nx Angular Microfrontend (Part 2)",
        "url": "https://www.youtube.com/watch?v=gEv4WSDM2Z4",
        "desc": "Learn to quickly create micro front end  application without going in details about its internal implementation. This small tutorial can help you build your first micro frontend application very easily. This has been done via Nx monorepo. With few commands, you will have your micro-frontend ready.",
        "dAdd": "2022-08-08",
        "dSrc": "2022-08-08",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "TheAngularCoder || Gourav",
        "aUrl": "https://www.youtube.com/c/GouravGunjan/videos",
        "spkrs": ["Gourav Gunjan"],
        "tags": ["Nx", "Micro Frontends"]
      },
      {
        "slug": "2022-08-08-K",
        "type": "blog",
        "title": "Angular Basics: Using the HostListener Decorator to Detect Changes for a Specific DOM Element",
        "url": "https://www.telerik.com/blogs/angular-basics-using-hostlistener-decorator-detect-changes-specific-dom-element",
        "desc": "Today we are learning about the host listener decorator in Angular and how we can use it in our workflows.",
        "dAdd": "2022-08-08",
        "dSrc": "2022-08-08",
        "srcSite": "Progress Telerik Blog",
        "srcUrl": "https://www.telerik.com/blogs/web-angular",
        "aName": "Nwose Lotanna Victor",
        "aUrl": "https://www.telerik.com/blogs/author/nwose-lotanna",
        "spkrs": ["Nwose Lotanna Victor"],
        "tags": ["@HostListener"]
      },
      {
        "slug": "2022-08-08-L",
        "type": "blog",
        "title": "Route Guards",
        "url": "https://blog.jonandonicastelo.com/route-guards",
        "desc": "The next explanations are based on this project. To get the most of this article it is recommended to not only read it, but to practice creating a similar project.",
        "dAdd": "2022-08-08",
        "dSrc": "2022-08-08",
        "srcSite": "Hashnode",
        "srcUrl": "https://hashnode.com/n/angular",
        "aName": "Jon Andoni Castelo Melendez",
        "aUrl": "https://hashnode.com/@jonandonicastelo",
        "spkrs": ["Jon Andoni Castelo Melendez"],
        "tags": ["Route Guards", "CanActivate", "CanActivateChild", "CanDeactivate", "CanLoad", "Resolve"]
      },
      {
        "slug": "2022-08-08-M",
        "type": "blog",
        "title": "Having some fun with activity indicators and observables in Angular",
        "url": "https://medium.com/@andre.schouten_ff/having-some-fun-with-activity-indicators-and-observables-in-angular-dcd1c5ae7685",
        "desc": "If you've had some experience in web development and specifically with the Angular framework, you may have already stumbled across the RxJS library and just like me, you've probably seen the benefits of using observables. Especially if you also use a state management library like NgRx or NGXS.",
        "dAdd": "2022-08-08",
        "dSrc": "2022-08-08",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Andre Schouten",
        "aUrl": "https://medium.com/@andre.schouten_ff",
        "spkrs": ["Andre Schouten"],
        "tags": ["RxJS", "Observables"]
      },
      {
        "slug": "2022-08-08-N",
        "type": "blog",
        "title": "Creating CD pipeline to deploy an Angular application",
        "url": "https://mervyn-manilall.medium.com/creating-cd-pipeline-to-deploy-an-angular-application-7c1c5eecad39",
        "desc": "All projects deserve to see the light of the day. The sooner you deploy your web app, the sooner it can be tested, fixed, redeployed and be used. CD pipelines allow you to achieve that in some clicks once everything is set up.",
        "dAdd": "2022-08-08",
        "dSrc": "2022-08-08",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Mervyn Manilall",
        "aUrl": "https://mervyn-manilall.medium.com",
        "spkrs": ["Mervyn Manilall"],
        "tags": ["CI/CD"]
      },
      {
        "slug": "2022-08-08-P",
        "type": "blog",
        "title": "Bitovi ESLint Config: Handpicked Rules to Improve Your Code",
        "url": "https://dev.to/bitovi/bitovi-eslint-config-handpicked-rules-to-improve-your-code-3p83",
        "desc": "Linting is an important step to ensure code quality, and it fits well as an automated process in the development pipeline. Most teams use the default lint configuration provided by their framework, missing opportunities to prevent runtime errors and increase code quality with the extended set of ESLint rules.",
        "dAdd": "2022-08-08",
        "dSrc": "2022-08-08",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Fabio Englert Moutinho",
        "aUrl": "https://dev.to/fabioemoutinho",
        "spkrs": ["Fabio Englert Moutinho"],
        "tags": ["ESLint"]
      },
      {
        "slug": "2022-08-08-Q",
        "type": "video",
        "dur": "14",
        "title": "Angular For Beginners - 17. Template Driven Forms (ngForm)",
        "url": "https://www.youtube.com/watch?v=6gV6_TI85sk",
        "desc": "(photo: Joaquin Sorolla, impressionism, 1908, 'Afternoon at Valencia beach'",
        "dAdd": "2022-08-08",
        "dSrc": "2022-08-08",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Teddy Smith",
        "aUrl": "https://www.youtube.com/c/TeddySmithNC/videos",
        "spkrs": ["Teddy Smith"],
        "tags": ["Forms", "Template Driven Forms"]
      },
      {
        "slug": "2022-08-08-R",
        "type": "blog",
        "title": "Angular dependency injection into the constructor",
        "url": "https://blog.devgenius.io/angular-dependency-injection-de5ce8ec0961",
        "desc": "Better refactor than not to be refactored. Sometimes it is a question of what to prefer: create an instance of the class each time we call the method. Or to declare it once in a constructor.",
        "dAdd": "2022-08-08",
        "dSrc": "2022-08-08",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Aleksei Jegorov",
        "aUrl": "https://medium.com/@alekseijegorov",
        "spkrs": ["Aleksei Jegorov"],
        "tags": ["Dependency Injection"]
      },
      {
        "slug": "2022-08-08-S",
        "type": "video",
        "dur": "9",
        "title": "How to use Ag-Grid in Angular with multiple functionality & feature",
        "url": "https://www.youtube.com/watch?v=xh5DiElEGwA",
        "desc": "How to use Ag-Grid in Angular with multiple functionality: clickevent, editing, filtering, sorting, draging, column, spanning, Pagination with scroll bar",
        "dAdd": "2022-08-08",
        "dSrc": "2022-08-08",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "The Code Planner",
        "aUrl": "https://www.youtube.com/c/TheCodePlanner/videos",
        "spkrs": [],
        "tags": ["AG Grid"]
      },
      {
        "slug": "2022-08-08-T",
        "type": "blog",
        "title": "Angular Pipe Character Counter",
        "url": "https://dev.to/renancferro/angular-pipe-character-counter-1odf",
        "desc": "Have you ever needed a counter to get the number of characters in an input field and show the value in a label below the input, for example!?",
        "dAdd": "2022-08-08",
        "dSrc": "2022-08-08",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Renan C. Ferro",
        "aUrl": "https://dev.to/renancferro",
        "spkrs": ["Renan C. Ferro"],
        "tags": ["Pipes", "Custom"]
      }
    ]
  },
  {
    "date": "2022-08-09",
    "dailyPosts": [
      {
        "slug": "2022-08-09-A",
        "type": "video",
        "dur": "53",
        "title": "Angular V14 Routing Guards Implementation. canActivate, canActivateChild, canDeativate - Angular 14",
        "url": "https://www.youtube.com/watch?v=5IVKapdNPGY",
        "desc": "In this video we will see how to implement angular V14 Routing Guards like canActivate, canDeactivate and CanActivateChild - Angular.",
        "dAdd": "2022-08-09",
        "dSrc": "2022-08-08",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Leela Web Dev",
        "aUrl": "https://www.youtube.com/c/LeelaWebDev/videos",
        "spkrs": ["Leela Narasimha"],
        "tags": ["Routing", "Route Guards", "CanActivate", "CanActivateChild", "CanDeactivate"]
      },
      {
        "slug": "2022-08-09-B",
        "type": "blog",
        "title": "Angular: Binding end to end",
        "url": "https://dev.to/urstrulyvishwak/binding-in-angular-32kd",
        "desc": "Binding creates a live connection between view and model. Angular's change detection algorithm is responsible for keeping the view and model in sync.",
        "dAdd": "2022-08-09",
        "dSrc": "2022-08-09",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Mahesh",
        "aUrl": "https://dev.to/urstrulyvishwak",
        "spkrs": [],
        "tags": ["Data Binding"]
      },
      {
        "slug": "2022-08-09-C",
        "type": "video",
        "dur": "7",
        "title": "What's New in Angular v14 - A Game Changer",
        "url": "https://www.youtube.com/watch?v=DTWrJ_cC2s0",
        "desc": "Angular 14 was released a few weeks ago, and we consider this version a game changer! So we took our time to do a great video on what we consider to be the most relevant features in this new version.",
        "dAdd": "2022-08-09",
        "dSrc": "2022-08-09",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Lucas Paganini",
        "aUrl": "https://www.youtube.com/user/LucasPaganiniDM/videos",
        "spkrs": ["Lucas Paganini"],
        "tags": []
      },
      {
        "slug": "2022-08-09-D",
        "type": "video",
        "dur": "40",
        "title": "Angular 14 & .NET 6 Authorization with JSON Web Tokens (JWT)",
        "url": "https://www.youtube.com/watch?v=_pqNp-YSK8Y",
        "desc": "",
        "dAdd": "2022-08-09",
        "dSrc": "2022-08-09",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Patrick God",
        "aUrl": "https://www.youtube.com/c/PatrickGod/videos",
        "spkrs": [],
        "tags": ["Auth", "JWT"]
      },
      {
        "slug": "2022-08-09-E",
        "type": "blog",
        "title": "Working on Lumberjack v14, the extensible logging library for Angular",
        "url": "https://dev.to/transient-thoughts/working-on-the-version-14-release-of-lumberjack-the-extensible-logging-library-for-angular-4f7p",
        "desc": "When we implemented version 2 of Lumberjack, we used the Angular CLI with customized Angular architect configurations to support workspace library projects, ESLint, Prettier, and Jest.(photo: illustration by DALL-E.)",
        "dAdd": "2022-08-09",
        "dSrc": "2022-08-09",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Lars Gyrup Brink Nielsen",
        "aUrl": "https://dev.to/layzee",
        "spkrs": ["Lars Gyrup Brink Nielsen"],
        "tags": []
      },
      {
        "slug": "2022-08-09-F",
        "type": "video",
        "dur": "16",
        "title": "JSON Server REST API in Angular 14 | load Material UI data table using JSON Server rest API data",
        "url": "https://www.youtube.com/watch?v=SGX0rSYf6ZY",
        "desc": "This video explains below topics\n1, configuration & setup of JSON Server rest API\n2,  Populate Material UI data table using JSON Server rest API data",
        "dAdd": "2022-08-09",
        "dSrc": "2022-08-09",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Nihira Techiees",
        "aUrl": "https://www.youtube.com/c/NihiraTechiees/videos",
        "spkrs": [],
        "tags": ["JSON"]
      },
      {
        "slug": "2022-08-09-G",
        "type": "blog",
        "title": "Introduction To Angular Services",
        "url": "https://lorenzozar.hashnode.dev/introduction-to-angular-services",
        "desc": "As described in angular.io, 'A service is typically a class with a narrow, well-defined purpose'. In other words, we can see services as a piece of code that does something very specific.",
        "dAdd": "2022-08-09",
        "dSrc": "2022-08-09",
        "srcSite": "Hashnode",
        "srcUrl": "https://hashnode.com/n/angular",
        "aName": "Lorenzo Zarantonello",
        "aUrl": "https://hashnode.com/@lorenzozar",
        "spkrs": ["Lorenzo Zarantonello"],
        "tags": ["Services"]
      },
      {
        "slug": "2022-08-09-H",
        "type": "blog",
        "title": "Angular: Top meetups in July 2022 (full list)",
        "url": "https://dev.to/meetupfeedio/angular-top-meetups-in-july-2022-full-list-57hm",
        "desc": "Angular meetups were in the spotlight last month. Let's find out what the 6 most popular tech talks were in July. Dive right into components, accessibility, Kendo UI, JSON, typed forms, performance and concurrent mode.",
        "dAdd": "2022-08-09",
        "dSrc": "2022-08-09",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "MeetupFeed",
        "aUrl": "https://dev.to/meetupfeedio",
        "spkrs": [],
        "tags": []
      }
    ]
  },
  {
    "date": "2022-08-10",
    "dailyPosts": [
      {
        "slug": "2022-08-10-A",
        "type": "blog",
        "title": "Google reCAPTCHA v3 with Spring Webflux and Angular",
        "url": "https://boottechnologies-ci.medium.com/google-recaptcha-v3-with-spring-webflux-and-angular-893e01c76113",
        "desc": "Welcome, In this story, you will learn about how to implement Google reCAPTCHA v3 using Spring Webflux and Angular.",
        "dAdd": "2022-08-10",
        "dSrc": "2022-08-08",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Eric Anicet",
        "aUrl": "https://boottechnologies-ci.medium.com",
        "spkrs": ["Eric Anicet"],
        "tags": ["reCAPTCHA"]
      },
      {
        "slug": "2022-08-10-B",
        "type": "blog",
        "title": "Lazy Load Services in Angular",
        "url": "https://netbasal.com/lazy-load-services-in-angular-bcf8eae406c8",
        "desc": "Imagine we have a large service with many dependencies and logic. It should only be used when a user performs a specific action, such as clicking a button.",
        "dAdd": "2022-08-10",
        "dSrc": "2022-08-09",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Netanel Basal",
        "aUrl": "https://netbasal.medium.com",
        "spkrs": ["Netanel Basal"],
        "tags": ["Lazy Loading", "Services"]
      },
      {
        "slug": "2022-08-10-C",
        "type": "blog",
        "title": "Our Angular i18n workflow",
        "url": "https://robert-leitl.medium.com/our-angular-i18n-workflow-7594e7d912f2",
        "desc": "At atuin.media, we are currently working on a large business application for a customer that operates in several European countries. Therefore, internationalization was a key requirement. Since our preferred framework is Angular and the client wanted a standardized translation process, we decided to use Angular's own internationalization framework (i18n) along with the XLIFF localization standard file format.",
        "dAdd": "2022-08-10",
        "dSrc": "2022-08-09",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Robert Leitl",
        "aUrl": "https://robert-leitl.medium.com",
        "spkrs": ["Robert Leitl"],
        "tags": ["Internationalization"]
      },
      {
        "slug": "2022-08-10-D",
        "type": "blog",
        "title": "Building a mobile app with Amazon Web Services and Ionic",
        "url": "https://medium.com/@corinneroosen/building-a-mobile-app-with-amazon-webservices-and-ionic-8aae45b4601c",
        "desc": "We are going to make a login page, and a page with a list of users.\n\nI am going to build an app backend based on AWS, where we will have a DynamoDB, Lambda functions to talk to the DB and an API Gateway to make it all happen.\n(photo: by Minh Pham on Unsplash)",
        "dAdd": "2022-08-10",
        "dSrc": "2022-08-09",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Corinne Roosen",
        "aUrl": "https://medium.com/@corinneroosen",
        "spkrs": ["Corinne Roosen"],
        "tags": ["Ionic", "AWS"]
      },
      {
        "slug": "2022-08-10-E",
        "type": "blog",
        "title": "Subscriptions & practices to avoid in Angular",
        "url": "https://medium.com/@ConorJonOReilly/subscriptions-practices-to-avoid-in-angular-4eefa0316727",
        "desc": "I strongly dislike articles that are titled, 'YOU NEED TO STOP DOING THIS', 'REAL DEVELOPERS DO THIS' or 'X IS DEAD, MOVE ONTO THIS'. It's exhausting, annoying, and straight up not true most of the time.",
        "dAdd": "2022-08-10",
        "dSrc": "2022-08-09",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Conor O'Reilly",
        "aUrl": "https://medium.com/@ConorJonOReilly",
        "spkrs": ["Conor O'Reilly"],
        "tags": ["RxJS", "Subscriptions", "takeUntil()", "take()", "Subject", "BehaviorSubject", "Async Pipe"]
      },
      {
        "slug": "2022-08-10-F",
        "type": "video",
        "dur": "22",
        "title": "How to dynamically add controls to the HTML form using reactive forms | Angular | Learn Smart Coding",
        "url": "https://www.youtube.com/watch?v=d5MOWbJBFCk",
        "desc": "In this video, we will see how to dynamically add controls to the HTML form using reactive forms. I will walk you through it from scratch and show you how easy to implement dynamically adding controls to the HTML form using reactive forms.",
        "dAdd": "2022-08-10",
        "dSrc": "2022-08-09",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Learn Smart Coding",
        "aUrl": "https://www.youtube.com/channel/UCKUxSY2xp12QiP3c60sOc-g/videos",
        "spkrs": [],
        "tags": ["Forms", "Reactive Forms", "Dynamic"]
      },
      {
        "slug": "2022-08-10-G",
        "type": "video",
        "dur": "39",
        "title": "Angular V14 Send Dynamic Data using Resolve Guard to Routing Component - Angular 14",
        "url": "https://www.youtube.com/watch?v=c4iSmX6kwoU",
        "desc": "In this video we will see how to send the static and dynamic data using Resolve Guard to the routing component - Angular V14",
        "dAdd": "2022-08-10",
        "dSrc": "2022-08-09",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Leela Web Dev",
        "aUrl": "https://www.youtube.com/c/LeelaWebDev/videos",
        "spkrs": ["Leela Narasimha"],
        "tags": ["Route Guards", "Resolve", "Routing"]
      },
      {
        "slug": "2022-08-10-H",
        "type": "blog",
        "title": "Choosing a State Management Library for Progressive Reactivity in Angular",
        "url": "https://dev.to/this-is-angular/choosing-a-state-management-library-for-progressive-reactivity-in-angular-19j8",
        "desc": "It's finally time to pick a state management library. I implemented my colors app in each state management library to see which one best supports the 'progressive reactivity' pattern described in this series.",
        "dAdd": "2022-08-10",
        "dSrc": "2022-08-10",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Mike Pearson",
        "aUrl": "https://dev.to/mfp22",
        "spkrs": ["Mike Pearson"],
        "tags": ["State Management", "NgRx"]
      },
      {
        "slug": "2022-08-10-J",
        "type": "video",
        "dur": "5",
        "title": "#7.2 - Guarding against null or undefined using *ngIf - Structural Directive - Angular Series",
        "url": "https://www.youtube.com/watch?v=9ALcdljm_1E",
        "desc": "I will demonstrate how an HTML element can be guarded from display when its content is undefined.",
        "dAdd": "2022-08-10",
        "dSrc": "2022-08-10",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "SIMPL Academy",
        "aUrl": "https://www.youtube.com/channel/UCGB1Qg0oq4Ar4h6rzW0vzdA/videos",
        "spkrs": [],
        "tags": ["Directives", "*ngIf"]
      },
      {
        "slug": "2022-08-10-K",
        "type": "video",
        "dur": "118",
        "title": "Angular(v14) JWT Access Token Authentication & Refresh Token",
        "url": "https://www.youtube.com/watch?v=oqSLkbfLWQI",
        "desc": "",
        "dAdd": "2022-08-10",
        "dSrc": "2022-08-10",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Naveen Bommidi Tech Seeker",
        "aUrl": "https://www.youtube.com/c/NaveenTechSeeker/videos",
        "spkrs": ["Naveen Bommidi"],
        "tags": ["JWT", "Auth"]
      },
      {
        "slug": "2022-08-10-L",
        "type": "video",
        "dur": "9",
        "title": "Why does Angular always complain about null values?!",
        "url": "https://www.youtube.com/watch?v=p3UvEX_B8ks",
        "desc": "In this video, we take a look at why enabling strict mode in TypeScript causes so many null or undefined errors in Angular and what to do about it.",
        "dAdd": "2022-08-10",
        "dSrc": "2022-08-10",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Joshua Morony",
        "aUrl": "https://www.youtube.com/c/CreativeDeveloper/videos",
        "spkrs": ["Joshua Morony"],
        "tags": ["TypeScript", "Errors", "ESLint"]
      },
      {
        "slug": "2022-08-10-M",
        "type": "video",
        "dur": "7",
        "title": "Angular For Beginners - 19. Checkboxes (Template Driven Forms)",
        "url": "https://www.youtube.com/watch?v=ELS_QdbqF_Q",
        "desc": "",
        "dAdd": "2022-08-10",
        "dSrc": "2022-08-10",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Teddy Smith",
        "aUrl": "https://www.youtube.com/c/TeddySmithNC/videos",
        "spkrs": ["Teddy Smith"],
        "tags": ["Template Driven Forms"]
      },
      {
        "slug": "2022-08-10-N",
        "type": "release",
        "title": "Angular Release: v14.2.0-next.1",
        "url": "https://github.com/angular/angular/releases/tag/14.2.0-next.1",
        "desc": "",
        "dAdd": "2022-08-10",
        "dSrc": "2022-08-10",
        "srcSite": "GitHub Angular",
        "srcUrl": "https://github.com/angular/angular/releases",
        "aName": "Dylan Hunn",
        "aUrl": "https://github.com/dylhunn",
        "spkrs": [],
        "tags": ["Release"]
      },
      {
        "slug": "2022-08-10-P",
        "type": "release",
        "title": "Angular Release: v14.1.2 ",
        "url": "https://github.com/angular/angular/releases/tag/14.1.2",
        "desc": "",
        "dAdd": "2022-08-10",
        "dSrc": "2022-08-10",
        "srcSite": "GitHub Angular",
        "srcUrl": "https://github.com/angular/angular/releases",
        "aName": "Dylan Hunn",
        "aUrl": "https://github.com/dylhunn",
        "spkrs": [],
        "tags": ["Release"]
      },
      {
        "slug": "2022-08-10-Q",
        "type": "blog",
        "title": "The State of end-to-end testing with Angular",
        "url": "https://blog.angular.io/the-state-of-end-to-end-testing-with-angular-d175f751cb9c",
        "desc": "In the Angular v12 release blog post we announced plans to investigate the future of Protractor.\n\nBased on community feedback via the RFC process, we've decided to deprecate Protractor, while working with the community to find a long term support option for active projects that wish to continue using Protractor.",
        "dAdd": "2022-08-10",
        "dSrc": "2022-08-10",
        "srcSite": "Angular Blog",
        "srcUrl": "https://blog.angular.io",
        "aName": "Mark Thompson",
        "aUrl": "https://medium.com/@markathompson",
        "spkrs": ["Mark Thompson"],
        "tags": ["Protractor"]
      }
    ]
  },
  {
    "date": "2022-08-11",
    "dailyPosts": [
      {
        "slug": "2022-08-11-A",
        "type": "blog",
        "title": "The observables, I promise to callback later",
        "url": "https://medium.com/herodevs/the-observables-i-promise-to-callback-later-1ec28b8bc03a",
        "desc": "Get to know observables and say hasta la vista promises.",
        "dAdd": "2022-08-11",
        "dSrc": "2022-08-10",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Eduardo Roth",
        "aUrl": "https://medium.com/@eduardoRothHD",
        "spkrs": ["Eduardo Roth"],
        "tags": ["Observables"]
      },
      {
        "slug": "2022-08-11-B",
        "type": "video",
        "dur": "32",
        "title": "Angular Essentials 2 - Modules, Material and Mistakes",
        "url": "https://www.youtube.com/watch?v=Ttc9A2zVTzE",
        "desc": "In part 2, we start learning how Angular works. We discuss the module system and its benefits and potential issues. We discuss 2-way binding and what interpolation is in Angular. We then get into some mis-adventures with Material and an Angular mismatch. We end with a discussion of emmett and a serious need to finish styling out application.",
        "dAdd": "2022-08-11",
        "dSrc": "2022-08-10",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Jason Warner",
        "aUrl": "https://www.youtube.com/channel/UCzF8hdwni3db3UZ7P3uKBkQ/videos",
        "spkrs": ["Jason Warner"],
        "tags": ["Modules", "Angular Material"]
      },
      {
        "slug": "2022-08-11-C",
        "type": "video",
        "dur": "72",
        "title": "Day 29 Form - Reactive Form",
        "url": "https://www.youtube.com/watch?v=hVCt_WOarLM",
        "desc": "Angular Complete Course: In this playlist, I will explain to you everything you need to get started with the Angular framework. Angular is a very popular framework used to create single-page applications (SPA). This video will cover an Angular Project in English",
        "dAdd": "2022-08-11",
        "dSrc": "2022-08-11",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Livepure Techonlogy",
        "aUrl": "https://www.youtube.com/channel/UCtu5ZE6cdEBx-7eZGCE4P3Q/videos",
        "spkrs": [],
        "tags": ["Forms", "Reactive Forms"]
      },
      {
        "slug": "2022-08-11-D",
        "type": "blog",
        "title": "Working With Multiple Projects In Angular",
        "url": "https://www.danywalls.com/working-with-multiple-projects-in-angular",
        "desc": "Using The Power Of Angular Workspaces\n(photo: by Markus Spiske on Unsplash)",
        "dAdd": "2022-08-11",
        "dSrc": "2022-08-11",
        "srcSite": "Hashnode",
        "srcUrl": "https://hashnode.com/n/angular",
        "aName": "Dany Paredes",
        "aUrl": "https://hashnode.com/@danywalls4",
        "spkrs": ["Dany Paredes"],
        "tags": ["Workspaces"]
      },
      {
        "slug": "2022-08-11-E",
        "type": "podcast",
        "dur": "42",
        "title": "Episode 196: Developer Experience and Tools with Brian Holt",
        "url": "https://webrush.io/episodes/episode-196-developer-experience-and-tools-with-brian-holt",
        "desc": "Brian Holt talks with us about building developer tools and developer experience, convention over configuration, what the hardest part is to get right, and how to know what users really want?",
        "dAdd": "2022-08-11",
        "dSrc": "2022-08-11",
        "srcSite": "Web Rush",
        "srcUrl": "https://webrush.io",
        "aName": "Brian Holt",
        "aUrl": "https://twitter.com/holtbt",
        "spkrs": ["Brian Holt"],
        "tags": []
      },
      {
        "slug": "2022-08-11-F",
        "type": "video",
        "dur": "8",
        "title": "Angular Material #54 - CDK Text Field",
        "url": "https://www.youtube.com/watch?v=-tkoE-b9Z1c",
        "desc": "Angular Material is a UI Component-Based Library for Angular, and through this series, we will take a look into each feature that Angular Material has to offer.",
        "dAdd": "2022-08-11",
        "dSrc": "2022-08-11",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Omerko",
        "aUrl": "https://www.youtube.com/c/Omerko/videos",
        "spkrs": ["Stefan Omerovic"],
        "tags": ["Angular Material", "Angular CDK"]
      },
      {
        "slug": "2022-08-11-G",
        "type": "video",
        "dur": "9",
        "title": "Angular Can-Activate Guard",
        "url": "https://www.youtube.com/watch?v=XyF8gJNx_io",
        "desc": "This video covers most of the topic related to Angular guards and How to use Angular can-activate guard in you Angular web application.",
        "dAdd": "2022-08-11",
        "dSrc": "2022-08-11",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Technology_World_2022",
        "aUrl": "https://www.youtube.com/channel/UCsULrMdqSGh32SJJRDIGx5g/videos",
        "spkrs": [],
        "tags": ["Route Guards", "CanActivate"]
      },
      {
        "slug": "2022-08-11-H",
        "type": "blog",
        "title": "Infinite Scrolling in Angular",
        "url": "https://dev.to/asayerio_techblog/infinite-scrolling-in-angular-1nna",
        "desc": "You're definitely familiar with endless scroll if you've ever had to navigate through lengthy lists in a web application. A frequent solution to the issue of providing a lengthy list to your consumers at the right time is infinite scrolling. In this article, we'll use the ngx-infinite-scroll package to add an infinite scroll to Angular.",
        "dAdd": "2022-08-11",
        "dSrc": "2022-08-11",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "OpenReplay Tech Blog",
        "aUrl": "https://dev.to/asayerio_techblog",
        "spkrs": [],
        "tags": ["Scrolling"]
      }
    ]
  },
  {
    "date": "2022-08-12",
    "dailyPosts": [
      {
        "slug": "2022-08-12-A",
        "type": "blog",
        "title": "Add Keyboard Shortcuts to Your Angular App",
        "url": "https://netbasal.com/add-keyboard-shortcuts-to-your-angular-app-9bf2e89862b3",
        "desc": "Angular provides a special syntax for registering keyboard events. A keyboard event can be bound to a specific key or code. It's assumed by default that you'll use the key field on the keyboard event.",
        "dAdd": "2022-08-12",
        "dSrc": "2022-08-10",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Netanel Basal",
        "aUrl": "https://netbasal.medium.com",
        "spkrs": ["Netanel Basal"],
        "tags": []
      },
      {
        "slug": "2022-08-12-B",
        "type": "blog",
        "title": "Google Recaptcha implementation within minutes in your Angular project",
        "url": "https://davutgurbuz.medium.com/google-recaptcha-implementation-within-minutes-for-angular-developers-ca4cb5a1e3cc",
        "desc": "If you haven't tried Google's captcha service yet, let's see how we can implement it within minutes using ngx-recaptcha in an Angular project.",
        "dAdd": "2022-08-12",
        "dSrc": "2022-08-10",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Davut Gurbuz",
        "aUrl": "https://davutgurbuz.medium.com",
        "spkrs": ["Davut Gurbuz"],
        "tags": ["reCAPTCHA"]
      },
      {
        "slug": "2022-08-12-C",
        "type": "blog",
        "title": "Defining your own theme in Angular Material",
        "url": "https://levelup.gitconnected.com/defining-your-own-theme-in-angular-material-8a4a6ffad400",
        "desc": "Having your own theme in your web application is essential to make it look professional. Imagine using the default color themes provided from the framework you are using, which everyone is using, in your application. Especially when the theme colors are so prominent that anyone who has used the framework before can spot it with one look.",
        "dAdd": "2022-08-12",
        "dSrc": "2022-08-11",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Dennis",
        "aUrl": "https://medium.com/@thecodinganalyst",
        "spkrs": [],
        "tags": ["Angular Material", "Theming"]
      },
      {
        "slug": "2022-08-12-D",
        "type": "blog",
        "title": "Develop an Online Shop with Angular 11 and .Net Core 5 - Part 17: Testing in Angular",
        "url": "https://javascript.plainenglish.io/develop-an-online-shop-with-angular-11-and-net-core-5-9d235cb06638",
        "desc": "In this article, we will introduce unit testing to our web application. Unit testing is essential during development, as it make us fell more assured that our app works as expected.\n(photo: by Bruno Kelzer on Unsplash)",
        "dAdd": "2022-08-12",
        "dSrc": "2022-08-11",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Harry T",
        "aUrl": "https://medium.com/@harry.t",
        "spkrs": [],
        "tags": ["Testing"]
      },
      {
        "slug": "2022-08-12-E",
        "type": "blog",
        "title": "Angular Standards And Best Practices",
        "url": "https://medium.com/@roshanidilhara7/angular-standards-and-best-practices-4c523c037587",
        "desc": "I've been using Angular for more than a year for developing applications. This article outlines few of the standards and best practices of Angular which I could use and experience when developing the applications.",
        "dAdd": "2022-08-12",
        "dSrc": "2022-08-11",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Roshanidilhara",
        "aUrl": "https://medium.com/@roshanidilhara7",
        "spkrs": [],
        "tags": []
      },
      {
        "slug": "2022-08-12-F",
        "type": "blog",
        "title": "Angular Sharing Data from Parent to Child Using @Input and @Output Directive (Learn It In 20 Steps - MrYenagandula)",
        "url": "https://srisad95.medium.com/angular-sharing-data-from-parent-to-child-using-input-and-output-directive-learn-it-in-20-steps-de930d45f3b8",
        "desc": "Please find the below steps to implement to share data between parent-to-child components using @input and @Output Directive in angular application",
        "dAdd": "2022-08-12",
        "dSrc": "2022-08-11",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Srikanth Y",
        "aUrl": "https://mryenagandula.medium.com",
        "spkrs": [],
        "tags": ["Data Transfer", "@Output", "@Input"]
      },
      {
        "slug": "2022-08-12-G",
        "type": "blog",
        "title": "Setting up BitBucket pipeline for Angular on Linux Servers | Abbas Irekeola",
        "url": "https://medium.com/@devbazz/setting-up-bitbucket-pipeline-for-angular-on-linux-servers-abbas-irekeola-c1ee5137793f",
        "desc": "Setting up Bitbucket pipeline for Angular on Linux Servers; Today, we'll be setting up bitbucket pipeline with Angular. BitBucket Pipelines brings continuous integration and delivery to BitBucket Cloud, empowering teams to build, test, and deploy their code within BitBucket.",
        "dAdd": "2022-08-12",
        "dSrc": "2022-08-11",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Abbas Abiodun Irekeola",
        "aUrl": "https://medium.com/@devbazz",
        "spkrs": ["Abbas Irekeola"],
        "tags": [""]
      },
      {
        "slug": "2022-08-12-H",
        "type": "blog",
        "title": "Angular app dark mode with CSS Variables",
        "url": "https://medium.com/@yaroslav.stetsko/angular-app-dark-mode-with-css-variables-6810d5122f26",
        "desc": "In this app we use:\n - CSS Variables\n - Prefers-color-scheme feature of Media Queries Level 5\n - RendererFactory\n - localStorage",
        "dAdd": "2022-08-12",
        "dSrc": "2022-08-11",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Yar Stetsko",
        "aUrl": "https://medium.com/@yaroslav.stetsko",
        "spkrs": ["Yar Stetsko"],
        "tags": ["Theming"]
      },
      {
        "slug": "2022-08-12-J",
        "type": "video",
        "dur": "56",
        "title": "Angular 14 RxJS Observables. Template Driven Forms in Angular - Angular V14",
        "url": "https://www.youtube.com/watch?v=MgR6oJHaliA",
        "desc": " In this video we will see about the introduction of RxJS observable and the template driven forms in Angular. ",
        "dAdd": "2022-08-12",
        "dSrc": "2022-08-11",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Leela Web Dev",
        "aUrl": "https://www.youtube.com/c/LeelaWebDev/videos",
        "spkrs": ["Leela Narasimha"],
        "tags": ["RxJS", "Observables", "Forms", "Template Driven Forms"]
      },
      {
        "slug": "2022-08-12-K",
        "type": "video",
        "dur": "12",
        "title": "Angular Can Activate Child routing Guard",
        "url": "https://www.youtube.com/watch?v=aT20NQLDWR8",
        "desc": "This Video covers more of Angular Can Activate Child routing Guard with live demo",
        "dAdd": "2022-08-12",
        "dSrc": "2022-08-12",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Technology_World_2022",
        "aUrl": "https://www.youtube.com/channel/UCsULrMdqSGh32SJJRDIGx5g/videos",
        "spkrs": [],
        "tags": ["Routing", "Route Guards", "CanActivateChild"]
      },
      {
        "slug": "2022-08-12-L",
        "type": "blog",
        "title": "Angular: Content Projection end to end",
        "url": "https://dev.to/urstrulyvishwak/angular-content-projection-end-to-end-2mid",
        "desc": "Content projection is a pattern in which you insert the content that you want to show inside another component. ng-content></ng-content> - responsible to project content inside another component. It is just a placeholder and will be replaced by actual projected content.",
        "dAdd": "2022-08-12",
        "dSrc": "2022-08-12",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Mahesh",
        "aUrl": "https://dev.to/urstrulyvishwak",
        "spkrs": [],
        "tags": ["Content Projection", "<ng-content>"]
      },
      {
        "slug": "2022-08-12-M",
        "type": "video",
        "dur": "12",
        "title": "Angular - Custom Two-Way Binding",
        "url": "https://www.youtube.com/watch?v=ObdTz9k2IsM",
        "desc": "Most Angular developers have done two-way binding using [(ngModel)] on standard HTML elements. Here's how to do the same thing with our own custom components.",
        "dAdd": "2022-08-12",
        "dSrc": "2022-08-12",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Coding Tutorials",
        "aUrl": "https://www.youtube.com/c/CodingTutorialsAreGo/videos",
        "spkrs": ["Jasper Kent"],
        "tags": []
      },
      {
        "slug": "2022-08-12-N",
        "type": "video",
        "dur": "36",
        "title": "Dependency Injection in Angular",
        "url": "https://www.youtube.com/watch?v=89qe_WCJZdA",
        "desc": "This session is about addressing dependencies of angular components, services etc. So that loosely coupled system can be developed.",
        "dAdd": "2022-08-12",
        "dSrc": "2022-08-12",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Knoldus Inc.",
        "aUrl": "https://www.youtube.com/c/Knoldus/videos",
        "spkrs": [],
        "tags": ["Dependency Injection"]
      },
      {
        "slug": "2022-08-12-P",
        "type": "video",
        "dur": "15",
        "title": "How to create custom icons | Angular",
        "url": "https://www.youtube.com/watch?v=OP7IdmB9Dlg",
        "desc": "Hi, thanks for watching our video about Angular tutorial. In this video we'll walk you through importing Angular Material, and create custom mat icons",
        "dAdd": "2022-08-12",
        "dSrc": "2022-08-12",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Ancode",
        "aUrl": "https://www.youtube.com/c/Ancode2/videos",
        "spkrs": [],
        "tags": ["Angular Material"]
      },
      {
        "slug": "2022-08-12-Q",
        "type": "blog",
        "title": "Dynamic translations in Angular made possible",
        "url": "https://dev.to/gin_mitch/dynamic-translations-in-angular-made-possible-525n",
        "desc": "A practical guide to implement lazy-loaded translations. If you have ever dealt with internationalization (or 'i18n' for short) in Angular or is about to implement it, you may stick with the official guide which is awesome, use third-party packages that might be hard to debug or choose an alternative path which I will describe below.",
        "dAdd": "2022-08-12",
        "dSrc": "2022-08-12",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Michael M",
        "aUrl": "https://dev.to/gin_mitch",
        "spkrs": [],
        "tags": []
      }
    ]
  },
  {
    "date": "2022-08-13",
    "dailyPosts": [
      {
        "slug": "2022-08-13-A",
        "type": "blog",
        "title": "Translations for Angular Fundamental Components",
        "url": "https://medium.com/fundamental-library/translations-for-angular-fundamental-components-1ba6bb5061e0",
        "desc": "We've recently updated the way we handle international translations in the Angular Fundamental library, unifying the approach across each package, and making it easy to understand and use. Languages can be set app-wide, or individually per-component.",
        "dAdd": "2022-08-13",
        "dSrc": "2022-08-12",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Mike O'Donnell",
        "aUrl": "https://medium.com/@mike_odonnell",
        "spkrs": ["Mike O'Donnell"],
        "tags": ["Internationalization"]
      },
      {
        "slug": "2022-08-13-B",
        "type": "blog",
        "title": "Angular Loading Data Based On Selection Change (Learn It In 22 Steps- MrYenagandula)",
        "url": "https://srisad95.medium.com/angular-loading-data-based-on-selection-change-learn-it-in-23-steps-mryenagandula-369aaa6bef4",
        "desc": "Please find the below steps to implement loading data based on the selection change event in the Angular application",
        "dAdd": "2022-08-13",
        "dSrc": "2022-08-12",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Srikanth Y",
        "aUrl": "https://mryenagandula.medium.com",
        "spkrs": [],
        "tags": ["Forms"]
      },
      {
        "slug": "2022-08-13-C",
        "type": "video",
        "dur": "35",
        "title": "Angular 14 Reactive Driven Forms. Form Group, Form Array, adding dynamic form controls - Angular V14",
        "url": "https://www.youtube.com/watch?v=qTjppI2dRUU",
        "desc": " In this video we will see learn about the angular 14 reactive driven forms. We will see about the form group, form array and also adding dynamic form controls - Angular 14",
        "dAdd": "2022-08-13",
        "dSrc": "2022-08-12",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Leela Web Dev",
        "aUrl": "https://www.youtube.com/c/LeelaWebDev/videos",
        "spkrs": ["Leela Narasimha"],
        "tags": ["Forms", "Reactive Forms", "FormGroup", "FormArray", "Dynamic", "FormControl"]
      },
      {
        "slug": "2022-08-13-D",
        "type": "video",
        "dur": "19",
        "title": "Angular App Collaboration | Node.JS in Stackblitz | Part 1 | Esther White",
        "url": "https://www.youtube.com/watch?v=uCGPkFtw8N4",
        "desc": "In this video me and Juan are collaborating on creating an Angular app, - started as a Node.JS project using StackBlitz, and pushed it to github. Those were just the first steps and we are planning on making some follow-up videos growing the app.",
        "dAdd": "2022-08-13",
        "dSrc": "2022-08-13",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Esther White",
        "aUrl": "https://www.youtube.com/c/EsteeCodes/videos",
        "spkrs": ["Esther White"],
        "tags": []
      },
      {
        "slug": "2022-08-13-E",
        "type": "blog",
        "title": "Custom Error Class in Angular 12+",
        "url": "https://dev.to/bl4ckst0n3/custom-error-class-in-angular-12-l3g",
        "desc": "How to create custom error class in Angular? Sometimes you don't want to use the default error class already exists so, in these times you need to write your own error class. To do that you should follow several steps and we are going to investigate all step by step.",
        "dAdd": "2022-08-13",
        "dSrc": "2022-08-13",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Enes Karatas",
        "aUrl": "https://dev.to/bl4ckst0n3",
        "spkrs": ["Enes Karatas"],
        "tags": ["Errors"]
      },
      {
        "slug": "2022-08-13-F",
        "type": "video",
        "dur": "14",
        "title": "Angular custom pipe with live example | Why do we need to create custom pipe | Angular for expert",
        "url": "https://www.youtube.com/watch?v=tDTTgssz8JI",
        "desc": "",
        "dAdd": "2022-08-13",
        "dSrc": "2022-08-13",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Beginner 2 Expert",
        "aUrl": "https://www.youtube.com/c/Beginner2Expert/videos",
        "spkrs": ["Biswajit Jana"],
        "tags": ["Pipes", "Custom"]
      },
      {
        "slug": "2022-08-13-G",
        "type": "video",
        "dur": "22",
        "title": "Angular template driven form",
        "url": "https://www.youtube.com/watch?v=uUaZzALTn7o",
        "desc": "Template driven form in Angular. Validation messages in Angular template driven form.",
        "dAdd": "2022-08-13",
        "dSrc": "2022-08-13",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Hike Coding Knowledge",
        "aUrl": "https://www.youtube.com/user/rajupaul71/videos",
        "spkrs": [],
        "tags": ["Forms", "Template Driven Forms", "Validation"]
      },
      {
        "slug": "2022-08-13-H",
        "type": "video",
        "dur": "96",
        "title": "Angular Community Meetup | July 26th, 2022 | Varun Vachhar, Craig Shearer, Chau Tran",
        "url": "https://www.youtube.com/watch?v=q8wOhfc49UE",
        "desc": "This month's Angular Community Meetup featured:\nVarun Vachhar - Testing component interactions with Storybook\nCraig Shearer - Super-Productive Angular Forms with Formly\nChau Tran - Declarative THREE.js in Angular",
        "dAdd": "2022-08-13",
        "dSrc": "2022-08-13",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Angular Community Meetup",
        "aUrl": "https://www.youtube.com/channel/UCvzHWtPcYjtEKe3CUU9JLtQ/videos",
        "spkrs": ["Varun Vachhar", "Craig Shearer", "Chau Tran"],
        "tags": ["Testing", "Storybook", "Forms"]
      },
      {
        "slug": "2022-08-13-J",
        "type": "video",
        "dur": "4",
        "title": "RxJS concatMap() - Handle Every Value in an Observable IN ORDER",
        "url": "https://www.youtube.com/watch?v=czf4Bh8eNPA",
        "desc": "Senior Enterprise Software Engineer, Nick Landkamer shows how to use 'concatMap()' to transform and handle each value of the source observable stream in order. Learn how to use it, things to look out for, and when 'concatMap()' may not be the correct operator for your code.",
        "dAdd": "2022-08-13",
        "dSrc": "2022-08-13",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Briebug",
        "aUrl": "https://www.youtube.com/c/Briebugsoftwaresolutions/videos",
        "spkrs": ["Nick Landkamer"],
        "tags": ["RxJS", "concat()"]
      },
      {
        "slug": "2022-08-13-K",
        "type": "blog",
        "title": "Angular material Datetime picker",
        "url": "https://blog.rajasekar.me/angular-material-datetime-picker",
        "desc": "We have few datetime pickers available for Angular and one of them is Angular Material Datetime picker which is easy to use and having good UI/UX. So we will see how to integrate them in Angular.",
        "dAdd": "2022-08-13",
        "dSrc": "2022-08-13",
        "srcSite": "Hashnode",
        "srcUrl": "https://hashnode.com/n/angular",
        "aName": "Rajasekar S",
        "aUrl": "https://blog.rajasekar.me",
        "spkrs": [],
        "tags": ["Angular Material", "Datepicker"]
      },
      {
        "slug": "2022-08-13-L",
        "type": "video",
        "dur": "54",
        "title": "How to Create a Tic Tac Toe Game - Angular Tutorial for Beginners",
        "url": "https://www.youtube.com/watch?v=GIKIvTmbC3Q",
        "desc": "",
        "dAdd": "2022-08-13",
        "dSrc": "2022-08-13",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "AhmadCodes",
        "aUrl": "https://www.youtube.com/channel/UChCFeeyBW31iEuyCXyCgfhQ/videos",
        "spkrs": [],
        "tags": []
      }
    ]
  },
  {
    "date": "2022-08-14",
    "dailyPosts": [
      {
        "slug": "2022-08-14-A",
        "type": "blog",
        "title": "How to Preserve SPA route path in the browser using AWS CloudFront",
        "url": "https://awstip.com/how-to-preserve-spa-route-path-in-the-browser-using-aws-cloudfront-51983a5519ee",
        "desc": "The other day I noticed a very irritating behavior on my personal website that I built using Angular. When I type in my domain name in the browser URL bar.  I get redirected to elbanhawy.com/home and can see my website homepage load. That's not the annoying behavior, that the expected part. What I found out by accident was that if I tried to reload that page or enter a specific path on my website like elbanhawy.com/blog I get an Access Denied response from AWS!\n(photo: by Jonathon Young on Unsplash)",
        "dAdd": "2022-08-14",
        "dSrc": "2022-08-12",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Adham El Banhawy",
        "aUrl": "https://banhawy.medium.com",
        "spkrs": ["Adham El Banhawy"],
        "tags": ["SPA", "Routing"]
      },
      {
        "slug": "2022-08-14-B",
        "type": "blog",
        "title": "Angular: Star rating with no external libraries",
        "url": "https://dev.to/urstrulyvishwak/star-rating-with-no-external-libraries-in-angular-1lp5",
        "desc": "It is a very simple and very much needed small component required in every other blog to rate the services provided. Mostly, developers want to use some external start-rating libraries to show much styled and very interactive stars. Though, We can also create such stylistic stars using native JS and CSS support.",
        "dAdd": "2022-08-14",
        "dSrc": "2022-08-13",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Mahesh",
        "aUrl": "https://dev.to/urstrulyvishwak",
        "spkrs": [],
        "tags": []
      },
      {
        "slug": "2022-08-14-C",
        "type": "video",
        "dur": "23",
        "title": "Angular 14 Pipes. Create Custom Pipe to filter the data from the search string - Angular 14",
        "url": "https://www.youtube.com/watch?v=_Dj-58f-w8c",
        "desc": "In this video we will see about the Angular 14 pipes. Create a custom pipe to filter the data from the search data in Angular 14",
        "dAdd": "2022-08-14",
        "dSrc": "2022-08-13",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Leela Web Dev",
        "aUrl": "https://www.youtube.com/c/LeelaWebDev/videos",
        "spkrs": ["Leela Narasimha"],
        "tags": ["Pipes", "Custom"]
      },
      {
        "slug": "2022-08-14-D",
        "type": "video",
        "dur": "80",
        "title": "Angular 14 Reactive Forms Pipes Angular",
        "url": "https://www.youtube.com/watch?v=LRFzhJVaM_4",
        "desc": "",
        "dAdd": "2022-08-14",
        "dSrc": "2022-08-14",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Code With Fun NKJ M",
        "aUrl": "https://www.youtube.com/channel/UCwLUefavJbQ-tXFr3czoUiQ/videos",
        "spkrs": [],
        "tags": ["Forms", "Reactive Forms", "Pipes"]
      },
      {
        "slug": "2022-08-14-E",
        "type": "blog",
        "title": "How to configure Jest for unit testing in an Angular application",
        "url": "https://minibhati.hashnode.dev/how-to-configure-jest-for-unit-testing-in-an-angular-application",
        "desc": "Jest is a popular testing framework. It is a great alternative to Karma and Jasmine. Learn how to configure Jest in your Angular application.",
        "dAdd": "2022-08-14",
        "dSrc": "2022-08-14",
        "srcSite": "Hashnode",
        "srcUrl": "https://hashnode.com/n/angular",
        "aName": "Mini Bhati",
        "aUrl": "https://hashnode.com/@devminibhati",
        "spkrs": ["Mini Bhati"],
        "tags": ["Unit Testing", "Jest"]
      },
      {
        "slug": "2022-08-14-F",
        "type": "video",
        "dur": "16",
        "title": "Angular For Beginners - 23. Angular Router",
        "url": "https://www.youtube.com/watch?v=-70mkrY_Tz8",
        "desc": "",
        "dAdd": "2022-08-14",
        "dSrc": "2022-08-14",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Teddy Smith",
        "aUrl": "https://www.youtube.com/c/TeddySmithNC/videos",
        "spkrs": ["Teddy Smith"],
        "tags": ["Routing"]
      },
      {
        "slug": "2022-08-14-G",
        "type": "blog",
        "title": "The flexible way to adopt UX/UI in Angular app according to user's permissions",
        "url": "https://dev.to/danduh81/the-flexible-way-to-adopt-uxui-in-angular-app-according-to-users-permissions-gb2",
        "desc": "In many projects, there are authentication processes (more or less). A lot of 'best practices' were written in all known technologies and so on, and so forth.\n\nBut what happens after the user made the login? After all, he by far cannot do everything. How to define what he can see and what not. What buttons he has the rights to click on, what to change, create and delete.\n\nIn this article, I want to consider the approach used for solving these problems in a web application.",
        "dAdd": "2022-08-14",
        "dSrc": "2022-08-14",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Daniel",
        "aUrl": "https://dev.to/danduh81",
        "spkrs": [],
        "tags": []
      },
      {
        "slug": "2022-08-14-H",
        "type": "video",
        "dur": "28",
        "title": "Angular Essentials 3 - Making Things Look Good",
        "url": "https://www.youtube.com/watch?v=6aAkI71nu9U",
        "desc": "We take some time to make the horrible list look a lot better. We also discuss Reactive vs. Form-Driven forms a little bit.",
        "dAdd": "2022-08-14",
        "dSrc": "2022-08-14",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Jason Warner",
        "aUrl": "https://www.youtube.com/channel/UCzF8hdwni3db3UZ7P3uKBkQ/videos",
        "spkrs": ["Jason Warner"],
        "tags": ["Forms", "Reactive Forms", "Template Driven Forms"]
      },
      {
        "slug": "2022-08-14-J",
        "type": "video",
        "dur": "12",
        "title": "Part 10: Angular 13, @Viewchild from Child Component, Get value by Method and Instance Variable",
        "url": "https://www.youtube.com/watch?v=PL9VazUz104",
        "desc": "",
        "dAdd": "2022-08-14",
        "dSrc": "2022-08-14",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Software Nuggets",
        "aUrl": "https://www.youtube.com/c/SoftwareNuggets/videos",
        "spkrs": [],
        "tags": ["@ViewChild"]
      }
    ]
  },
  {
    "date": "2022-08-15",
    "dailyPosts": [
      {
        "slug": "2022-08-15-A",
        "type": "blog",
        "title": "mat-icon: working without defaults",
        "url": "https://singh-prateek.medium.com/mat-icon-working-without-defaults-feb8d419ebf4",
        "desc": "In Angular Material, mat-icon component used for displaying font icons and svg. By this blog you will learn about using other font apart from default font material icons.",
        "dAdd": "2022-08-15",
        "dSrc": "2022-08-14",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Prateek Singh",
        "aUrl": "https://singh-prateek.medium.com",
        "spkrs": ["Prateek Singh"],
        "tags": []
      },
      {
        "slug": "2022-08-15-B",
        "type": "blog",
        "title": "Using content projection to build more flexible dialogs (and write less code) in Angular",
        "url": "https://medium.com/@andre.schouten_ff/using-content-projection-to-build-more-flexible-dialogs-and-write-less-code-in-angular-fb3064a608f",
        "desc": "In this article, I will use modal dialogs to show how to use content projection to develop according to the DRY principle (Don't Repeat Yourself) and build dialogs flexibly without over-engineering.",
        "dAdd": "2022-08-15",
        "dSrc": "2022-08-14",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Andre Schouten",
        "aUrl": "https://medium.com/@andre.schouten_ff",
        "spkrs": ["Andre Schouten"],
        "tags": ["Content Projection", "<ng-content>"]
      },
      {
        "slug": "2022-08-15-C",
        "type": "video",
        "dur": "21",
        "title": "Angular authorization with live example | Custom directive with practical scenario",
        "url": "https://www.youtube.com/watch?v=RCTqWcsay0o",
        "desc": "This is part 9 of Angular 14 series and in this session have explained about the Angular custom directive and authorization.",
        "dAdd": "2022-08-15",
        "dSrc": "2022-08-14",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Beginner 2 Expert",
        "aUrl": "https://www.youtube.com/c/Beginner2Expert/videos",
        "spkrs": ["Biswajit Jana"],
        "tags": ["Auth", "Directives", "Custom"]
      },
      {
        "slug": "2022-08-15-D",
        "type": "video",
        "dur": "5",
        "title": "How to properly use *ngIf directive and hidden attribute in Angular | Angular Essential | LSC",
        "url": "https://www.youtube.com/watch?v=yGIvmN1nXdw",
        "desc": "In this video, I will explain how to properly use the *ngIf directive and hidden attribute in Angular. With various real-time examples, it is easy to understand and you can decide when to pick the *ngIf directive versus the [hidden] attribute.",
        "dAdd": "2022-08-15",
        "dSrc": "2022-08-14",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Learn Smart Coding",
        "aUrl": "https://www.youtube.com/channel/UCKUxSY2xp12QiP3c60sOc-g/videos",
        "spkrs": [],
        "tags": ["Directives", "*ngIf"]
      },
      {
        "slug": "2022-08-15-E",
        "type": "blog",
        "title": "How to respond to input changes reactively in the child component",
        "url": "https://minibhati.hashnode.dev/how-to-respond-to-input-changes-reactively-in-the-child-component",
        "desc": "Define property accessor methods on the Input bindings in the child component to reactively respond to input changes",
        "dAdd": "2022-08-15",
        "dSrc": "2022-08-15",
        "srcSite": "Hashnode",
        "srcUrl": "https://hashnode.com/n/angular",
        "aName": "Mini Bhati",
        "aUrl": "https://hashnode.com/@devminibhati",
        "spkrs": ["Mini Bhati"],
        "tags": ["Data Transfer", "@Input", "ngOnChanges()", "Getters/Setters"]
      },
      {
        "slug": "2022-08-15-F",
        "type": "blog",
        "title": "Using Angular APP_BASE_HREF token to serve multilingual apps, and hosting on Netlify",
        "url": "https://dev.to/ayyash/using-angular-appbasehref-token-to-serve-multilingual-apps-and-hosting-on-netlify-o7a",
        "desc": "Previously, we worked out a way to generate the HTML pages ahead of time, and this will be very beneficial in cloud hosting. In this article, we shall push our multilingual single-build Angular application to Netlify client-only hosting and watch it sink or float.",
        "dAdd": "2022-08-15",
        "dSrc": "2022-08-15",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Ayyash",
        "aUrl": "https://dev.to/ayyash",
        "spkrs": [],
        "tags": ["APP_BASE_HREF", "Internationalization"]
      },
      {
        "slug": "2022-08-15-G",
        "type": "video",
        "dur": "4",
        "title": "Angular 13 Tutorial - 11 - ngFor Directives in Angular | Learn Web Development",
        "url": "https://www.youtube.com/watch?v=8U-agwHO4Xg",
        "desc": "We are talking aboout directives in Angular and we will discus what is ngFor and its usage in details",
        "dAdd": "2022-08-15",
        "dSrc": "2022-08-15",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Kode With Kamran",
        "aUrl": "https://www.youtube.com/channel/UClAF60JODGbZKoyREtl6S5A/videos",
        "spkrs": [],
        "tags": ["Directives", "*ngFor"]
      },
      {
        "slug": "2022-08-15-H",
        "type": "video",
        "dur": "10",
        "title": "Pure, Impure Pipes in Angular | #Angular pipes Examples",
        "url": "https://www.youtube.com/watch?v=eKqqYBF6Igw",
        "desc": "",
        "dAdd": "2022-08-15",
        "dSrc": "2022-08-15",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "OneAnanda",
        "aUrl": "https://www.youtube.com/channel/UCSlA7v4u2-ARxQ-CPUj3UGw/videos",
        "spkrs": [],
        "tags": []
      },
      {
        "slug": "2022-08-15-J",
        "type": "podcast",
        "dur": "60",
        "title": "S2E29 | Alfredo Perez on Mexico, Hobbits, & Career Growth",
        "url": "https://www.spreaker.com/user/14532324/s2e29-alfredo-perez-on-mexico-hobbits-ca?utm_campaign=episode-title&utm_medium=app&utm_source=widget",
        "desc": "In this episode we talk with Alfredo Perez, a rising star in the community who shares his developer journey from his roots in Mexico to becoming a Staff UI Engineer, a trusted coach and mentor, and becoming an accepted speaker at ng-conf. Alfredo shares some inspiring insights on topics like how to lower the barriers into tech for those from other countries & how companies and teams can work to improve the developer experience for entry level and more-seasoned developers alike. This episode is packed with great insights, advice, and, who knows, you might even encounter a hobbit or two along the way!",
        "dAdd": "2022-08-15",
        "dSrc": "2022-08-15",
        "srcSite": "Spreaker",
        "srcUrl": "https://spreaker.com",
        "aName": "Angular Experience",
        "aUrl": "https://angular-experience.web.app/episodes",
        "spkrs": ["Alfredo Perez"],
        "tags": []
      },
      {
        "slug": "2022-08-15-K",
        "type": "video",
        "dur": "7",
        "title": "Parent to child communication | Input decorator | Angular 14 | Part 1",
        "url": "https://www.youtube.com/watch?v=0mkBauEwtQA",
        "desc": "In this video we will learn How to use input decorator and how to communicate from parent to child components in Angular",
        "dAdd": "2022-08-15",
        "dSrc": "2022-08-15",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "TechshareSKK",
        "aUrl": "https://www.youtube.com/channel/UCD8gC85u512FeCFzRV4Ll-A/videos",
        "spkrs": ["Sai Kumar Korthivada"],
        "tags": ["Data Transfer", "@Input"]
      },
      {
        "slug": "2022-08-15-L",
        "type": "video",
        "dur": "4",
        "title": "How to use ngSwitch directive in Angular | Angular | LSC",
        "url": "https://www.youtube.com/watch?v=Y1IhacxDVx8",
        "desc": "",
        "dAdd": "2022-08-15",
        "dSrc": "2022-08-15",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Learn Smart Coding",
        "aUrl": "https://www.youtube.com/channel/UCKUxSY2xp12QiP3c60sOc-g/videos",
        "spkrs": [],
        "tags": []
      },
      {
        "slug": "2022-08-15-M",
        "type": "video",
        "dur": "11",
        "title": "ProvidedIn root vs any in Angular | Angular Tutorial",
        "url": "https://www.youtube.com/watch?v=W-eQrEX5i3g",
        "desc": "Angular Tutorial: There are different ways to inject the service in Angular. ProvidedIn has different options like root, platform & any. In this video we will learn the difference between ProvidedIn root and any.",
        "dAdd": "2022-08-15",
        "dSrc": "2022-08-15",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "WebGentle",
        "aUrl": "https://www.youtube.com/c/WebGentle/videos",
        "spkrs": ["Nitish Kumar"],
        "tags": ["Dependency Injection"]
      },
      {
        "slug": "2022-08-15-N",
        "type": "video",
        "dur": "17",
        "title": "Advanced Angular 13+ Reusable Form Tutorial with Ng Library - You haven't seen this one",
        "url": "https://www.youtube.com/watch?v=i5FHaqe5Zis",
        "desc": "This tutorial will teach you how to stop filling your reusable angular reactive forms with the same boilerplate. This tutorial assumes you know Angular fairly well and have familiarity in the angular workspace/ecosystem. Forgive my poor video editing skills and weak explanations.",
        "dAdd": "2022-08-15",
        "dSrc": "2022-08-15",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Millennial Business Ventures",
        "aUrl": "https://www.youtube.com/channel/UCu-iuVBSmu1gdRyUFWB3PBQ/videos",
        "spkrs": [],
        "tags": ["Forms"]
      }
    ]
  },
  {
    "date": "2022-08-16",
    "dailyPosts": [
      {
        "slug": "2022-08-16-A",
        "type": "blog",
        "title": "Three Angular mistakes to avoid",
        "url": "https://medium.com/@MBCube/three-angular-mistakes-to-avoid-32e5a0bbec4f",
        "desc": "In this article, I will discuss three of the most important pitfalls to avoid. They are: using function calls in ngIf directives, improper use of the RxJS library, and failing to leverage Angular's fundamentals.",
        "dAdd": "2022-08-16",
        "dSrc": "2022-08-14",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Mouad Bouras",
        "aUrl": "https://medium.com/@MBCube",
        "spkrs": [],
        "tags": ["Directives", "*ngIf", "RxJS"]
      },
      {
        "slug": "2022-08-16-B",
        "type": "blog",
        "title": "Nested routing in Angular",
        "url": "https://singh-prateek.medium.com/nested-routing-in-angular-c1ec9b601c4d",
        "desc": "Setup nested level (main ,child, sub-child navigation) of navigation in Angular and save time in route debugging. In this blog will learn about nested level of routing.",
        "dAdd": "2022-08-16",
        "dSrc": "2022-08-15",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Prateek Singh",
        "aUrl": "https://singh-prateek.medium.com",
        "spkrs": ["Prateek Singh"],
        "tags": ["Routing"]
      },
      {
        "slug": "2022-08-16-C",
        "type": "blog",
        "title": "Content Projection in Angular — ng-content & [ngTemplateOutlet]",
        "url": "https://medium.com/@gabrielpaliari/content-projection-in-angular-ng-content-ngtemplateoutlet-cab3c6aef2c2",
        "desc": "Content projection is a nice feature that is often overlooked in Angular apps. While trying to learn this concept in depth, I've found angular documentation and posts online a little bit hard to follow. Thats why I've decided to write this post. Here, we will explore how to implement content projection from a simple base example to a complex use case.\n(photo: by drmakete lab on Unsplash and edited by me)",
        "dAdd": "2022-08-16",
        "dSrc": "2022-08-15",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Gabriel Paliari",
        "aUrl": "https://medium.com/@gabrielpaliari",
        "spkrs": ["Gabriel Paliari"],
        "tags": ["Content Projection", "<ng-content>"]
      },
      {
        "slug": "2022-08-16-D",
        "type": "blog",
        "title": "Angular v14: Features and Migration guide tips",
        "url": "https://medium.com/@uddeshya_k/angular-v14-features-and-migration-guide-tips-e96b8803cd9a",
        "desc": "The latest version of Angular is here. Angular v14 was released on 2nd June'22 and brought with it standalone components, strictly typed forms, Angular CLI auto-completion, and Streamlined Page Title Accessibility, among other updates and features. The Google-developed TypeScript-based open source framework has also focused on better error handling by introducing enhanced template diagnostics to make it more developer-friendly.",
        "dAdd": "2022-08-16",
        "dSrc": "2022-08-15",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Uddeshya Kumar",
        "aUrl": "https://medium.com/@uddeshya_k",
        "spkrs": ["Uddeshya Kumar"],
        "tags": ["Update"]
      },
      {
        "slug": "2022-08-16-E",
        "type": "video",
        "dur": "9",
        "title": "Learn How to Create Dynamic Component in Angular",
        "url": "https://www.youtube.com/watch?v=n2uXyzqL1lA",
        "desc": "In this video you will learn how to create an Angular component dynamically. Furthermore, you will learn how to create multiple dynamic components based on configuration settings.\n\nIn earlier versions of Angular we could generate Dynamic Components and set inputs using the command COMPONENT.instance.INPUT_NAME. This worked fine but we had to find alternatives to trigger component's ngOnChanges hook. In Angular 14 we now have the option to use the method setInput which triggers the ngOnChanges hook.",
        "dAdd": "2022-08-16",
        "dSrc": "2022-08-16",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Code Shots With Profanis",
        "aUrl": "https://www.youtube.com/c/CodeShotsWithProfanis/videos",
        "spkrs": ["Fanis Prodromou"],
        "tags": ["Components", "Dynamic", "ngOnChanges()"]
      },
      {
        "slug": "2022-08-16-F",
        "type": "blog",
        "title": "Progressive Reactivity with NgRx/Store and NGXS",
        "url": "https://dev.to/this-is-angular/progressive-reactivity-with-ngrxstore-and-ngxs-5bib",
        "desc": "In this series I came up with 3 rules to achieve progressive reactivity. Following them reduced NgRx/Store and NGXS code by 18%.",
        "dAdd": "2022-08-16",
        "dSrc": "2022-08-16",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Mike Pearson",
        "aUrl": "https://dev.to/mfp22",
        "spkrs": ["Mike Pearson"],
        "tags": ["NgRx", "NGXS"]
      },
      {
        "slug": "2022-08-16-G",
        "type": "video",
        "dur": "6",
        "title": "UT Parent to child communication | Input decorator | Angular 14 | Part 1",
        "url": "https://www.youtube.com/watch?v=ytg46kIsups",
        "desc": "In this video we will learn How to test input decorator when we have parent child communication between the components.\n\n1. How to test use input decorator in Angular.\n2. How to test the data passed from parent to child\n3. How to test send data from one component to other component.",
        "dAdd": "2022-08-16",
        "dSrc": "2022-08-16",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "TechshareSKK",
        "aUrl": "https://www.youtube.com/channel/UCD8gC85u512FeCFzRV4Ll-A/videos",
        "spkrs": ["Sai Kumar Korthivada"],
        "tags": ["Data Transfer", "@Input"]
      },
      {
        "slug": "2022-08-16-H",
        "type": "video",
        "dur": "16",
        "title": "NgDoBootstrap in Angular - Lifecycle Hook You Probably Didn't Know",
        "url": "https://www.youtube.com/watch?v=hr8_oD60GZ4",
        "desc": "NgDoBootstrap is a lifecycle hook in Angular that allows you to customize the bootstrapping logic of your Angular Application. It is executed if no component is provided in the bootstrap array in the AppModule and delegates the bootstrap logic to you. In this video, we will come to this feature by investigating the source code starting from the main.ts file in Angular, diving into the source code, and seeing this lifecycle hook in action.",
        "dAdd": "2022-08-16",
        "dSrc": "2022-08-16",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Decoded Frontend",
        "aUrl": "https://www.youtube.com/c/DecodedFrontend/videos",
        "spkrs": ["Dmytro Mezhenskyi"],
        "tags": ["ngOnDoBootstrap()", "Lifecycle Hooks"]
      },
      {
        "slug": "2022-08-16-J",
        "type": "blog",
        "title": "Angular 13 Accessibility Updates and What They Mean to You and Your Users",
        "url": "https://www.telerik.com/blogs/angular-13-accessibility-updates-what-they-mean",
        "desc": "Learn how to use the power of Angular, ARIA attributes and the Angular Material CDK to improve user experience and remove barriers.",
        "dAdd": "2022-08-16",
        "dSrc": "2022-08-16",
        "srcSite": "Progress Telerik Blog",
        "srcUrl": "https://www.telerik.com/blogs/web-angular",
        "aName": "Dany Paredes",
        "aUrl": "https://www.telerik.com/blogs/author/dany-paredes",
        "spkrs": ["Dany Paredes"],
        "tags": ["@HostListener"]
      },
      {
        "slug": "2022-08-16-K",
        "type": "blog",
        "title": "Simple ToDo App In Angular",
        "url": "https://lorenzozar.hashnode.dev/simple-todo-app-in-angular",
        "desc": "Another to-do app?? Yes, and there is a reason for that.\n\nThere are some types of applications that force you to use some patterns that will be extremely common in your professional life",
        "dAdd": "2022-08-16",
        "dSrc": "2022-08-16",
        "srcSite": "Hashnode",
        "srcUrl": "https://hashnode.com/n/angular",
        "aName": "Lorenzo Zarantonello",
        "aUrl": "https://hashnode.com/@lorenzozar",
        "spkrs": ["Lorenzo Zarantonello"],
        "tags": []
      },
      {
        "slug": "2022-08-16-L",
        "type": "video",
        "dur": "16",
        "title": "Angular Interview Series Part-3 - Lifecycle Hooks",
        "url": "https://www.youtube.com/watch?v=1nAbSB52inA",
        "desc": "What are Parent - Child components? What are Lifecycle Hooks in Angular? What is Constructor in Angular? What is ngOnInit life cycle hook in Angular? What is difference between Constructor and ngOnInit?",
        "dAdd": "2022-08-16",
        "dSrc": "2022-08-16",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Interview Happy",
        "aUrl": "https://www.youtube.com/channel/UCPcmW5NwvMPk1FEqSRKV1Dw/videos",
        "spkrs": [],
        "tags": ["Lifecycle Hooks"]
      },
      {
        "slug": "2022-08-16-M",
        "type": "video",
        "dur": "43",
        "title": "Multi-select with search displaying chips example in Angular (without ng-multiselect-dropdown)",
        "url": "https://www.youtube.com/watch?v=jyYLZHGPTG4",
        "desc": "In this example, we will see how to implement multiple search and selection using Angular. This example is implemented using Interpolation, Two Way Binding and Structural Directives.",
        "dAdd": "2022-08-16",
        "dSrc": "2022-08-16",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "SIMPL Academy",
        "aUrl": "https://www.youtube.com/channel/UCGB1Qg0oq4Ar4h6rzW0vzdA/videos",
        "spkrs": [],
        "tags": ["Select", "Chips"]
      },
      {
        "slug": "2022-08-16-N",
        "type": "video",
        "dur": "12",
        "title": "Service providers: useClass | Angular Tutorial",
        "url": "https://www.youtube.com/watch?v=EO6OHs65LR0",
        "desc": "",
        "dAdd": "2022-08-16",
        "dSrc": "2022-08-16",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "WebGentle",
        "aUrl": "https://www.youtube.com/c/WebGentle/videos",
        "spkrs": ["Nitish Kumar"],
        "tags": ["Dependency Injection", "useClass"]
      },
      {
        "slug": "2022-08-16-P",
        "type": "video",
        "dur": "4",
        "title": "Angular For Beginners - 25. NgContent",
        "url": "https://www.youtube.com/watch?v=BdZrC_RwVGU",
        "desc": "",
        "dAdd": "2022-08-16",
        "dSrc": "2022-08-16",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Teddy Smith",
        "aUrl": "https://www.youtube.com/c/TeddySmithNC/videos",
        "spkrs": ["Teddy Smith"],
        "tags": ["Content Projection", "<ng-content>"]
      },
      {
        "slug": "2022-08-16-Q",
        "type": "blog",
        "title": "Introducing Angular Component Testing",
        "url": "https://dev.to/cypress/introducing-angular-component-testing-43ja",
        "desc": "Earlier this year, we announced our biggest release of Cypress ever. This introduced a new unified UI, faster test runs, and support for a new type of testing, Component Tests. This initial release included Component Testing support for both React and Vue with the plan to add additional framework support over the next few months. Today, we are happy to deliver on that promise by adding first-class support for Component Testing for Angular!",
        "dAdd": "2022-08-16",
        "dSrc": "2022-08-16",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Jordan Powell",
        "aUrl": "https://dev.to/jordanpowell88",
        "spkrs": ["Jordan Powell"],
        "tags": ["Testing", "Cypress"]
      },
      {
        "slug": "2022-08-16-R",
        "type": "video",
        "dur": "7",
        "title": "Pros and Cons of Angular Material Library | Tech Webinar Highlight",
        "url": "https://www.youtube.com/watch?v=wBZIC-r82Sc",
        "desc": "",
        "dAdd": "2022-08-16",
        "dSrc": "2022-08-16",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Advancio",
        "aUrl": "https://www.youtube.com/c/Advancio/videos",
        "spkrs": [],
        "tags": ["Angular Material"]
      }
    ]
  },
  {
    "date": "2022-08-17",
    "dailyPosts": [
      {
        "slug": "2022-08-17-A",
        "type": "blog",
        "title": "Using DynamoDB Container Image for local environment testing",
        "url": "https://aosolorzano.medium.com/using-dynamodb-container-image-for-local-environment-testing-9912995b961f",
        "desc": "As you notice in my previous tutorials using the Timer Service application, I used to connect directly to DynamoDB on AWS for the local testing environment. This article will use a DynamoDB container image for local environment testing. Also, we need to modify our Timer Service Quarkus configuration file to use this container image instead of going directly to AWS.",
        "dAdd": "2022-08-17",
        "dSrc": "2022-08-16",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Andres Solorzano",
        "aUrl": "https://aosolorzano.medium.com",
        "spkrs": ["Andres Solorzano"],
        "tags": ["Testing"]
      },
      {
        "slug": "2022-08-17-B",
        "type": "blog",
        "title": "Angular Library Dependencies vs PeerDependencies",
        "url": "https://dev.to/vineethtrv/angular-library-dependencies-vs-peerdependencies-1hcd",
        "desc": "Dependencies serve many different purposes. Some dependencies are needed to build your project, others are needed when you're running your program.",
        "dAdd": "2022-08-17",
        "dSrc": "2022-08-16",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Vineeth.TR",
        "aUrl": "https://dev.to/vineethtrv",
        "spkrs": [],
        "tags": ["Libraries"]
      },
      {
        "slug": "2022-08-17-C",
        "type": "blog",
        "title": "Custom Pipes in Angular — The Ultimate Guide",
        "url": "https://javascript.plainenglish.io/custom-pipes-in-angular-the-ultimate-guide-e54bb400e3ce",
        "desc": "How to create custom pipes in Angular, what are pure and impure pipes, and how to use pure pipes to improve an application's performance./n(photo by Sangharsh Lohakare on Unsplash)",
        "dAdd": "2022-08-17",
        "dSrc": "2022-08-16",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Kagklis Vasileios",
        "aUrl": "https://kagklis.medium.com",
        "spkrs": ["Kagklis Vasileios"],
        "tags": ["Pipess", "Custom", "Performance"]
      },
      {
        "slug": "2022-08-17-D",
        "type": "blog",
        "title": "Bootstrap Modal In Angular 13",
        "url": "https://websolutionstuff.medium.com/bootstrap-modal-in-angular-13-13d1699032c4",
        "desc": "In this article, we will see the bootstrap modal in angular 13. Ng Bootstrap is developed from bootstrap and they provide all bootstrap 3, bootstrap 4, and bootstrap 5 native angular 13 directives like a modal, pagination, date picker, buttons, etc. Ng Bootstrap will help to easily use bootstrap UI.",
        "dAdd": "2022-08-17",
        "dSrc": "2022-08-17",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Websolutionstuff",
        "aUrl": "https://websolutionstuff.medium.com",
        "spkrs": [],
        "tags": ["Dialog", "Bootstrap"]
      },
      {
        "slug": "2022-08-17-E",
        "type": "video",
        "dur": "8",
        "title": "Purpose of Angular routing resolve property | Load data before component | Angular 14",
        "url": "https://www.youtube.com/watch?v=AqSmojInsZQ",
        "desc": "This is part 10 of Angular 14 series and in this session I have explained about the routing RESOLVE property, how to load data before dashboard component!",
        "dAdd": "2022-08-17",
        "dSrc": "2022-08-17",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Beginner 2 Expert",
        "aUrl": "https://www.youtube.com/c/Beginner2Expert/videos",
        "spkrs": ["Biswajit Jana"],
        "tags": ["Routing", "Resolve"]
      },
      {
        "slug": "2022-08-17-F",
        "type": "blog",
        "title": "Why use 'pipe' instead of 'function' in Angular?",
        "url": "https://medium.com/@zmushegh/why-use-pipe-instead-of-function-in-angular-507cf972bfb0",
        "desc": "Hello, in this short article I will show you how pipe can improve your application performance.",
        "dAdd": "2022-08-17",
        "dSrc": "2022-08-17",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Mushegh Zakaryan",
        "aUrl": "https://zmushegh.medium.com",
        "spkrs": ["Mushegh Zakaryan"],
        "tags": ["Pipes", "Performance"]
      },
      {
        "slug": "2022-08-17-G",
        "type": "video",
        "dur": "32",
        "title": "Angular 14 Movie Search App Using RXJS 6 debounceTime Effect on Input Field to Call REST API in TS",
        "url": "https://www.youtube.com/watch?v=zcyv12Tc95A",
        "desc": "",
        "dAdd": "2022-08-17",
        "dSrc": "2022-08-17",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
         "aName": "Coding Shiksha",
        "aUrl": "https://www.youtube.com/c/CodingShiksha/videos",
        "spkrs": ["Gautam Sharma"],
        "tags": ["RxJS", "debounceTime()"]
      },
      {
        "slug": "2022-08-17-H",
        "type": "video",
        "dur": "t",
        "title": "Deploying new Angular into the Firebase with preproduction and production channel capability",
        "url": "https://www.youtube.com/watch?v=mLyQk_G3pZg",
        "desc": "In this video you will learn about how to initiate Angular project and Firebase project, then deploy Angular website to Firebase hosting with 2 channels type which are preproduction channel and production channel",
        "dAdd": "2022-08-17",
        "dSrc": "2022-08-17",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "R Surahutomo Aziz Pradana",
        "aUrl": "https://www.youtube.com/channel/UC10_pxbLel4Sdi8H06uhLew/videos",
        "spkrs": ["R Surahutomo Aziz Pradana"],
        "tags": ["Firebase", "Deployment"]
      },
      {
        "slug": "2022-08-17-J",
        "type": "video",
        "dur": "24",
        "title": "This random PR taught me how to strongly type my generic Angular component",
        "url": "https://www.youtube.com/watch?v=dau7kQMdH4A",
        "desc": "In this video, we investigate how to use custom directives, TypeScript generics, and ngTemplateContextGuard to add strong typing to the ng-templates in the generic table component from the last video.",
        "dAdd": "2022-08-17",
        "dSrc": "2022-08-17",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Joshua Morony",
        "aUrl": "https://www.youtube.com/c/CreativeDeveloper/videos",
        "spkrs": ["Joshua Morony"],
        "tags": ["Directives", "Custom", "ngTemplateContextGuard()", "<ng-template>", "TypeScript"]
      },
      {
        "slug": "2022-08-17-K",
        "type": "blog",
        "title": "Optimize the Bundle Size using Source Map Explorer",
        "url": "https://mohammedfahimullah.medium.com/optimize-the-bundle-size-using-source-map-explorer-5e848850e578",
        "desc": "Why? Our applications use many third-party libraries and because of it, the bundle size of the application becomes larger. This affects the initial loading time of the application. To improve the performance of our application we need to reduce our bundle size.",
        "dAdd": "2022-08-17",
        "dSrc": "2022-08-17",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Mohammedfahimullah",
        "aUrl": "https://mohammedfahimullah.medium.com",
        "spkrs": [],
        "tags": ["Performance", "Source Maps"]
      },
      {
        "slug": "2022-08-17-L",
        "type": "podcast",
        "dur": "55",
        "title": "S4 E1 - Web Security with Angular with Alisa Duncan",
        "url": "https://www.spreaker.com/user/ng-conf/ap-show-s4e1-alisa-duncan-edit-1",
        "desc": "As Angular developers, we have a lot to be thankful for, including the built-in web security. Web Security is a topic that we could not do justice to in a matter of a single podcast episode. With that said, we welcome Alisa Duncan, a Senior Developer Advocate at Okta, and Google Developer Expert. Alisa loves learning and sharing with the community. In this episode, we dive into the OWASP top 10 list from 2021 that shows the most common vulnerabilities that are exposed in web applications, and then we break down how Angular helps us to avoid these vulnerabilities in our applications. Join us as we learn more about web security with Angular.",
        "dAdd": "2022-08-17",
        "dSrc": "2022-08-17",
        "srcSite": "Spreaker",
        "srcUrl": "https://www.spreaker.com",
        "aName": "The Angular Plus Show",
        "aUrl": "https://www.spreaker.com/show/angular-show",
        "spkrs": ["Alisa Duncan"],
        "tags": ["Security", "SCRF"]
      },
      {
        "slug": "2022-08-17-M",
        "type": "release",
        "title": "Angular Release: v14.1.3",
        "url": "https://github.com/angular/angular/releases/tag/14.1.3",
        "desc": "",
        "dAdd": "2022-08-17",
        "dSrc": "2022-08-17",
        "srcSite": "GitHub Angular",
        "srcUrl": "https://github.com/angular/angular/releases",
        "aName": "Pawel Kozlowski",
        "aUrl": "",
        "spkrs": [],
        "tags": ["Release"]
      },
      {
        "slug": "2022-08-17-N",
        "type": "release",
        "title": "Angular Release: v14.2.0-rc.0",
        "url": "https://github.com/angular/angular/releases/tag/14.2.0-rc.0",
        "desc": "",
        "dAdd": "2022-08-17",
        "dSrc": "2022-08-17",
        "srcSite": "GitHub Angular",
        "srcUrl": "https://github.com/angular/angular/releases",
        "aName": "Pawel Kozlowski",
        "aUrl": "",
        "spkrs": [],
        "tags": ["Release"]
      },
      {
        "slug": "2022-08-17-P",
        "type": "video",
        "dur": "5",
        "title": "Service providers: useExisting | Angular Tutorial",
        "url": "https://www.youtube.com/watch?v=ZAP3GYKjeWc",
        "desc": "",
        "dAdd": "2022-08-17",
        "dSrc": "2022-08-17",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "WebGentle",
        "aUrl": "https://www.youtube.com/c/WebGentle/videos",
        "spkrs": ["Nitish Kumar"],
        "tags": ["Dependency Injection", "useExisting"]
      },
      {
        "slug": "2022-08-17-Q",
        "type": "video",
        "dur": "57",
        "title": "Bringing Your Angular Web App to Native | Mike Hartington | ng-conf 2022 Webinar",
        "url": "https://www.youtube.com/watch?v=uaB5LKp8S7M",
        "desc": "So, you have a killer Angular app you've built and want to take it from your web browser to the App Store. Sure, there are a lot of options here, but most will require you to maintain separate apps for each platform. You want your codebase to be as close as possible across Web, Android, and iOS. Thankfully, with Capacitor, you can take your existing web app and quickly create native iOS and Android apps for distribution on your favorite App Store!",
        "dAdd": "2022-08-17",
        "dSrc": "2022-08-17",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "ng-conf",
        "aUrl": "https://www.youtube.com/c/ngconfonline/videos",
        "spkrs": ["Mike Hartington"],
        "tags": ["Ionic", "Capacitor"]
      },
      {
        "slug": "2022-08-17-R",
        "type": "video",
        "dur": "21",
        "title": "Data Binding in Angular",
        "url": "https://www.youtube.com/watch?v=w0E05RnTMNA",
        "desc": "",
        "dAdd": "2022-08-17",
        "dSrc": "2022-08-17",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Fresherkatta",
        "aUrl": "https://www.youtube.com/channel/UCWYNnOXHwhPT0PZ2jOpQ7Qw/videos",
        "spkrs": [],
        "tags": ["Data Binding"]
      },
      {
        "slug": "2022-08-17-S",
        "type": "video",
        "dur": "51",
        "title": "Angular World Tour with Angular MTV, Angular SF, GDGSV and Modern Web -- August",
        "url": "https://www.youtube.com/watch?v=GKY6Kaase_I",
        "desc": "",
        "dAdd": "2022-08-17",
        "dSrc": "2022-08-17",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "This Dot Media",
        "aUrl": "https://www.youtube.com/c/ThisDotMedia",
        "spkrs": ["Tracy Lee", "Ankita Sood", "Jordan Powell"],
        "tags": []
      }
    ]
  },
  {
    "date": "2022-08-18",
    "dailyPosts": [
      {
        "slug": "2022-08-18-A",
        "type": "blog",
        "title": "What are RxJS Observables",
        "url": "https://alex-migwi.medium.com/what-are-rxjs-observables-c4b4392f582d",
        "desc": "The observer pattern simply put is a software design pattern in which an object, named the subject, maintains a list of its dependents, called observers, and notifies them automatically of any state changes, usually by calling one of their methods.",
        "dAdd": "2022-08-18",
        "dSrc": "2022-08-16",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Job Alex Muturi",
        "aUrl": "https://alex-migwi.medium.com",
        "spkrs": ["Job Alex Muturi"],
        "tags": ["RxJS", "Observables"]
      },
      {
        "slug": "2022-08-18-B",
        "type": "blog",
        "title": "Using the Angular Router API without RouterModule",
        "url": "https://netbasal.com/using-the-angular-router-api-without-routermodule-2d415e9d5e84",
        "desc": "As part of the new standalone feature, Angular v14.2.0-rc.0 introduces a new method to use the Router API that doesn't require using RouterModule. Using the RouterModule, we pass extra options through a config object.",
        "dAdd": "2022-08-18",
        "dSrc": "2022-08-17",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Netanel Basal",
        "aUrl": "https://netbasal.medium.com",
        "spkrs": ["Netanel Basal"],
        "tags": ["Routing"]
      },
      {
        "slug": "2022-08-18-C",
        "type": "blog",
        "title": "Powering up your forms with Custom Validators",
        "url": "https://medium.com/herodevs/powering-up-your-forms-with-custom-validators-f44e544d9f0",
        "desc": "Since the Internet began, forms have been the most popular way to obtain information from users. Nowadays, there are other smooths ways to extract user data like integrations with social networks, email platforms, and even video platforms, but forms always are the first option when we need to know something about our users.\n(photo: Unsplash.com — Alexander Andrews)",
        "dAdd": "2022-08-18",
        "dSrc": "2022-08-17",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Andres Villanueva",
        "aUrl": "https://medium.com/@andresvillanuevaHD",
        "spkrs": ["Andres Villanueva"],
        "tags": ["Forms", "Validation", "Custom"]
      },
      {
        "slug": "2022-08-18-D",
        "type": "video",
        "dur": "21",
        "title": "Angular Essentials 4 - It Is Dangerous To Code Alone",
        "url": "https://www.youtube.com/watch?v=YimiVb61k9I",
        "desc": " In this video, we finish designing the ToDo list control. We change a predefined theme to another on the fly in Material. We also discuss some programming philosophy, like why you shouldn't write code by yourself.",
        "dAdd": "2022-08-18",
        "dSrc": "2022-08-18",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Jason Warner",
        "aUrl": "https://www.youtube.com/channel/UCzF8hdwni3db3UZ7P3uKBkQ/videos",
        "spkrs": ["Jason Warner"],
        "tags": ["Angular Material"]
      },
      {
        "slug": "2022-08-18-E",
        "type": "video",
        "dur": "54",
        "title": "Angular CRUD using JSON server rest API with reactive forms | material UI design | Angular 14",
        "url": "https://www.youtube.com/watch?v=dOFGJekKYes",
        "desc": "",
        "dAdd": "2022-08-18",
        "dSrc": "2022-08-17",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Nihira Techiees",
        "aUrl": "https://www.youtube.com/c/NihiraTechiees/videos",
        "spkrs": [],
        "tags": ["Forms", "Reactive Forms", "CRUD", "JSON"]
      },
      {
        "slug": "2022-08-18-F",
        "type": "video",
        "dur": "43",
        "title": "What's New in Angular 14 - Google Developer Expert, Angular",
        "url": "https://www.youtube.com/watch?v=-DqMDMKSGAE",
        "desc": "",
        "dAdd": "2022-08-18",
        "dSrc": "2022-08-17",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Google Developers Space",
        "aUrl": "https://www.youtube.com/channel/UCiwz4_tbGyDYE64TuKe5-0g/videos",
        "spkrs": ["Pankaj Parkar"],
        "tags": []
      },
      {
        "slug": "2022-08-18-G",
        "type": "blog",
        "title": "Angular Data Binding",
        "url": "https://medium.com/yavar/hello-everyone-8ec65520a4d9",
        "desc": "I'm Nirmal Kumar and this is my first blog about Data Binding in Angular. I hope you get some insight from this. Comment out your suggestions if any.",
        "dAdd": "2022-08-18",
        "dSrc": "2022-08-18",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Nirmal Kumar",
        "aUrl": "https://medium.com/@Nirmal97",
        "spkrs": ["Nirmal Kumar"],
        "tags": ["Data Binding"]
      },
      {
        "slug": "2022-08-18-H",
        "type": "blog",
        "title": "Using Angular NgOptimizedImage to Implement Image Loading Best Practices",
        "url": "https://netbasal.com/using-angular-ngoptimizedimage-to-implement-image-loading-best-practices-e20a69d71ea3",
        "desc": "The NgOptimizedImage directive in Angular is responsible for implementing performance best practices when loading images. It's available in Angular v14.2.0. The directive is marked as standalone and can be imported into standalone components and modules.",
        "dAdd": "2022-08-18",
        "dSrc": "2022-08-18",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Netanel Basal",
        "aUrl": "https://netbasal.com",
        "spkrs": ["Netanel Basal"],
        "tags": ["Performance"]
      },
      {
        "slug": "2022-08-18-J",
        "type": "video",
        "dur": "14",
        "title": "Angular Material #54 - CDK Tree",
        "url": "https://www.youtube.com/watch?v=spNB-Zapkx0",
        "desc": "Angular Material is a UI Component-Based Library for Angular, and through this series, we will take a look into each feature that Angular Material has to offer.",
        "dAdd": "2022-08-18",
        "dSrc": "2022-08-18",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Omerko",
        "aUrl": "https://www.youtube.com/c/Omerko/videos",
        "spkrs": ["Stefan Omerovic"],
        "tags": ["Angular Material", "Angular CDK", "Tree"]
      },
      {
        "slug": "2022-08-18-K",
        "type": "video",
        "dur": "16",
        "title": "Angular 14 Project to Show List Data in Material Dialog Popup Window on Button Click in TypeScript",
        "url": "https://www.youtube.com/watch?v=su1Rb_e1cfE",
        "desc": "",
        "dAdd": "2022-08-18",
        "dSrc": "2022-08-18",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Coding Shiksha",
        "aUrl": "https://www.youtube.com/c/CodingShiksha/videos",
        "spkrs": ["Gautam Sharma"],
        "tags": ["Angular Material", "Dialog"]
      },
      {
        "slug": "2022-08-18-L",
        "type": "podcast",
        "dur": "42",
        "title": "Episode 197: Women in Tech with Gen Ashley",
        "url": "https://webrush.io/episodes/episode-197-women-in-tech-with-gen-ashley",
        "desc": "Gen Ashley talks with us about Coed:Code, Meetup Groups, and other efforts she is a part of to help encourage and support women, non-binary people, & allies in technology, and ways we can be more inclusive at conferences and in general.",
        "dAdd": "2022-08-18",
        "dSrc": "2022-08-18",
        "srcSite": "Web Rush",
        "srcUrl": "https://webrush.io",
        "aName": "Gen Ashley",
        "aUrl": "https://twitter.com/coderinheels",
        "spkrs": ["Gen Ashley"],
        "tags": []
      },
      {
        "slug": "2022-08-18-M",
        "type": "video",
        "dur": "66",
        "title": "Angular Real World App with Supabase & Tailwind",
        "url": "https://www.youtube.com/watch?v=K9Ty27grLEQ",
        "desc": "Let's create cool projects together on the stream and go from setting up a new project to finally hosting it!",
        "dAdd": "2022-08-18",
        "dSrc": "2022-08-18",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Simon Grimm",
        "aUrl": "https://www.youtube.com/c/SimonGrimmDev/videos",
        "spkrs": ["Simon Grimm"],
        "tags": []
      },
      {
        "slug": "2022-08-18-N",
        "type": "video",
        "dur": "5",
        "title": "Service providers: useValue | Angular Tutorial",
        "url": "https://www.youtube.com/watch?v=TYRpVJfSdqw",
        "desc": "",
        "dAdd": "2022-08-18",
        "dSrc": "2022-08-18",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "WebGentle",
        "aUrl": "https://www.youtube.com/c/WebGentle/videos",
        "spkrs": ["Nitish Kumar"],
        "tags": ["useValue"]
      },
      {
        "slug": "2022-08-18-P",
        "type": "video",
        "dur": "7",
        "title": "Angular For Beginners - 27. ElementRef",
        "url": "https://www.youtube.com/watch?v=ksYE8aMkp90",
        "desc": "",
        "dAdd": "2022-08-18",
        "dSrc": "2022-08-18",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Teddy Smith",
        "aUrl": "https://www.youtube.com/c/TeddySmithNC/videos",
        "spkrs": ["Teddy Smith"],
        "tags": ["ElementRef"]
      },
      {
        "slug": "2022-08-18-Q",
        "type": "video",
        "dur": "10",
        "title": "Get to Know the 2022 ng-conf Speakers | Ankita Sood | ng-conf 2022",
        "url": "https://www.youtube.com/watch?v=plAMq9lr2RY",
        "desc": "",
        "dAdd": "2022-08-18",
        "dSrc": "2022-08-18",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "ng-conf",
        "aUrl": "https://www.youtube.com/c/ngconfonline/videos",
        "spkrs": ["Ankita Sood"],
        "tags": []
      }
    ]
  },
  {
    "date": "2022-08-19",
    "dailyPosts": [
      {
        "slug": "2022-08-19-A",
        "type": "video",
        "dur": "8",
        "title": "Angular 14 simple-ng-loader Example to Show Loading Spinner Progressbar After HTTP Requests to API",
        "url": "https://www.youtube.com/watch?v=PJhkbwRR6kw",
        "desc": "",
        "dAdd": "2022-08-19",
        "dSrc": "2022-08-18",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Coding Shiksha",
        "aUrl": "https://www.youtube.com/c/CodingShiksha/videos",
        "spkrs": ["Gautam Sharma"],
        "tags": ["Progress"]
      },
      {
        "slug": "2022-08-19-B",
        "type": "blog",
        "title": "Server-side rendering (SSR) with Angular Universal",
        "url": "https://medium.com/@reshailawan/server-side-rendering-ssr-with-angular-universal-cd473c70a9fb",
        "desc": "A normal Angular application executes in the browser, rendering pages in the DOM in response to user actions. Angular Universal runs on the server, generating static application pages that later get bootstrapped on the client. This means that the application generally renders more quickly, giving users a chance to view the application layout before it becomes fully interactive.",
        "dAdd": "2022-08-19",
        "dSrc": "2022-08-18",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Reshail Muzammil",
        "aUrl": "https://medium.com/@reshailawan",
        "spkrs": ["Reshail Muzammil"],
        "tags": ["SSR", "Angular Universal"]
      },
      {
        "slug": "2022-08-19-C",
        "type": "blog",
        "title": "Pipes chain in Angular — using async pipe",
        "url": "https://medium.com/@teslenkooleg2017/pipes-chain-in-angular-using-async-pipe-d83d25c808b4",
        "desc": "You can find a lot of examples how pipes works, but there is not enough information on how to use the asynchronous pipe in the chain. So let's start.\n(photo: by Aida L on Unsplash)",
        "dAdd": "2022-08-19",
        "dSrc": "2022-08-19",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Teslenko Oleg",
        "aUrl": "https://medium.com/@teslenkooleg2017",
        "spkrs": ["Teslenko Oleg"],
        "tags": ["Pipes", "Async Pipe"]
      },
      {
        "slug": "2022-08-19-D",
        "type": "blog",
        "title": "Simple Guide to Publishing Angular Libraries",
        "url": "https://medium.com/runic-software/simple-guide-to-publishing-angular-libraries-6ef24447f90b",
        "desc": "A subject that is far from either easy or well documented\n(photo: by Michal Matlon on Unsplash)",
        "dAdd": "2022-08-19",
        "dSrc": "2022-08-18",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Paul Harwood",
        "aUrl": "",
        "spkrs": ["Paul Harwood"],
        "tags": ["Libraries"]
      },
      {
        "slug": "2022-08-19-E",
        "type": "podcast",
        "dur": "44",
        "title": "Monorepos, Linting, and CI, Oh My! - AiA 354",
        "url": "https://topenddevs.com/podcasts/adventures-in-angular/episodes/monorepos-linting-and-ci-oh-my-aia-354",
        "desc": "Today on the show, Charles and Subrat interview Miroslav Jonas to discuss various approaches related to monorepos, linting and CI.  Enjoy this broad conversation as the panel shares their industry insights on these various topics and strategies you can start to implement today.",
        "dAdd": "2022-08-19",
        "dSrc": "2022-08-18",
        "srcSite": "DevChat.tv",
        "srcUrl": "https://devchat.tv",
        "aName": "Adventures In Angular",
        "aUrl": "https://topenddevs.com/podcasts/adventures-in-angular/",
        "spkrs": ["Miroslav Jonas"],
        "tags": ["Monorepos", "CI/CD"]
      },
      {
        "slug": "2022-08-19-F",
        "type": "video",
        "dur": "4",
        "title": "#7.4 - [ngSwitch] Example - Structural Directive - Angular Series",
        "url": "https://www.youtube.com/watch?v=a1iwmZ1lzUQ",
        "desc": "A simple example to understand how Structural Directive ngSwitch works.",
        "dAdd": "2022-08-19",
        "dSrc": "2022-08-19",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "SIMPL Academy",
        "aUrl": "https://www.youtube.com/channel/UCGB1Qg0oq4Ar4h6rzW0vzdA/videos",
        "spkrs": [],
        "tags": ["Directives", "*ngSwitch"]
      },
      {
        "slug": "2022-08-19-G",
        "type": "video",
        "dur": "6",
        "title": "Angular Logout functionality | Proper way to destroy session with live example | Angular 14 series",
        "url": "https://www.youtube.com/watch?v=IQ7fVLOom-k",
        "desc": "This is part 11 of angular 14 series and in this session I have explained about the logout functionality with an practical and live example.",
        "dAdd": "2022-08-19",
        "dSrc": "2022-08-19",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Beginner 2 Expert",
        "aUrl": "https://www.youtube.com/c/Beginner2Expert/videos",
        "spkrs": ["Biswajit Jana"],
        "tags": ["Auth"]
      },
      {
        "slug": "2022-08-19-H",
        "type": "blog",
        "title": "Short Intro to Angular",
        "url": "https://damaris-goebel.medium.com/short-intro-to-angular-88b5185a4a58",
        "desc": "Angular is the modern web developer's platform, according to their website. Google released the Angular version 1.0 in the year 2010. Angular version 2.0 was launched in September 2016 as a complete rewrite of AngularJS.",
        "dAdd": "2022-08-19",
        "dSrc": "2022-08-19",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Damaris Gobel",
        "aUrl": "https://damaris-goebel.medium.com",
        "spkrs": ["Damaris Gobel"],
        "tags": []
      },
      {
        "slug": "2022-08-19-J",
        "type": "video",
        "dur": "19",
        "title": "ngOnChanges | Parent to child communication | Introduction | Angular 14 | Part 2",
        "url": "https://www.youtube.com/watch?v=xeysVLf20h8",
        "desc": " In this video we will learn What is ngOnChanges in Angular. How to use ngOn changes in Angular. How to track ngOnChanges in Angular. What is the purpose of ngOnChanges. ngOnChanges with an example. Error handling and Other real time scenarios",
        "dAdd": "2022-08-19",
        "dSrc": "2022-08-19",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "TechshareSKK",
        "aUrl": "https://www.youtube.com/channel/UCD8gC85u512FeCFzRV4Ll-A/videos",
        "spkrs": ["Sai Kumar Korthivada"],
        "tags": ["Lifecycle Hooks", "ngOnChanges()", "Data Transfer", "@Input"]
      },
      {
        "slug": "2022-08-19-K",
        "type": "video",
        "dur": "10",
        "title": "Service provider: useFactory | Angular Tutorial",
        "url": "https://www.youtube.com/watch?v=9j22qTf1mbQ",
        "desc": "",
        "dAdd": "2022-08-19",
        "dSrc": "2022-08-19",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "WebGentle",
        "aUrl": "https://www.youtube.com/c/WebGentle/videos",
        "spkrs": ["Nitish Kumar"],
        "tags": ["useFactory"]
      },
      {
        "slug": "2022-08-19-L",
        "type": "video",
        "dur": "42",
        "title": "0.7 - Scully with Aaron Frost",
        "url": "https://www.youtube.com/watch?v=I5kfTAJ3GnU",
        "desc": "",
        "dAdd": "2022-08-19",
        "dSrc": "2022-08-19",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "CodingCatDev",
        "aUrl": "https://www.youtube.com/c/CodingCatDev/videos",
        "spkrs": ["Aaron Frost"],
        "tags": ["Scully"]
      },
      {
        "slug": "2022-08-19-M",
        "type": "video",
        "dur": "57",
        "title": "18 techniques for performance optimizing Angular apps (with Michael Hladky)",
        "url": "https://www.youtube.com/watch?v=1qSYzOmQfw8",
        "desc": " In this episode, we are with Michael Hladky, who will talk about making your Angular apps as fast as possible using 18 techniques including zone-less, faster bootstrap, more precise change detection, and RxAngular.",
        "dAdd": "2022-08-19",
        "dSrc": "2022-08-19",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Christian Lydemann",
        "aUrl": "https://www.youtube.com/c/ChristianLydemann/videos",
        "spkrs": ["Christian Lydemann", "Michael Hladky"],
        "tags": ["Performance", "NgZone", "Change Detection"]
      }
    ]
  },
  {
    "date": "2022-08-20",
    "dailyPosts": [
      {
        "slug": "2022-08-20-A",
        "type": "blog",
        "title": "Progressive Reactivity with NgRx/Component-Store, Akita, Elf, RxAngular and RxJS",
        "url": "https://dev.to/this-is-angular/choosing-a-state-management-library-for-progressive-reactivity-in-angular-21j6",
        "desc": "In this series I came up with 3 rules to achieve progressive reactivity. Following them reduced the code for NgRx/Component-Store by 12%, Akita by 9%, Elf by 13%, RxAngular by 7%, and RxJS ('Subjects in a Service') by 22%. Here they are again:",
        "dAdd": "2022-08-20",
        "dSrc": "2022-08-13",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Mike Pearson",
        "aUrl": "https://dev.to/mfp22",
        "spkrs": ["Mike Pearson"],
        "tags": ["NgRx", "ComponentStore", "RxJS"]
      },
      {
        "slug": "2022-08-20-B",
        "type": "video",
        "dur": "15",
        "title": "6 Effective Ways to Unsubscribe in RxJS",
        "url": "https://www.youtube.com/watch?v=oFFV-bXcP4A",
        "desc": "Let's talk about the top 6 ways to handle unsubscribing in RxJS, followed by a discussion on what happens when you don't manage them properly!",
        "dAdd": "2022-08-20",
        "dSrc": "2022-08-18",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Byte This!",
        "aUrl": "https://www.youtube.com/channel/UC59nwQiE_9_mI-HGmzWi-bw/videos",
        "spkrs": [],
        "tags": ["RxJS", "Subscriptions"]
      },
      {
        "slug": "2022-08-20-C",
        "type": "blog",
        "title": "How to apply Material theme colors for your Angular Component",
        "url": "https://medium.com/@thecodinganalyst/how-to-apply-material-theme-colors-for-your-angular-component-eda2aeb057be",
        "desc": "TLDR; Create a @mixin to receive the $theme as a parameter, so that you can get the colors you need from the $theme and apply it to your css selectors. Then include the mixin into your styles.scss.",
        "dAdd": "2022-08-20",
        "dSrc": "2022-08-20",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Dennis",
        "aUrl": "https://medium.com/@thecodinganalyst",
        "spkrs": [],
        "tags": ["Angular Material", "Theming"]
      },
      {
        "slug": "2022-08-20-D",
        "type": "blog",
        "title": "What is SSR and SSG in Angular?",
        "url": "https://medium.com/@jitendradprajapati/what-is-ssr-and-ssg-in-angular-74ae399fe07d",
        "desc": "Why I am writing this article?\n\nRecently I worked on the website for Ashutec which is built using Angular 13. It's a public face website site so there was a requirement to make it SEO-friendly and improve Initial page load time.(photo: by frank mckenna on Unsplash)",
        "dAdd": "2022-08-20",
        "dSrc": "2022-08-20",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Jitendra Prajapati",
        "aUrl": "https://medium.com/@jitendradprajapati",
        "spkrs": ["Jitendra Prajapati"],
        "tags": ["SSR", "SEO"]
      },
      {
        "slug": "2022-08-20-E",
        "type": "blog",
        "title": "What's New in Angular 14? Here Are the Highlights",
        "url": "https://medium.com/geekculture/whats-new-in-angular-14-here-are-the-highlights-3bf0691edbe3",
        "desc": "Angular version 14 has arrived. This is a new major version of the popular front-end framework, and it comes with some exciting new features and improvements.",
        "dAdd": "2022-08-20",
        "dSrc": "2022-08-20",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Akash Chauhan",
        "aUrl": "https://medium.com/@akchauhan556",
        "spkrs": ["Akash Chauhan"],
        "tags": []
      },
      {
        "slug": "2022-08-20-F",
        "type": "video",
        "dur": "16",
        "title": "Angular Lazy Loading Explained",
        "url": "https://www.youtube.com/watch?v=r4QOinTrzqw",
        "desc": "",
        "dAdd": "2022-08-20",
        "dSrc": "2022-08-20",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Ganesh Pilli",
        "aUrl": "https://www.youtube.com/c/GaneshPilli/videos",
        "spkrs": ["Ganesh Pilli"],
        "tags": ["Lazy Loading"]
      },
      {
        "slug": "2022-08-20-G",
        "type": "video",
        "dur": "26",
        "title": "Build your first MEAN Application - Part 1 of 4: Angular Single Page Application",
        "url": "https://www.youtube.com/watch?v=YHGm05BMt3U",
        "desc": "In this 4-part series we will look at how to create a MEAN application. A MEAN application uses Mongo DB, Express JS, Angular and Node JS to create a full-stack application. This first part of the series will create the foundations of our Angular single page application. We will create an application to store a personal diary that displays our posts in a table. We will be able to add, delete and update posts within the application and to store the data in an array.",
        "dAdd": "2022-08-20",
        "dSrc": "2022-08-20",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Aneesh Mistry",
        "aUrl": "https://www.youtube.com/c/AneeshMistry/videos",
        "spkrs": ["Aneesh Mistry"],
        "tags": []
      },
      {
        "slug": "2022-08-20-H",
        "type": "blog",
        "title": "Workflow of Angular",
        "url": "https://medium.com/@vijay310301s/workflow-of-angular-56750dfe11cd",
        "desc": "This blog explains the flow that happens to display the angular application in the browser which cannot be seen but can be aware of, in order to get a better understanding of the Angular application and to improve debugging.",
        "dAdd": "2022-08-20",
        "dSrc": "2022-08-20",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Vijay S",
        "aUrl": "http://medium.com/@vijay310301s",
        "spkrs": [],
        "tags": []
      },
      {
        "slug": "2022-08-20-J",
        "type": "video",
        "dur": "26",
        "title": "Angular reactive forms - Part 1",
        "url": "https://www.youtube.com/watch?v=KhJoIIuqvKw",
        "desc": "In this video we are going to learn how to create basic reactive form in Angular. Also we are going to learn about Form Control and Form Group.",
        "dAdd": "2022-08-20",
        "dSrc": "2022-08-20",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Bits and Bytes",
        "aUrl": "https://www.youtube.com/channel/UC4w12aiYyyYGqFzIkBlHlBQ/videos",
        "spkrs": [],
        "tags": ["Forms", "Reactive Forms"]
      },
      {
        "slug": "2022-08-20-K",
        "type": "blog",
        "title": "Angular app i18n: ngx-translate with custom TranslateParser-Hyphenation",
        "url": "https://medium.com/@rado.sabo/angular-app-i18n-ngx-translate-with-custom-translateparser-hyphenation-8be428c77117",
        "desc": "I have already implemented ngx-translate library into my project by following steps from this ngx-translate/core README.md file. https://github.com/ngx-translate/core",
        "dAdd": "2022-08-20",
        "dSrc": "2022-08-20",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Rado",
        "aUrl": "https://medium.com/@rado.sabo",
        "spkrs": [],
        "tags": ["Internationalization"]
      },
      {
        "slug": "2022-08-20-L",
        "type": "blog",
        "title": "How to access Angular component from Testcafe E2E test",
        "url": "https://medium.com/@ilanadasha/communicating-angular-components-for-e2e-testing-with-testcafe-9b2cb4b94027",
        "desc": "When it comes to E2E testing, it is crucial to start all tests from the same clean state and configuration and without any leftovers from the previous run, unless your test intend to test that and even then, you probably would like to control what specific configuration use in each test.",
        "dAdd": "2022-08-20",
        "dSrc": "2022-08-20",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Ilan Adasha",
        "aUrl": "https://medium.com/@ilanadasha",
        "spkrs": ["Ilan Adasha"],
        "tags": ["Testing"]
      },
      {
        "slug": "2022-08-20-M",
        "type": "blog",
        "title": "Angular Service Integration (Adding service into an angular app) (Learn it in 10 Steps)",
        "url": "https://mryenagandula.medium.com/angular-service-integration-adding-service-into-an-angular-app-1bdb0220c12c",
        "desc": "This project will explain to you, How to integrate the pokeman API inside the Angular app and service integration",
        "dAdd": "2022-08-20",
        "dSrc": "2022-08-20",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Srikanth Y",
        "aUrl": "https://mryenagandula.medium.com",
        "spkrs": [],
        "tags": []
      },
      {
        "slug": "2022-08-20-N",
        "type": "video",
        "dur": "14",
        "title": "Getter and Setter in Angular | Angular Tutorial",
        "url": "https://www.youtube.com/watch?v=YPrQEEIA1NQ",
        "desc": "",
        "dAdd": "2022-08-20",
        "dSrc": "2022-08-20",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "WebGentle",
        "aUrl": "https://www.youtube.com/c/WebGentle/videos",
        "spkrs": ["Nitish Kumar"],
        "tags": ["Getters/Setters"]
      },
      {
        "slug": "2022-08-10-P",
        "type": "video",
        "dur": "7",
        "title": "Angular For Beginners - 29. ngContainer vs. ngTemplate vs. ngContent",
        "url": "https://www.youtube.com/watch?v=VckwZSMetRA",
        "desc": "",
        "dAdd": "2022-08-10",
        "dSrc": "2022-08-10",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Teddy Smith",
        "aUrl": "https://www.youtube.com/c/TeddySmithNC/videos",
        "spkrs": ["Teddy Smith"],
        "tags": ["<ng-container>", "<ng-template>", "<ng-content>"]
      },
      {
        "slug": "2022-08-20-Q",
        "type": "video",
        "dur": "7",
        "title": "Angular Pipes - Brief Explanation",
        "url": "https://www.youtube.com/watch?v=sMk1qy7eaMk",
        "desc": " Brief and concise explanation of what pipes are in angular and how we utilize them to make our development easier.",
        "dAdd": "2022-08-20",
        "dSrc": "2022-08-20",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "LusioCoding",
        "aUrl": "https://www.youtube.com/channel/UCWz3YMSxKAa_-xUD3mN9fUQ/videos",
        "spkrs": [],
        "tags": ["Pipes"]
      },
      {
        "slug": "2022-08-20-R",
        "type": "video",
        "dur": "36",
        "title": "map/concatMap/mergeMap/switchMap/exhaustMap - Rxjs Transformation operators in Angular 14 tutorial",
        "url": "https://www.youtube.com/watch?v=zkvxqPUASfk",
        "desc": "We explore the different tranformation operators which are available with the latest version of Rxjs using an angular 14 applications. The below operators are explored: map, concatMap, mergeMap, switchMap, exhaustMap, buffer, bufferCount, bufferTime, bufferToggle, window, windowCount, windowTime, windowToggle, windowWhen, expand, groupBy, pairwise, scan, mergeScan and switchScan",
        "dAdd": "2022-08-20",
        "dSrc": "2022-08-20",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "JS Frameworks",
        "aUrl": "https://www.youtube.com/c/JSFrameworks/videos",
        "spkrs": [],
        "tags": ["RxJS", "map()", "concatMap()", "mergeMap()", "exhaustMap()"]
      }
    ]
  },
  {
    "date": "2022-08-21",
    "dailyPosts": [
      {
        "slug": "2022-08-21-A",
        "type": "blog",
        "title": "Adding Type Safety to Angular Material Dialog",
        "url": "https://medium.com/@htomar/adding-type-safety-to-angular-material-dialog-%EF%B8%8F-45d72b8d16b",
        "desc": "Let's make mat-dialog check for the correct data types.",
        "dAdd": "2022-08-21",
        "dSrc": "2022-08-20",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Harshit Tomar",
        "aUrl": "https://medium.com/@htomar",
        "spkrs": ["Harshit Tomar"],
        "tags": ["Angular Material", "Dialog"]
      },
      {
        "slug": "2022-08-21-B",
        "type": "blog",
        "title": "Angular Material Table With Search by Query Params Using Node JS API (Learn it in 28 Steps includes Filter and Search- MrYenagandula)",
        "url": "https://mryenagandula.medium.com/angular-material-table-with-search-by-query-params-using-node-js-api-learn-it-in-28-steps-includes-93c1062f423",
        "desc": "Please find the below steps to show the Angular Material table with filters and NodeJS API and apply search and filter in Angular application.",
        "dAdd": "2022-08-21",
        "dSrc": "2022-08-20",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Srikanth Y",
        "aUrl": "https://mryenagandula.medium.com",
        "spkrs": [],
        "tags": ["Angular Material", "Query Params"]
      },
      {
        "slug": "2022-08-21-C",
        "type": "blog",
        "title": "Clean up your Components using Directives!",
        "url": "https://medium.com/@stellar_aquamarine_cricket_607/clean-up-your-components-using-directives-8706bf233345",
        "desc": "I've been using Angular for a while (since version 2), but I had never put enough effort into understanding how to make out the most of directives; I occasionally used them, but not as frequently as I should have been.",
        "dAdd": "2022-08-21",
        "dSrc": "2022-08-21",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Jamal Soueidan",
        "aUrl": "https://medium.com/@stellar_aquamarine_cricket_607",
        "spkrs": ["Jamal Soueidan"],
        "tags": ["Directives", "Custom"]
      },
      {
        "slug": "2022-08-21-D",
        "type": "video",
        "dur": "8",
        "title": "Decentralized... Backend? Building An Angular dApp With OrbitDB And IPFS",
        "url": "https://www.youtube.com/watch?v=O7fxxp_q0es",
        "desc": "I built a decentralized, p2p message client with no backend server that runs entirely in the browser.",
        "dAdd": "2022-08-21",
        "dSrc": "2022-08-21",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Shane Duffy",
        "aUrl": "https://www.youtube.com/channel/UCYLo70tzoGibx13p9AjddfA/videos",
        "spkrs": ["Shane Duffy"],
        "tags": []
      },
      {
        "slug": "2022-08-21-E",
        "type": "blog",
        "title": "Clean Architecture in Frontend",
        "url": "https://dev.to/alexey_karpov_b8cab9c09ab/clean-architecture-in-frontend-1c77",
        "desc": "I wanted to share several insights that I found helpful for large-scale front-end applications. I want to talk about ideas that proved reliable in practice. At the same time, I pursue simplicity in my explanations.",
        "dAdd": "2022-08-21",
        "dSrc": "2022-08-21",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Alexey Karpov",
        "aUrl": "https://dev.to/alexey_karpov_b8cab9c09ab",
        "spkrs": ["Alexey Karpov"],
        "tags": ["Architecture"]
      },
      {
        "slug": "2022-08-21-F",
        "type": "video",
        "dur": "10",
        "title": "Tweeks of ngOnChanges using objects | Parent to child communication | Angular 14 | Part 3",
        "url": "https://www.youtube.com/watch?v=RktFGb2dtb4",
        "desc": "In this video we will learn What are the different tweeks and problems we face when we are using an object as data passage.\n1. What are the problems we face when we send an object from parent to child.\n2. When we update an object how does ngOnChanges behaves.\n3. Life Cycle hooks\n4. How to resolve the problems when we are using ngOnChanges.",
        "dAdd": "2022-08-21",
        "dSrc": "2022-08-21",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "TechshareSKK",
        "aUrl": "https://www.youtube.com/channel/UCD8gC85u512FeCFzRV4Ll-A/videos",
        "spkrs": ["Sai Kumar Korthivada"],
        "tags": ["Data Transfer", "ngOnChanges()", "Lifecycle Hooks"]
      },
      {
        "slug": "2022-08-21-G",
        "type": "video",
        "dur": "5",
        "title": "Different relationships among Angular Components | Angular Tutorial",
        "url": "https://www.youtube.com/watch?v=g-NTt3ugKTI",
        "desc": "",
        "dAdd": "2022-08-21",
        "dSrc": "2022-08-21",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "WebGentle",
        "aUrl": "https://www.youtube.com/c/WebGentle/videos",
        "spkrs": ["Nitish Kumar"],
        "tags": ["Components"]
      },
      {
        "slug": "2022-08-21-H",
        "type": "video",
        "dur": "29",
        "title": "Angular Sudoku 3 - Storybook and CSS Debugging",
        "url": "https://www.youtube.com/watch?v=jbI_kwlQ320",
        "desc": "We show how to pin versions using volta. We use Storybook to work on the CellComponent and the GridComponent. We use CSS variables to size the grid appropriately. We use a couple of different methods to debug CSS issues.",
        "dAdd": "2022-08-21",
        "dSrc": "2022-08-21",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Jason Warner",
        "aUrl": "https://www.youtube.com/channel/UCzF8hdwni3db3UZ7P3uKBkQ/videos",
        "spkrs": ["Jason Warner"],
        "tags": ["Storybook"]
      },
      {
        "slug": "2022-08-21-J",
        "type": "blog",
        "title": "How to publish an Angular app to Firebase Hosting using Github Actions",
        "url": "https://dev.to/felipemsfg/how-to-publish-an-angular-app-to-firebase-hosting-using-github-actions-6cf",
        "desc": "The purpose of this post is to publish an Angular application within a Firebase project using the Firebase Hosting product. To automate the deploy we will use a Github Actions pipeline that will be triggered in every commit on the main branch.",
        "dAdd": "2022-08-21",
        "dSrc": "2022-08-21",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Felipe Marques",
        "aUrl": "https://dev.to/felipemsfg",
        "spkrs": ["Felipe Marques"],
        "tags": ["Firebase", "Deployment", "GitHub Actions"]
      }
    ]
  },
  {
    "date": "2022-08-22",
    "dailyPosts": [
      {
        "slug": "2022-08-22-A",
        "type": "blog",
        "title": "Multilingual Angular App hosted on Firebase and Surge with the same build",
        "url": "https://dev.to/ayyash/multilingual-angular-app-hosted-on-firebase-and-surge-with-the-same-build-3gnn",
        "desc": "Last time we figured out a way to prefix all routes without changing the base href, using APP_BASE_HREF token in Angular, which helped us host on Netlify a same-build multilingual App. Today we shall try Firebase and Surge.sh.",
        "dAdd": "2022-08-22",
        "dSrc": "2022-08-21",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Ayyash",
        "aUrl": "https://medium.com/@aayyash",
        "spkrs": [],
        "tags": ["Firebase"]
      },
      {
        "slug": "2022-08-22-B",
        "type": "video",
        "dur": "11",
        "title": "Auth Guard | Angular Security | How to protect component or module from an unauthorize user",
        "url": "https://www.youtube.com/watch?v=S5XCvFWV0IE",
        "desc": "This is part 12 of Angular 14 series and in this session I have explained about the auth guard, How to protect component or module from an unauthorize user.",
        "dAdd": "2022-08-22",
        "dSrc": "2022-08-22",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Beginner 2 Expert",
        "aUrl": "https://www.youtube.com/c/Beginner2Expert/videos",
        "spkrs": ["Biswajit Jana"],
        "tags": ["Routing", "Route Guards"]
      },
      {
        "slug": "2022-08-22-C",
        "type": "blog",
        "title": "Render content based on viewport size with a directive",
        "url": "https://dev.to/ajuni880/render-content-based-on-viewport-size-1440",
        "desc": "In this post I am going to describe how to use angular https://material.angular.io/cdk/layout/overview to build a structural directive that controls the rendering of components.",
        "dAdd": "2022-08-22",
        "dSrc": "2022-08-22",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Junaid Ramzan",
        "aUrl": "https://dev.to/ajuni880",
        "spkrs": ["Junaid Ramzan"],
        "tags": ["Directives", "Custom"]
      },
      {
        "slug": "2022-08-22-D",
        "type": "blog",
        "title": "Add Source Maps locally",
        "url": "https://blog.jonandonicastelo.com/add-source-maps-locally",
        "desc": "The next explanations are based on this project. To get the most of this article it is recommended to not only read it, but to practice creating a similar project.",
        "dAdd": "2022-08-22",
        "dSrc": "2022-08-22",
        "srcSite": "Hashnode",
        "srcUrl": "https://hashnode.com/n/angular",
        "aName": "Jon Andoni Castelo Melendez",
        "aUrl": "https://hashnode.com/@jonandonicastelo",
        "spkrs": ["Jon Andoni Castelo Melendez"],
        "tags": ["Source Maps"]
      },
      {
        "slug": "2022-08-22-E",
        "type": "video",
        "dur": "7",
        "title": "Tweeks of ngOnChanges using array | Parent to child communication | Angular 14 | Part 4",
        "url": "https://www.youtube.com/watch?v=vLhJPi3C74Y",
        "desc": "In this video we will learn What are the different tweeks and problems we face when we are using an array as data passage.\n1. What are the problems we face when we send an array from parent to child.\n2. When we update an array how does ngOnChanges behaves.\n3. Life Cycle hooks\n4. How to resolve the problems when we are using ngOnChanges with array.",
        "dAdd": "2022-08-22",
        "dSrc": "2022-08-22",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "TechshareSKK",
        "aUrl": "https://www.youtube.com/channel/UCD8gC85u512FeCFzRV4Ll-A/videos",
        "spkrs": ["Sai Kumar Korthivada"],
        "tags": ["Data Transfer", "ngOnChanges()", "Lifecycle Hooks"]
      },
      {
        "slug": "2022-08-22-F",
        "type": "podcast",
        "dur": "56",
        "title": "S2E30 | Mike Pearson on Just Trying Things and StateAdapt",
        "url": "https://www.spreaker.com/user/14532324/s2e30-mike-pearson-on-just-try-things-st?utm_campaign=episode-title&utm_medium=app&utm_source=widget",
        "desc": "For his work on State Adapt we have Michael Pearson on the show today. We want to learn more about innovating & creating, but especially why and how you can “just try things” even when imposter syndrome gets the better of you.",
        "dAdd": "2022-08-22",
        "dSrc": "2022-08-22",
        "srcSite": "Spreaker",
        "srcUrl": "https://spreaker.com",
        "aName": "Angular Experience",
        "aUrl": "https://angular-experience.web.app/episodes",
        "spkrs": ["Mike Pearson"],
        "tags": []
      },
      {
        "slug": "2022-08-22-G",
        "type": "blog",
        "title": "Building Angular Electron Application",
        "url": "https://dev.to/satyakarki/building-angular-electron-application-for-cross-platform-1f58",
        "desc": "Electron is a free and open-source framework that is developed and maintained by GitHub. You can utilize this framework to design desktop applications using the web technologies such as HTML, JavaScript, CSS as well as other frontend frameworks and Web Assembly.",
        "dAdd": "2022-08-22",
        "dSrc": "2022-08-22",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Satya Karki",
        "aUrl": "https://dev.to/satyakarki",
        "spkrs": ["Satya Karki"],
        "tags": ["Electron"]
      },
      {
        "slug": "2022-08-22-H",
        "type": "video",
        "dur": "10",
        "title": "Get to Know the 2022 ng-conf Speakers | Alain Chautard | ng-conf 2022",
        "url": "https://www.youtube.com/watch?v=aAf7W1nuWCA",
        "desc": "",
        "dAdd": "2022-08-22",
        "dSrc": "2022-08-22",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "ng-conf",
        "aUrl": "https://www.youtube.com/c/ngconfonline/videos",
        "spkrs": ["Alain Chautard"],
        "tags": []
      },
      {
        "slug": "2022-08-22-J",
        "type": "video",
        "dur": "15",
        "title": "@Input in Angular | Sharing data from parent to child component | Angular Tutorial",
        "url": "https://www.youtube.com/watch?v=b5xp0UpiW5w",
        "desc": "",
        "dAdd": "2022-08-22",
        "dSrc": "2022-08-22",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "WebGentle",
        "aUrl": "https://www.youtube.com/c/WebGentle/videos",
        "spkrs": ["Nitish Kumar"],
        "tags": ["Data Transfer", "@Input"]
      },
      {
        "slug": "2022-08-22-K",
        "type": "blog",
        "title": "Traveling to ng-conf and visiting US for the first time",
        "url": "https://blog.kuncevic.dev/traveling-to-ng-conf-and-visiting-us-for-the-first-time",
        "desc": "The ng-conf has a long history and has always been my dream to visit. I was always watching the live event each year but participating in person is an absolutely different experience. Finally in early 2020 I've decided to purchase an early bird ticket and was so excited about it, but everyone is aware of what's happening next - the COVID-2019 pandemic and so all in-person events had to be postponed.",
        "dAdd": "2022-08-22",
        "dSrc": "2022-08-22",
        "srcSite": "Hashnode",
        "srcUrl": "https://hashnode.com/n/angular",
        "aName": "Aliaksei Kuncevic",
        "aUrl": "https://hashnode.com/@kuncevic",
        "spkrs": ["Aliaksei Kuncevic"],
        "tags": []
      },
      {
        "slug": "2022-08-22-L",
        "type": "video",
        "dur": "48",
        "title": "Cypress Component Testing in Angular",
        "url": "https://www.youtube.com/watch?v=wbsTfi4V0Jw",
        "desc": "This video introduces you to Cypress Component testing in Angular and also argues that it will be the way how to test components in the near future.",
        "dAdd": "2022-08-22",
        "dSrc": "2022-08-22",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Rainer Hahnekamp",
        "aUrl": "https://www.youtube.com/c/RainerHahnekamp/videos",
        "spkrs": ["Rainer Hahnekamp"],
        "tags": ["Testing", "Cypress"]
      },
      {
        "slug": "2022-08-22-M",
        "type": "blog",
        "title": "A reusable cascade animation with Angular Animation",
        "url": "https://dev.to/renancferro/a-reusable-cascade-animation-with-angular-animation-1h4d",
        "desc": "Hi guys, how is everything??\n\nHave you ever thought about how to make the user experience better when we have a list of cards!?\n\nToday, I gonna show how we can do it with a card 'cascade' animation and have a nice card page using the power of Angular Animations!",
        "dAdd": "2022-08-22",
        "dSrc": "2022-08-22",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Renan C. Ferro",
        "aUrl": "https://dev.to/renancferro",
        "spkrs": ["Renan C. Ferro"],
        "tags": ["Animations"]
      }
    ]
  },
  {
    "date": "2022-08-23",
    "dailyPosts": [
      {
        "slug": "2022-08-23-A",
        "type": "blog",
        "title": "An Angular's ::ng-deep alternative",
        "url": "https://medium.com/@julien.vaslet/an-angulars-ng-deep-alternative-f1d866bb6b60",
        "desc": "Have you ever been working on an Angular project with a lot of ::ng-deep in it? Even if deprecated, removing them is not always an easy task.",
        "dAdd": "2022-08-23",
        "dSrc": "2022-08-21",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Julien Vaslet",
        "aUrl": "https://medium.com/@julien.vaslet",
        "spkrs": ["Julien Vaslet"],
        "tags": ["::ng-deep", "Styles"]
      },
      {
        "slug": "2022-08-23-B",
        "type": "blog",
        "title": "Secure and stabilize your web production build with Firebase Channel Preview",
        "url": "https://medium.com/@retzd/secure-and-stabilize-your-web-production-build-with-firebase-channel-preview-88f5ea504f53",
        "desc": "It is important to make sure our in development code or features to be more stable and free error before we really deploy it on the production, in that case we need an additional phase where we can deploy our build somewhere else before we deploy it on real production.",
        "dAdd": "2022-08-23",
        "dSrc": "2022-08-21",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "R Surahutomo Aziz Pradana",
        "aUrl": "https://medium.com/@retzd",
        "spkrs": ["R Surahutomo Aziz Pradana"],
        "tags": ["Firebase"]
      },
      {
        "slug": "2022-08-23-C",
        "type": "blog",
        "title": "Fusio as backend to build type-safe APIs for your Angular app",
        "url": "https://chriskapp.medium.com/fusio-as-backend-to-build-type-safe-apis-for-your-angular-app-e652890ba65b",
        "desc": "This post will cover how you can use Fusio as backend for your Angular app. Fusio is an open source API management system which helps to build and manage great APIs.",
        "dAdd": "2022-08-23",
        "dSrc": "2022-08-21",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Christoph Kappestein",
        "aUrl": "https://chriskapp.medium.com",
        "spkrs": ["Christoph Kappestein"],
        "tags": []
      },
      {
        "slug": "2022-08-23-D",
        "type": "blog",
        "title": "How to create a real-time web application using FastAPI, Angular and MongoDB",
        "url": "https://medium.com/@jobdeleij/how-to-create-a-real-time-web-application-using-fastapi-angular-and-mongodb-d335108d520d",
        "desc": "Part 4: Local deployment — Docker\n\nHi there! My name is Job and in this series I'm going to guide you through my journey of creating a real-time web application. In this multipart guide I tackle all aspects and learnings of creating a real-time web application. In this fourth part I set up the local deployment of our API created in Part 1, the MongoDB database from Part 2, and the Angular frontend from Part 3 using Docker (and just one command!).",
        "dAdd": "2022-08-23",
        "dSrc": "2022-08-23",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Job Deleij",
        "aUrl": "https://medium.com/@jobdeleij",
        "spkrs": ["Job Deleij"],
        "tags": ["MongoDB", "Docker"]
      },
      {
        "slug": "2022-08-23-E",
        "type": "blog",
        "title": "Design systems: Prototyping on steroids",
        "url": "https://uxdesign.cc/design-systems-prototyping-on-steroids-5056d001de50",
        "desc": "As a lead designer at Metrixlab, I learned how to create hi-fi prototypes faster by setting up a design system from scratch. This article will explain how you can do this too.",
        "dAdd": "2022-08-23",
        "dSrc": "2022-08-22",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Daniel De Wit",
        "aUrl": "https://medium.com/@danieldewit",
        "spkrs": ["Daniel De Wit"],
        "tags": []
      },
      {
        "slug": "2022-08-23-F",
        "type": "blog",
        "title": "Accessible Lists Made Easy Using the Angular CDK Listbox Module",
        "url": "https://netbasal.com/accessible-lists-made-easy-using-the-angular-cdk-listbox-module-62ec21691742",
        "desc": "Although we get most of the functionality from Angular CDK, we need to write quite a bit of code to build accessible lists. One of my previous articles discusses it in more detail:",
        "dAdd": "2022-08-23",
        "dSrc": "2022-08-22",
        "srcSite": "Medium",
        "srcUrl": "https://medium.com",
        "aName": "Netanel Basal",
        "aUrl": "https://netbasal.medium.com",
        "spkrs": ["Netanel Basal"],
        "tags": ["Angular CDK"]
      },
      {
        "slug": "2022-08-23-G",
        "type": "blog",
        "title": "Ng-News: Episode 22/33",
        "url": "https://dev.to/rainerhahnekamp/ng-news-episode-2233-h5d",
        "desc": "",
        "dAdd": "2022-08-23",
        "dSrc": "2022-08-23",
        "srcSite": "DEV Community",
        "srcUrl": "https://dev.to",
        "aName": "Rainer Hahnekamp",
        "aUrl": "https://dev.to/rainerhahnekamp",
        "spkrs": ["Rainer Hahnekamp"],
        "tags": []
      },
      {
        "slug": "2022-08-23-H",
        "type": "blog",
        "title": "Angular Basics: Detecting Updates With the Angular OnChanges Lifecyle Hook",
        "url": "https://www.telerik.com/blogs/angular-basics-detecting-updates-onchanges-lifecyle-hook",
        "desc": "In this post, we will look into the Angular onChanges lifecycle hook and how we can use it in our workflows.",
        "dAdd": "2022-08-23",
        "dSrc": "2022-08-23",
        "srcSite": "Progress Telerik Blog",
        "srcUrl": "https://www.telerik.com/blogs/web-angular",
        "aName": "Nwose Lotanna Victor",
        "aUrl": "https://www.telerik.com/blogs/author/nwose-lotanna",
        "spkrs": ["Nwose Lotanna Victor"],
        "tags": ["ngOnChanges()", "Lifecycle Hooks"]
      },
      {
        "slug": "2022-08-23-J",
        "type": "video",
        "dur": "7",
        "title": "Angular Environmental Variables and Configuration",
        "url": "https://www.youtube.com/watch?v=o8wCvlj3IHg",
        "desc": "In an Angular application, we can use different variables/configurations on each environment by utilizing the default environment files.\n\nThis video will show you how to use a domain name for the development, production, and staging environment.",
        "dAdd": "2022-08-23",
        "dSrc": "2022-08-23",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Code Shots With Profanis",
        "aUrl": "https://www.youtube.com/c/CodeShotsWithProfanis/videos",
        "spkrs": ["Fanis Prodromou"],
        "tags": ["Environments", "Configuration"]
      },
      {
        "slug": "2022-08-23-K",
        "type": "blog",
        "title": "Simple ToDo App In Angular - part 2",
        "url": "https://lorenzozar.hashnode.dev/simple-todo-app-in-angular-part-2",
        "desc": "In the previous post, we started building a simple to-do app and we were able to log data from the input element to the console.\n\nIf you click on the Add button you should see the value of userInput in the console.",
        "dAdd": "2022-08-23",
        "dSrc": "2022-08-23",
        "srcSite": "Hashnode",
        "srcUrl": "https://hashnode.com/n/angular",
        "aName": "Lorenzo Zarantonello",
        "aUrl": "https://hashnode.com/@lorenzozar",
        "spkrs": ["Lorenzo Zarantonello"],
        "tags": []
      },
      {
        "slug": "2022-08-23-L",
        "type": "video",
        "dur": "10",
        "title": "How to upgrade to the new Angular Typed Forms!",
        "url": "https://www.youtube.com/watch?v=__g3JO7eTnI",
        "desc": "In this video, I upgrade my existing Angular Sign Up app to the new Angular Typed Forms in Angular 14. I also introduce the Form Builder syntax for building forms.",
        "dAdd": "2022-08-23",
        "dSrc": "2022-08-23",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Zoaib Khan",
        "aUrl": "https://www.youtube.com/c/ZoaibKhan/videos",
        "spkrs": ["Zoaib Khan"],
        "tags": ["Forms", "Typed Forms", "FormBuilder"]
      },
      {
        "slug": "2022-08-23-M",
        "type": "podcast",
        "dur": "54",
        "title": "This Week In Angular Podcast: Reactivity in Angular",
        "url": "https://www.youtube.com/watch?v=jLdsHsAc09Q",
        "desc": "We are discussing new reactivity patterns that could be introduced into Angular.",
        "dAdd": "2022-08-23",
        "dSrc": "2022-08-23",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Brandon Roberts",
        "aUrl": "https://www.youtube.com/c/BrandonRobertsDev",
        "spkrs": ["Brandon Roberts", "Chau Tran"],
        "tags": ["RxJS"]
      },
      {
        "slug": "2022-08-23-N",
        "type": "video",
        "dur": "79",
        "title": "Building a Realtime Trello Board with Supabase and Angular",
        "url": "https://www.youtube.com/watch?v=jmCiI_OSarA",
        "desc": "In this tutorial we will build a full blown Angular application with Supabase backend including authentication, SQL definition and realtime functionality!",
        "dAdd": "2022-08-23",
        "dSrc": "2022-08-23",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "Simon Grimm",
        "aUrl": "https://www.youtube.com/c/SimonGrimmDev/videos",
        "spkrs": ["Simon Grimm"],
        "tags": []
      },
      {
        "slug": "2022-08-23-P",
        "type": "video",
        "dur": "6",
        "title": "@Input Setter and Getter | Angular Tutorial",
        "url": "https://www.youtube.com/watch?v=t5n_sAqQSqg",
        "desc": "Angular Tutorial: You can format the @Input() data coming from parent to child component using setter and getter.",
        "dAdd": "2022-08-23",
        "dSrc": "2022-08-23",
        "srcSite": "YouTube",
        "srcUrl": "https://youtube.com",
        "aName": "WebGentle",
        "aUrl": "https://www.youtube.com/c/WebGentle/videos",
        "spkrs": ["Nitish Kumar"],
        "tags": ["@Input", "Getters/Setters"]
      }
    ]
  }
]
